
///
/// Copyright (c) 2021 Arm Limited
/// SPDX-License-Identifier: MIT
///
/// Permission is hereby granted, free of charge, to any person obtaining a copy
/// of this software and associated documentation files (the "Software"), to deal
/// in the Software without restriction, including without limitation the rights
/// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
/// copies of the Software, and to permit persons to whom the Software is
/// furnished to do so, subject to the following conditions:
///
/// The above copyright notice and this permission notice shall be included in all
/// copies or substantial portions of the Software.
///
/// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
/// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
/// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
/// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
/// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
/// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
/// SOFTWARE.
///



///
/// This assembly code has been auto-generated.
/// Don't modify it directly.
///

.data
roots:
.word   32909249 // zeta^  0 * 2^31 = 21224105^  0 * 2^31 = 1 * 2^31
.word 2147483711 // zeta^  0 * f(q^(-1) mod 2^32) * 2^31 = 21224105^  0 * 71292929 * 2^31
.word   32909249 // zeta^  0 * 2^31 = 21224105^  0 * 2^31 = 1 * 2^31
.word 2147483711 // zeta^  0 * f(q^(-1) mod 2^32) * 2^31 = 21224105^  0 * 71292929 * 2^31
.word   35458195 // zeta^128 * 2^31 = 21224105^128 * 2^31 = 6057702 * 2^31
.word  387574637 // zeta^128 * f(q^(-1) mod 2^32) * 2^31 = 21224105^128 * 71292929 * 2^31
.word   35458195 // zeta^128 * 2^31 = 21224105^128 * 2^31 = 6057702 * 2^31
.word  387574637 // zeta^128 * f(q^(-1) mod 2^32) * 2^31 = 21224105^128 * 71292929 * 2^31
.word   44770213 // zeta^ 64 * 2^31 = 21224105^ 64 * 2^31 = 16166358 * 2^31
.word 1034331227 // zeta^ 64 * f(q^(-1) mod 2^32) * 2^31 = 21224105^ 64 * 71292929 * 2^31
.word    3545473 // zeta^192 * 2^31 = 21224105^192 * 2^31 = 4070676 * 2^31
.word  260443775 // zeta^192 * f(q^(-1) mod 2^32) * 2^31 = 21224105^192 * 71292929 * 2^31
.word   32909249 // zeta^  0 * 2^31 = 21224105^  0 * 2^31 = 1 * 2^31
.word 2147483711 // zeta^  0 * f(q^(-1) mod 2^32) * 2^31 = 21224105^  0 * 71292929 * 2^31
.word   32909249 // zeta^  0 * 2^31 = 21224105^  0 * 2^31 = 1 * 2^31
.word 2147483711 // zeta^  0 * f(q^(-1) mod 2^32) * 2^31 = 21224105^  0 * 71292929 * 2^31
.word   35458195 // zeta^128 * 2^31 = 21224105^128 * 2^31 = 6057702 * 2^31
.word  387574637 // zeta^128 * f(q^(-1) mod 2^32) * 2^31 = 21224105^128 * 71292929 * 2^31
.word   35458195 // zeta^128 * 2^31 = 21224105^128 * 2^31 = 6057702 * 2^31
.word  387574637 // zeta^128 * f(q^(-1) mod 2^32) * 2^31 = 21224105^128 * 71292929 * 2^31
.word   44770213 // zeta^ 64 * 2^31 = 21224105^ 64 * 2^31 = 16166358 * 2^31
.word 1034331227 // zeta^ 64 * f(q^(-1) mod 2^32) * 2^31 = 21224105^ 64 * 71292929 * 2^31
.word    3545473 // zeta^192 * 2^31 = 21224105^192 * 2^31 = 4070676 * 2^31
.word  260443775 // zeta^192 * f(q^(-1) mod 2^32) * 2^31 = 21224105^192 * 71292929 * 2^31
.word   44770213 // zeta^ 64 * 2^31 = 21224105^ 64 * 2^31 = 16166358 * 2^31
.word 1034331227 // zeta^ 64 * f(q^(-1) mod 2^32) * 2^31 = 21224105^ 64 * 71292929 * 2^31
.word   20108763 // zeta^ 32 * 2^31 = 21224105^ 32 * 2^31 = 3531198 * 2^31
.word  225927717 // zeta^ 32 * f(q^(-1) mod 2^32) * 2^31 = 21224105^ 32 * 71292929 * 2^31
.word   16155699 // zeta^160 * 2^31 = 21224105^160 * 2^31 = 11260731 * 2^31
.word 2867950541 // zeta^160 * f(q^(-1) mod 2^32) * 2^31 = 21224105^160 * 71292929 * 2^31
.word    3545473 // zeta^192 * 2^31 = 21224105^192 * 2^31 = 4070676 * 2^31
.word  260443775 // zeta^192 * f(q^(-1) mod 2^32) * 2^31 = 21224105^192 * 71292929 * 2^31
.word   23777969 // zeta^ 96 * 2^31 = 21224105^ 96 * 2^31 = 16586522 * 2^31
.word 1061213519 // zeta^ 96 * f(q^(-1) mod 2^32) * 2^31 = 21224105^ 96 * 71292929 * 2^31
.word   43443635 // zeta^224 * 2^31 = 21224105^224 * 2^31 = 23220214 * 2^31
.word 1485640269 // zeta^224 * f(q^(-1) mod 2^32) * 2^31 = 21224105^224 * 71292929 * 2^31
.word   20108763 // zeta^ 32 * 2^31 = 21224105^ 32 * 2^31 = 3531198 * 2^31
.word  225927717 // zeta^ 32 * f(q^(-1) mod 2^32) * 2^31 = 21224105^ 32 * 71292929 * 2^31
.word   56312659 // zeta^ 16 * 2^31 = 21224105^ 16 * 2^31 = 7974996 * 2^31
.word  510244013 // zeta^ 16 * f(q^(-1) mod 2^32) * 2^31 = 21224105^ 16 * 71292929 * 2^31
.word   50428539 // zeta^144 * 2^31 = 21224105^144 * 2^31 = 11900197 * 2^31
.word 2908863877 // zeta^144 * f(q^(-1) mod 2^32) * 2^31 = 21224105^144 * 71292929 * 2^31
.word   16155699 // zeta^160 * 2^31 = 21224105^160 * 2^31 = 11260731 * 2^31
.word 2867950541 // zeta^160 * f(q^(-1) mod 2^32) * 2^31 = 21224105^160 * 71292929 * 2^31
.word   40872355 // zeta^ 80 * 2^31 = 21224105^ 80 * 2^31 = 32337348 * 2^31
.word 2068958813 // zeta^ 80 * f(q^(-1) mod 2^32) * 2^31 = 21224105^ 80 * 71292929 * 2^31
.word   17505197 // zeta^208 * 2^31 = 21224105^208 * 2^31 = 7350388 * 2^31
.word  470281299 // zeta^208 * f(q^(-1) mod 2^32) * 2^31 = 21224105^208 * 71292929 * 2^31
.word   23777969 // zeta^ 96 * 2^31 = 21224105^ 96 * 2^31 = 16586522 * 2^31
.word 1061213519 // zeta^ 96 * f(q^(-1) mod 2^32) * 2^31 = 21224105^ 96 * 71292929 * 2^31
.word   29514841 // zeta^ 48 * 2^31 = 21224105^ 48 * 2^31 = 25808113 * 2^31
.word 3798698919 // zeta^ 48 * f(q^(-1) mod 2^32) * 2^31 = 21224105^ 48 * 71292929 * 2^31
.word   46171693 // zeta^176 * 2^31 = 21224105^176 * 2^31 = 21754869 * 2^31
.word 3539370451 // zeta^176 * f(q^(-1) mod 2^32) * 2^31 = 21224105^176 * 71292929 * 2^31
.word   43443635 // zeta^224 * 2^31 = 21224105^224 * 2^31 = 23220214 * 2^31
.word 1485640269 // zeta^224 * f(q^(-1) mod 2^32) * 2^31 = 21224105^224 * 71292929 * 2^31
.word   49378579 // zeta^112 * 2^31 = 21224105^112 * 2^31 = 10121756 * 2^31
.word  647594733 // zeta^112 * f(q^(-1) mod 2^32) * 2^31 = 21224105^112 * 71292929 * 2^31
.word   37299575 // zeta^240 * 2^31 = 21224105^240 * 2^31 = 13079905 * 2^31
.word 2984342153 // zeta^240 * f(q^(-1) mod 2^32) * 2^31 = 21224105^240 * 71292929 * 2^31
.word   32909249 // zeta^  0 * 2^31 = 21224105^  0 * 2^31 = 1 * 2^31
.word 2147483711 // zeta^  0 * f(q^(-1) mod 2^32) * 2^31 = 21224105^  0 * 71292929 * 2^31
.word   32909249 // zeta^  0 * 2^31 = 21224105^  0 * 2^31 = 1 * 2^31
.word 2147483711 // zeta^  0 * f(q^(-1) mod 2^32) * 2^31 = 21224105^  0 * 71292929 * 2^31
.word   35458195 // zeta^128 * 2^31 = 21224105^128 * 2^31 = 6057702 * 2^31
.word  387574637 // zeta^128 * f(q^(-1) mod 2^32) * 2^31 = 21224105^128 * 71292929 * 2^31
.word   35458195 // zeta^128 * 2^31 = 21224105^128 * 2^31 = 6057702 * 2^31
.word  387574637 // zeta^128 * f(q^(-1) mod 2^32) * 2^31 = 21224105^128 * 71292929 * 2^31
.word   44770213 // zeta^ 64 * 2^31 = 21224105^ 64 * 2^31 = 16166358 * 2^31
.word 1034331227 // zeta^ 64 * f(q^(-1) mod 2^32) * 2^31 = 21224105^ 64 * 71292929 * 2^31
.word    3545473 // zeta^192 * 2^31 = 21224105^192 * 2^31 = 4070676 * 2^31
.word  260443775 // zeta^192 * f(q^(-1) mod 2^32) * 2^31 = 21224105^192 * 71292929 * 2^31
.word   44770213 // zeta^ 64 * 2^31 = 21224105^ 64 * 2^31 = 16166358 * 2^31
.word 1034331227 // zeta^ 64 * f(q^(-1) mod 2^32) * 2^31 = 21224105^ 64 * 71292929 * 2^31
.word   20108763 // zeta^ 32 * 2^31 = 21224105^ 32 * 2^31 = 3531198 * 2^31
.word  225927717 // zeta^ 32 * f(q^(-1) mod 2^32) * 2^31 = 21224105^ 32 * 71292929 * 2^31
.word   16155699 // zeta^160 * 2^31 = 21224105^160 * 2^31 = 11260731 * 2^31
.word 2867950541 // zeta^160 * f(q^(-1) mod 2^32) * 2^31 = 21224105^160 * 71292929 * 2^31
.word    3545473 // zeta^192 * 2^31 = 21224105^192 * 2^31 = 4070676 * 2^31
.word  260443775 // zeta^192 * f(q^(-1) mod 2^32) * 2^31 = 21224105^192 * 71292929 * 2^31
.word   23777969 // zeta^ 96 * 2^31 = 21224105^ 96 * 2^31 = 16586522 * 2^31
.word 1061213519 // zeta^ 96 * f(q^(-1) mod 2^32) * 2^31 = 21224105^ 96 * 71292929 * 2^31
.word   43443635 // zeta^224 * 2^31 = 21224105^224 * 2^31 = 23220214 * 2^31
.word 1485640269 // zeta^224 * f(q^(-1) mod 2^32) * 2^31 = 21224105^224 * 71292929 * 2^31
.word   20108763 // zeta^ 32 * 2^31 = 21224105^ 32 * 2^31 = 3531198 * 2^31
.word  225927717 // zeta^ 32 * f(q^(-1) mod 2^32) * 2^31 = 21224105^ 32 * 71292929 * 2^31
.word   56312659 // zeta^ 16 * 2^31 = 21224105^ 16 * 2^31 = 7974996 * 2^31
.word  510244013 // zeta^ 16 * f(q^(-1) mod 2^32) * 2^31 = 21224105^ 16 * 71292929 * 2^31
.word   50428539 // zeta^144 * 2^31 = 21224105^144 * 2^31 = 11900197 * 2^31
.word 2908863877 // zeta^144 * f(q^(-1) mod 2^32) * 2^31 = 21224105^144 * 71292929 * 2^31
.word   16155699 // zeta^160 * 2^31 = 21224105^160 * 2^31 = 11260731 * 2^31
.word 2867950541 // zeta^160 * f(q^(-1) mod 2^32) * 2^31 = 21224105^160 * 71292929 * 2^31
.word   40872355 // zeta^ 80 * 2^31 = 21224105^ 80 * 2^31 = 32337348 * 2^31
.word 2068958813 // zeta^ 80 * f(q^(-1) mod 2^32) * 2^31 = 21224105^ 80 * 71292929 * 2^31
.word   17505197 // zeta^208 * 2^31 = 21224105^208 * 2^31 = 7350388 * 2^31
.word  470281299 // zeta^208 * f(q^(-1) mod 2^32) * 2^31 = 21224105^208 * 71292929 * 2^31
.word   23777969 // zeta^ 96 * 2^31 = 21224105^ 96 * 2^31 = 16586522 * 2^31
.word 1061213519 // zeta^ 96 * f(q^(-1) mod 2^32) * 2^31 = 21224105^ 96 * 71292929 * 2^31
.word   29514841 // zeta^ 48 * 2^31 = 21224105^ 48 * 2^31 = 25808113 * 2^31
.word 3798698919 // zeta^ 48 * f(q^(-1) mod 2^32) * 2^31 = 21224105^ 48 * 71292929 * 2^31
.word   46171693 // zeta^176 * 2^31 = 21224105^176 * 2^31 = 21754869 * 2^31
.word 3539370451 // zeta^176 * f(q^(-1) mod 2^32) * 2^31 = 21224105^176 * 71292929 * 2^31
.word   43443635 // zeta^224 * 2^31 = 21224105^224 * 2^31 = 23220214 * 2^31
.word 1485640269 // zeta^224 * f(q^(-1) mod 2^32) * 2^31 = 21224105^224 * 71292929 * 2^31
.word   49378579 // zeta^112 * 2^31 = 21224105^112 * 2^31 = 10121756 * 2^31
.word  647594733 // zeta^112 * f(q^(-1) mod 2^32) * 2^31 = 21224105^112 * 71292929 * 2^31
.word   37299575 // zeta^240 * 2^31 = 21224105^240 * 2^31 = 13079905 * 2^31
.word 2984342153 // zeta^240 * f(q^(-1) mod 2^32) * 2^31 = 21224105^240 * 71292929 * 2^31
.word   56312659 // zeta^ 16 * 2^31 = 21224105^ 16 * 2^31 = 7974996 * 2^31
.word  510244013 // zeta^ 16 * f(q^(-1) mod 2^32) * 2^31 = 21224105^ 16 * 71292929 * 2^31
.word   35114601 // zeta^  8 * 2^31 = 21224105^  8 * 2^31 = 31442912 * 2^31
.word 2011732375 // zeta^  8 * f(q^(-1) mod 2^32) * 2^31 = 21224105^  8 * 71292929 * 2^31
.word   56661185 // zeta^136 * 2^31 = 21224105^136 * 2^31 = 25072687 * 2^31
.word 3751646015 // zeta^136 * f(q^(-1) mod 2^32) * 2^31 = 21224105^136 * 71292929 * 2^31
.word   50428539 // zeta^144 * 2^31 = 21224105^144 * 2^31 = 11900197 * 2^31
.word 2908863877 // zeta^144 * f(q^(-1) mod 2^32) * 2^31 = 21224105^144 * 71292929 * 2^31
.word   24798937 // zeta^ 72 * 2^31 = 21224105^ 72 * 2^31 = 1138528 * 2^31
.word   72843559 // zeta^ 72 * f(q^(-1) mod 2^32) * 2^31 = 21224105^ 72 * 71292929 * 2^31
.word    2433499 // zeta^200 * 2^31 = 21224105^200 * 2^31 = 27899289 * 2^31
.word 3932493349 // zeta^200 * f(q^(-1) mod 2^32) * 2^31 = 21224105^200 * 71292929 * 2^31
.word   40872355 // zeta^ 80 * 2^31 = 21224105^ 80 * 2^31 = 32337348 * 2^31
.word 2068958813 // zeta^ 80 * f(q^(-1) mod 2^32) * 2^31 = 21224105^ 80 * 71292929 * 2^31
.word   13509691 // zeta^ 40 * 2^31 = 21224105^ 40 * 2^31 = 15236728 * 2^31
.word  974853061 // zeta^ 40 * f(q^(-1) mod 2^32) * 2^31 = 21224105^ 40 * 71292929 * 2^31
.word   61528771 // zeta^168 * 2^31 = 21224105^168 * 2^31 = 29831683 * 2^31
.word 4056128829 // zeta^168 * f(q^(-1) mod 2^32) * 2^31 = 21224105^168 * 71292929 * 2^31
.word   17505197 // zeta^208 * 2^31 = 21224105^208 * 2^31 = 7350388 * 2^31
.word  470281299 // zeta^208 * f(q^(-1) mod 2^32) * 2^31 = 21224105^208 * 71292929 * 2^31
.word   26961583 // zeta^104 * 2^31 = 21224105^104 * 2^31 = 24829277 * 2^31
.word 3736072529 // zeta^104 * f(q^(-1) mod 2^32) * 2^31 = 21224105^104 * 71292929 * 2^31
.word   39914361 // zeta^232 * 2^31 = 21224105^232 * 2^31 = 26527504 * 2^31
.word 1697242247 // zeta^232 * f(q^(-1) mod 2^32) * 2^31 = 21224105^232 * 71292929 * 2^31
.word   29514841 // zeta^ 48 * 2^31 = 21224105^ 48 * 2^31 = 25808113 * 2^31
.word 3798698919 // zeta^ 48 * f(q^(-1) mod 2^32) * 2^31 = 21224105^ 48 * 71292929 * 2^31
.word   42427289 // zeta^ 24 * 2^31 = 21224105^ 24 * 2^31 = 23805553 * 2^31
.word 3670574183 // zeta^ 24 * f(q^(-1) mod 2^32) * 2^31 = 21224105^ 24 * 71292929 * 2^31
.word   22993529 // zeta^152 * 2^31 = 21224105^152 * 2^31 = 20588736 * 2^31
.word 1317277063 // zeta^152 * f(q^(-1) mod 2^32) * 2^31 = 21224105^152 * 71292929 * 2^31
.word   46171693 // zeta^176 * 2^31 = 21224105^176 * 2^31 = 21754869 * 2^31
.word 3539370451 // zeta^176 * f(q^(-1) mod 2^32) * 2^31 = 21224105^176 * 71292929 * 2^31
.word   12459675 // zeta^ 88 * 2^31 = 21224105^ 88 * 2^31 = 8729293 * 2^31
.word 2705987941 // zeta^ 88 * f(q^(-1) mod 2^32) * 2^31 = 21224105^ 88 * 71292929 * 2^31
.word   17297731 // zeta^216 * 2^31 = 21224105^216 * 2^31 = 25151509 * 2^31
.word 3756689085 // zeta^216 * f(q^(-1) mod 2^32) * 2^31 = 21224105^216 * 71292929 * 2^31
.word   49378579 // zeta^112 * 2^31 = 21224105^112 * 2^31 = 10121756 * 2^31
.word  647594733 // zeta^112 * f(q^(-1) mod 2^32) * 2^31 = 21224105^112 * 71292929 * 2^31
.word   51482787 // zeta^ 56 * 2^31 = 21224105^ 56 * 2^31 = 1778108 * 2^31
.word  113764189 // zeta^ 56 * f(q^(-1) mod 2^32) * 2^31 = 21224105^ 56 * 71292929 * 2^31
.word   47832419 // zeta^184 * 2^31 = 21224105^184 * 2^31 = 9175386 * 2^31
.word  587045533 // zeta^184 * f(q^(-1) mod 2^32) * 2^31 = 21224105^184 * 71292929 * 2^31
.word   37299575 // zeta^240 * 2^31 = 21224105^240 * 2^31 = 13079905 * 2^31
.word 2984342153 // zeta^240 * f(q^(-1) mod 2^32) * 2^31 = 21224105^240 * 71292929 * 2^31
.word   32696733 // zeta^120 * 2^31 = 21224105^120 * 2^31 = 6110658 * 2^31
.word  390962787 // zeta^120 * f(q^(-1) mod 2^32) * 2^31 = 21224105^120 * 71292929 * 2^31
.word   16328205 // zeta^248 * 2^31 = 21224105^248 * 2^31 = 14087250 * 2^31
.word  901308915 // zeta^248 * f(q^(-1) mod 2^32) * 2^31 = 21224105^248 * 71292929 * 2^31
.word   35114601 // zeta^  8 * 2^31 = 21224105^  8 * 2^31 = 31442912 * 2^31
.word 2011732375 // zeta^  8 * f(q^(-1) mod 2^32) * 2^31 = 21224105^  8 * 71292929 * 2^31
.word    7271765 // zeta^  4 * 2^31 = 21224105^  4 * 2^31 = 11708223 * 2^31
.word 2896581291 // zeta^  4 * f(q^(-1) mod 2^32) * 2^31 = 21224105^  4 * 71292929 * 2^31
.word    9232849 // zeta^132 * 2^31 = 21224105^132 * 2^31 = 19531360 * 2^31
.word 1249625647 // zeta^132 * f(q^(-1) mod 2^32) * 2^31 = 21224105^132 * 71292929 * 2^31
.word   56661185 // zeta^136 * 2^31 = 21224105^136 * 2^31 = 25072687 * 2^31
.word 3751646015 // zeta^136 * f(q^(-1) mod 2^32) * 2^31 = 21224105^136 * 71292929 * 2^31
.word    5061807 // zeta^ 68 * 2^31 = 21224105^ 68 * 2^31 = 10863968 * 2^31
.word  695081809 // zeta^ 68 * f(q^(-1) mod 2^32) * 2^31 = 21224105^ 68 * 71292929 * 2^31
.word   12062383 // zeta^196 * 2^31 = 21224105^196 * 2^31 = 23554360 * 2^31
.word 1507019089 // zeta^196 * f(q^(-1) mod 2^32) * 2^31 = 21224105^196 * 71292929 * 2^31
.word   24798937 // zeta^ 72 * 2^31 = 21224105^ 72 * 2^31 = 1138528 * 2^31
.word   72843559 // zeta^ 72 * f(q^(-1) mod 2^32) * 2^31 = 21224105^ 72 * 71292929 * 2^31
.word   26674607 // zeta^ 36 * 2^31 = 21224105^ 36 * 2^31 = 29250598 * 2^31
.word 1871467089 // zeta^ 36 * f(q^(-1) mod 2^32) * 2^31 = 21224105^ 36 * 71292929 * 2^31
.word    6369225 // zeta^164 * 2^31 = 21224105^164 * 2^31 = 6512804 * 2^31
.word  416692279 // zeta^164 * f(q^(-1) mod 2^32) * 2^31 = 21224105^164 * 71292929 * 2^31
.word    2433499 // zeta^200 * 2^31 = 21224105^200 * 2^31 = 27899289 * 2^31
.word 3932493349 // zeta^200 * f(q^(-1) mod 2^32) * 2^31 = 21224105^200 * 71292929 * 2^31
.word   13877423 // zeta^100 * 2^31 = 21224105^100 * 2^31 = 11938968 * 2^31
.word  763860817 // zeta^100 * f(q^(-1) mod 2^32) * 2^31 = 21224105^100 * 71292929 * 2^31
.word   52182971 // zeta^228 * 2^31 = 21224105^228 * 2^31 = 3172265 * 2^31
.word 2350446661 // zeta^228 * f(q^(-1) mod 2^32) * 2^31 = 21224105^228 * 71292929 * 2^31
.word   13509691 // zeta^ 40 * 2^31 = 21224105^ 40 * 2^31 = 15236728 * 2^31
.word  974853061 // zeta^ 40 * f(q^(-1) mod 2^32) * 2^31 = 21224105^ 40 * 71292929 * 2^31
.word   26766019 // zeta^ 20 * 2^31 = 21224105^ 20 * 2^31 = 4808176 * 2^31
.word  307629373 // zeta^ 20 * f(q^(-1) mod 2^32) * 2^31 = 21224105^ 20 * 71292929 * 2^31
.word    3049295 // zeta^148 * 2^31 = 21224105^148 * 2^31 = 13952996 * 2^31
.word  892719281 // zeta^148 * f(q^(-1) mod 2^32) * 2^31 = 21224105^148 * 71292929 * 2^31
.word   61528771 // zeta^168 * 2^31 = 21224105^168 * 2^31 = 29831683 * 2^31
.word 4056128829 // zeta^168 * f(q^(-1) mod 2^32) * 2^31 = 21224105^168 * 71292929 * 2^31
.word   27572075 // zeta^ 84 * 2^31 = 21224105^ 84 * 2^31 = 13705304 * 2^31
.word  876871829 // zeta^ 84 * f(q^(-1) mod 2^32) * 2^31 = 21224105^ 84 * 71292929 * 2^31
.word   62852605 // zeta^212 * 2^31 = 21224105^212 * 2^31 = 26009832 * 2^31
.word 1664121347 // zeta^212 * f(q^(-1) mod 2^32) * 2^31 = 21224105^212 * 71292929 * 2^31
.word   26961583 // zeta^104 * 2^31 = 21224105^104 * 2^31 = 24829277 * 2^31
.word 3736072529 // zeta^104 * f(q^(-1) mod 2^32) * 2^31 = 21224105^104 * 71292929 * 2^31
.word   41037815 // zeta^ 52 * 2^31 = 21224105^ 52 * 2^31 = 32331817 * 2^31
.word 4216088585 // zeta^ 52 * f(q^(-1) mod 2^32) * 2^31 = 21224105^ 52 * 71292929 * 2^31
.word   16612991 // zeta^180 * 2^31 = 21224105^180 * 2^31 = 33308953 * 2^31
.word 4278606209 // zeta^180 * f(q^(-1) mod 2^32) * 2^31 = 21224105^180 * 71292929 * 2^31
.word   39914361 // zeta^232 * 2^31 = 21224105^232 * 2^31 = 26527504 * 2^31
.word 1697242247 // zeta^232 * f(q^(-1) mod 2^32) * 2^31 = 21224105^232 * 71292929 * 2^31
.word   32973157 // zeta^116 * 2^31 = 21224105^116 * 2^31 = 12062971 * 2^31
.word 2919278235 // zeta^116 * f(q^(-1) mod 2^32) * 2^31 = 21224105^116 * 71292929 * 2^31
.word   36139229 // zeta^244 * 2^31 = 21224105^244 * 2^31 = 32576304 * 2^31
.word 2084247331 // zeta^244 * f(q^(-1) mod 2^32) * 2^31 = 21224105^244 * 71292929 * 2^31
.word   42427289 // zeta^ 24 * 2^31 = 21224105^ 24 * 2^31 = 23805553 * 2^31
.word 3670574183 // zeta^ 24 * f(q^(-1) mod 2^32) * 2^31 = 21224105^ 24 * 71292929 * 2^31
.word   61506475 // zeta^ 12 * 2^31 = 21224105^ 12 * 2^31 = 2663422 * 2^31
.word  170406997 // zeta^ 12 * f(q^(-1) mod 2^32) * 2^31 = 21224105^ 12 * 71292929 * 2^31
.word   55340015 // zeta^140 * 2^31 = 21224105^140 * 2^31 = 14111874 * 2^31
.word  902884369 // zeta^140 * f(q^(-1) mod 2^32) * 2^31 = 21224105^140 * 71292929 * 2^31
.word   22993529 // zeta^152 * 2^31 = 21224105^152 * 2^31 = 20588736 * 2^31
.word 1317277063 // zeta^152 * f(q^(-1) mod 2^32) * 2^31 = 21224105^152 * 71292929 * 2^31
.word   12255067 // zeta^ 76 * 2^31 = 21224105^ 76 * 2^31 = 30527813 * 2^31
.word 4100667557 // zeta^ 76 * f(q^(-1) mod 2^32) * 2^31 = 21224105^ 76 * 71292929 * 2^31
.word   39251459 // zeta^204 * 2^31 = 21224105^204 * 2^31 = 1599504 * 2^31
.word  102337021 // zeta^204 * f(q^(-1) mod 2^32) * 2^31 = 21224105^204 * 71292929 * 2^31
.word   12459675 // zeta^ 88 * 2^31 = 21224105^ 88 * 2^31 = 8729293 * 2^31
.word 2705987941 // zeta^ 88 * f(q^(-1) mod 2^32) * 2^31 = 21224105^ 88 * 71292929 * 2^31
.word   13565749 // zeta^ 44 * 2^31 = 21224105^ 44 * 2^31 = 14112245 * 2^31
.word 3050391755 // zeta^ 44 * f(q^(-1) mod 2^32) * 2^31 = 21224105^ 44 * 71292929 * 2^31
.word   36826073 // zeta^172 * 2^31 = 21224105^172 * 2^31 = 29475602 * 2^31
.word 1885862951 // zeta^172 * f(q^(-1) mod 2^32) * 2^31 = 21224105^172 * 71292929 * 2^31
.word   17297731 // zeta^216 * 2^31 = 21224105^216 * 2^31 = 25151509 * 2^31
.word 3756689085 // zeta^216 * f(q^(-1) mod 2^32) * 2^31 = 21224105^216 * 71292929 * 2^31
.word   34487347 // zeta^108 * 2^31 = 21224105^108 * 2^31 = 24806528 * 2^31
.word 1587133389 // zeta^108 * f(q^(-1) mod 2^32) * 2^31 = 21224105^108 * 71292929 * 2^31
.word   61222515 // zeta^236 * 2^31 = 21224105^236 * 2^31 = 2847371 * 2^31
.word 2329659789 // zeta^236 * f(q^(-1) mod 2^32) * 2^31 = 21224105^236 * 71292929 * 2^31
.word   51482787 // zeta^ 56 * 2^31 = 21224105^ 56 * 2^31 = 1778108 * 2^31
.word  113764189 // zeta^ 56 * f(q^(-1) mod 2^32) * 2^31 = 21224105^ 56 * 71292929 * 2^31
.word   62959157 // zeta^ 28 * 2^31 = 21224105^ 28 * 2^31 = 14217049 * 2^31
.word 3057097163 // zeta^ 28 * f(q^(-1) mod 2^32) * 2^31 = 21224105^ 28 * 71292929 * 2^31
.word   51158985 // zeta^156 * 2^31 = 21224105^156 * 2^31 = 25086215 * 2^31
.word 3752511543 // zeta^156 * f(q^(-1) mod 2^32) * 2^31 = 21224105^156 * 71292929 * 2^31
.word   47832419 // zeta^184 * 2^31 = 21224105^184 * 2^31 = 9175386 * 2^31
.word  587045533 // zeta^184 * f(q^(-1) mod 2^32) * 2^31 = 21224105^184 * 71292929 * 2^31
.word   59122583 // zeta^ 92 * 2^31 = 21224105^ 92 * 2^31 = 12661993 * 2^31
.word 2957603945 // zeta^ 92 * f(q^(-1) mod 2^32) * 2^31 = 21224105^ 92 * 71292929 * 2^31
.word   12915351 // zeta^220 * 2^31 = 21224105^220 * 2^31 = 18981045 * 2^31
.word 3361899881 // zeta^220 * f(q^(-1) mod 2^32) * 2^31 = 21224105^220 * 71292929 * 2^31
.word   32696733 // zeta^120 * 2^31 = 21224105^120 * 2^31 = 6110658 * 2^31
.word  390962787 // zeta^120 * f(q^(-1) mod 2^32) * 2^31 = 21224105^120 * 71292929 * 2^31
.word   32364195 // zeta^ 60 * 2^31 = 21224105^ 60 * 2^31 = 30118507 * 2^31
.word 4074479965 // zeta^ 60 * f(q^(-1) mod 2^32) * 2^31 = 21224105^ 60 * 71292929 * 2^31
.word   17635297 // zeta^188 * 2^31 = 21224105^188 * 2^31 = 3783875 * 2^31
.word 2389577759 // zeta^188 * f(q^(-1) mod 2^32) * 2^31 = 21224105^188 * 71292929 * 2^31
.word   16328205 // zeta^248 * 2^31 = 21224105^248 * 2^31 = 14087250 * 2^31
.word  901308915 // zeta^248 * f(q^(-1) mod 2^32) * 2^31 = 21224105^248 * 71292929 * 2^31
.word   38891533 // zeta^124 * 2^31 = 21224105^124 * 2^31 = 33548892 * 2^31
.word 2146473971 // zeta^124 * f(q^(-1) mod 2^32) * 2^31 = 21224105^124 * 71292929 * 2^31
.word   24452961 // zeta^252 * 2^31 = 21224105^252 * 2^31 = 29158115 * 2^31
.word 4013033631 // zeta^252 * f(q^(-1) mod 2^32) * 2^31 = 21224105^252 * 71292929 * 2^31
.word   32909249 // zeta^  0 * 2^31 = 21224105^  0 * 2^31
.word   35458195 // zeta^128 * 2^31 = 21224105^128 * 2^31
.word   44770213 // zeta^ 64 * 2^31 = 21224105^ 64 * 2^31
.word    3545473 // zeta^192 * 2^31 = 21224105^192 * 2^31
.word 2147483711 // zeta^  0 * (q^(-1) mod 2^32) * 2^31 = 21224105^  0 * 71292929 * 2^31
.word  387574637 // zeta^128 * (q^(-1) mod 2^32) * 2^31 = 21224105^128 * 71292929 * 2^31
.word 1034331227 // zeta^ 64 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 64 * 71292929 * 2^31
.word  260443775 // zeta^192 * (q^(-1) mod 2^32) * 2^31 = 21224105^192 * 71292929 * 2^31
.word   32909249 // zeta^  0 * 2^31 = 21224105^  0 * 2^31
.word   44770213 // zeta^ 64 * 2^31 = 21224105^ 64 * 2^31
.word   20108763 // zeta^ 32 * 2^31 = 21224105^ 32 * 2^31
.word   23777969 // zeta^ 96 * 2^31 = 21224105^ 96 * 2^31
.word 2147483711 // zeta^  0 * (q^(-1) mod 2^32) * 2^31 = 21224105^  0 * 71292929 * 2^31
.word 1034331227 // zeta^ 64 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 64 * 71292929 * 2^31
.word  225927717 // zeta^ 32 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 32 * 71292929 * 2^31
.word 1061213519 // zeta^ 96 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 96 * 71292929 * 2^31
.word   35458195 // zeta^128 * 2^31 = 21224105^128 * 2^31
.word    3545473 // zeta^192 * 2^31 = 21224105^192 * 2^31
.word   16155699 // zeta^160 * 2^31 = 21224105^160 * 2^31
.word   43443635 // zeta^224 * 2^31 = 21224105^224 * 2^31
.word   20108763 // zeta^ 32 * 2^31 = 21224105^ 32 * 2^31
.word   16155699 // zeta^160 * 2^31 = 21224105^160 * 2^31
.word   23777969 // zeta^ 96 * 2^31 = 21224105^ 96 * 2^31
.word   43443635 // zeta^224 * 2^31 = 21224105^224 * 2^31
.word  225927717 // zeta^ 32 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 32 * 71292929 * 2^31
.word 2867950541 // zeta^160 * (q^(-1) mod 2^32) * 2^31 = 21224105^160 * 71292929 * 2^31
.word 1061213519 // zeta^ 96 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 96 * 71292929 * 2^31
.word 1485640269 // zeta^224 * (q^(-1) mod 2^32) * 2^31 = 21224105^224 * 71292929 * 2^31
.word   56312659 // zeta^ 16 * 2^31 = 21224105^ 16 * 2^31
.word   40872355 // zeta^ 80 * 2^31 = 21224105^ 80 * 2^31
.word   29514841 // zeta^ 48 * 2^31 = 21224105^ 48 * 2^31
.word   49378579 // zeta^112 * 2^31 = 21224105^112 * 2^31
.word  510244013 // zeta^ 16 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 16 * 71292929 * 2^31
.word 2068958813 // zeta^ 80 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 80 * 71292929 * 2^31
.word 3798698919 // zeta^ 48 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 48 * 71292929 * 2^31
.word  647594733 // zeta^112 * (q^(-1) mod 2^32) * 2^31 = 21224105^112 * 71292929 * 2^31
.word   50428539 // zeta^144 * 2^31 = 21224105^144 * 2^31
.word   17505197 // zeta^208 * 2^31 = 21224105^208 * 2^31
.word   46171693 // zeta^176 * 2^31 = 21224105^176 * 2^31
.word   37299575 // zeta^240 * 2^31 = 21224105^240 * 2^31
.word   56312659 // zeta^ 16 * 2^31 = 21224105^ 16 * 2^31
.word   50428539 // zeta^144 * 2^31 = 21224105^144 * 2^31
.word   40872355 // zeta^ 80 * 2^31 = 21224105^ 80 * 2^31
.word   17505197 // zeta^208 * 2^31 = 21224105^208 * 2^31
.word  510244013 // zeta^ 16 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 16 * 71292929 * 2^31
.word 2908863877 // zeta^144 * (q^(-1) mod 2^32) * 2^31 = 21224105^144 * 71292929 * 2^31
.word 2068958813 // zeta^ 80 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 80 * 71292929 * 2^31
.word  470281299 // zeta^208 * (q^(-1) mod 2^32) * 2^31 = 21224105^208 * 71292929 * 2^31
.word   35114601 // zeta^  8 * 2^31 = 21224105^  8 * 2^31
.word   24798937 // zeta^ 72 * 2^31 = 21224105^ 72 * 2^31
.word   13509691 // zeta^ 40 * 2^31 = 21224105^ 40 * 2^31
.word   26961583 // zeta^104 * 2^31 = 21224105^104 * 2^31
.word 2011732375 // zeta^  8 * (q^(-1) mod 2^32) * 2^31 = 21224105^  8 * 71292929 * 2^31
.word   72843559 // zeta^ 72 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 72 * 71292929 * 2^31
.word  974853061 // zeta^ 40 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 40 * 71292929 * 2^31
.word 3736072529 // zeta^104 * (q^(-1) mod 2^32) * 2^31 = 21224105^104 * 71292929 * 2^31
.word   56661185 // zeta^136 * 2^31 = 21224105^136 * 2^31
.word    2433499 // zeta^200 * 2^31 = 21224105^200 * 2^31
.word   61528771 // zeta^168 * 2^31 = 21224105^168 * 2^31
.word   39914361 // zeta^232 * 2^31 = 21224105^232 * 2^31
.word   29514841 // zeta^ 48 * 2^31 = 21224105^ 48 * 2^31
.word   46171693 // zeta^176 * 2^31 = 21224105^176 * 2^31
.word   49378579 // zeta^112 * 2^31 = 21224105^112 * 2^31
.word   37299575 // zeta^240 * 2^31 = 21224105^240 * 2^31
.word 3798698919 // zeta^ 48 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 48 * 71292929 * 2^31
.word 3539370451 // zeta^176 * (q^(-1) mod 2^32) * 2^31 = 21224105^176 * 71292929 * 2^31
.word  647594733 // zeta^112 * (q^(-1) mod 2^32) * 2^31 = 21224105^112 * 71292929 * 2^31
.word 2984342153 // zeta^240 * (q^(-1) mod 2^32) * 2^31 = 21224105^240 * 71292929 * 2^31
.word   42427289 // zeta^ 24 * 2^31 = 21224105^ 24 * 2^31
.word   12459675 // zeta^ 88 * 2^31 = 21224105^ 88 * 2^31
.word   51482787 // zeta^ 56 * 2^31 = 21224105^ 56 * 2^31
.word   32696733 // zeta^120 * 2^31 = 21224105^120 * 2^31
.word 3670574183 // zeta^ 24 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 24 * 71292929 * 2^31
.word 2705987941 // zeta^ 88 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 88 * 71292929 * 2^31
.word  113764189 // zeta^ 56 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 56 * 71292929 * 2^31
.word  390962787 // zeta^120 * (q^(-1) mod 2^32) * 2^31 = 21224105^120 * 71292929 * 2^31
.word   22993529 // zeta^152 * 2^31 = 21224105^152 * 2^31
.word   17297731 // zeta^216 * 2^31 = 21224105^216 * 2^31
.word   47832419 // zeta^184 * 2^31 = 21224105^184 * 2^31
.word   16328205 // zeta^248 * 2^31 = 21224105^248 * 2^31
.word   35114601 // zeta^  8 * 2^31 = 21224105^  8 * 2^31
.word   56661185 // zeta^136 * 2^31 = 21224105^136 * 2^31
.word   24798937 // zeta^ 72 * 2^31 = 21224105^ 72 * 2^31
.word    2433499 // zeta^200 * 2^31 = 21224105^200 * 2^31
.word 2011732375 // zeta^  8 * (q^(-1) mod 2^32) * 2^31 = 21224105^  8 * 71292929 * 2^31
.word 3751646015 // zeta^136 * (q^(-1) mod 2^32) * 2^31 = 21224105^136 * 71292929 * 2^31
.word   72843559 // zeta^ 72 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 72 * 71292929 * 2^31
.word 3932493349 // zeta^200 * (q^(-1) mod 2^32) * 2^31 = 21224105^200 * 71292929 * 2^31
.word    7271765 // zeta^  4 * 2^31 = 21224105^  4 * 2^31
.word    5061807 // zeta^ 68 * 2^31 = 21224105^ 68 * 2^31
.word   26674607 // zeta^ 36 * 2^31 = 21224105^ 36 * 2^31
.word   13877423 // zeta^100 * 2^31 = 21224105^100 * 2^31
.word 2896581291 // zeta^  4 * (q^(-1) mod 2^32) * 2^31 = 21224105^  4 * 71292929 * 2^31
.word  695081809 // zeta^ 68 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 68 * 71292929 * 2^31
.word 1871467089 // zeta^ 36 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 36 * 71292929 * 2^31
.word  763860817 // zeta^100 * (q^(-1) mod 2^32) * 2^31 = 21224105^100 * 71292929 * 2^31
.word    9232849 // zeta^132 * 2^31 = 21224105^132 * 2^31
.word   12062383 // zeta^196 * 2^31 = 21224105^196 * 2^31
.word    6369225 // zeta^164 * 2^31 = 21224105^164 * 2^31
.word   52182971 // zeta^228 * 2^31 = 21224105^228 * 2^31
.word   13509691 // zeta^ 40 * 2^31 = 21224105^ 40 * 2^31
.word   61528771 // zeta^168 * 2^31 = 21224105^168 * 2^31
.word   26961583 // zeta^104 * 2^31 = 21224105^104 * 2^31
.word   39914361 // zeta^232 * 2^31 = 21224105^232 * 2^31
.word  974853061 // zeta^ 40 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 40 * 71292929 * 2^31
.word 4056128829 // zeta^168 * (q^(-1) mod 2^32) * 2^31 = 21224105^168 * 71292929 * 2^31
.word 3736072529 // zeta^104 * (q^(-1) mod 2^32) * 2^31 = 21224105^104 * 71292929 * 2^31
.word 1697242247 // zeta^232 * (q^(-1) mod 2^32) * 2^31 = 21224105^232 * 71292929 * 2^31
.word   26766019 // zeta^ 20 * 2^31 = 21224105^ 20 * 2^31
.word   27572075 // zeta^ 84 * 2^31 = 21224105^ 84 * 2^31
.word   41037815 // zeta^ 52 * 2^31 = 21224105^ 52 * 2^31
.word   32973157 // zeta^116 * 2^31 = 21224105^116 * 2^31
.word  307629373 // zeta^ 20 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 20 * 71292929 * 2^31
.word  876871829 // zeta^ 84 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 84 * 71292929 * 2^31
.word 4216088585 // zeta^ 52 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 52 * 71292929 * 2^31
.word 2919278235 // zeta^116 * (q^(-1) mod 2^32) * 2^31 = 21224105^116 * 71292929 * 2^31
.word    3049295 // zeta^148 * 2^31 = 21224105^148 * 2^31
.word   62852605 // zeta^212 * 2^31 = 21224105^212 * 2^31
.word   16612991 // zeta^180 * 2^31 = 21224105^180 * 2^31
.word   36139229 // zeta^244 * 2^31 = 21224105^244 * 2^31
.word   42427289 // zeta^ 24 * 2^31 = 21224105^ 24 * 2^31
.word   22993529 // zeta^152 * 2^31 = 21224105^152 * 2^31
.word   12459675 // zeta^ 88 * 2^31 = 21224105^ 88 * 2^31
.word   17297731 // zeta^216 * 2^31 = 21224105^216 * 2^31
.word 3670574183 // zeta^ 24 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 24 * 71292929 * 2^31
.word 1317277063 // zeta^152 * (q^(-1) mod 2^32) * 2^31 = 21224105^152 * 71292929 * 2^31
.word 2705987941 // zeta^ 88 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 88 * 71292929 * 2^31
.word 3756689085 // zeta^216 * (q^(-1) mod 2^32) * 2^31 = 21224105^216 * 71292929 * 2^31
.word   61506475 // zeta^ 12 * 2^31 = 21224105^ 12 * 2^31
.word   12255067 // zeta^ 76 * 2^31 = 21224105^ 76 * 2^31
.word   13565749 // zeta^ 44 * 2^31 = 21224105^ 44 * 2^31
.word   34487347 // zeta^108 * 2^31 = 21224105^108 * 2^31
.word  170406997 // zeta^ 12 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 12 * 71292929 * 2^31
.word 4100667557 // zeta^ 76 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 76 * 71292929 * 2^31
.word 3050391755 // zeta^ 44 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 44 * 71292929 * 2^31
.word 1587133389 // zeta^108 * (q^(-1) mod 2^32) * 2^31 = 21224105^108 * 71292929 * 2^31
.word   55340015 // zeta^140 * 2^31 = 21224105^140 * 2^31
.word   39251459 // zeta^204 * 2^31 = 21224105^204 * 2^31
.word   36826073 // zeta^172 * 2^31 = 21224105^172 * 2^31
.word   61222515 // zeta^236 * 2^31 = 21224105^236 * 2^31
.word   51482787 // zeta^ 56 * 2^31 = 21224105^ 56 * 2^31
.word   47832419 // zeta^184 * 2^31 = 21224105^184 * 2^31
.word   32696733 // zeta^120 * 2^31 = 21224105^120 * 2^31
.word   16328205 // zeta^248 * 2^31 = 21224105^248 * 2^31
.word  113764189 // zeta^ 56 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 56 * 71292929 * 2^31
.word  587045533 // zeta^184 * (q^(-1) mod 2^32) * 2^31 = 21224105^184 * 71292929 * 2^31
.word  390962787 // zeta^120 * (q^(-1) mod 2^32) * 2^31 = 21224105^120 * 71292929 * 2^31
.word  901308915 // zeta^248 * (q^(-1) mod 2^32) * 2^31 = 21224105^248 * 71292929 * 2^31
.word   62959157 // zeta^ 28 * 2^31 = 21224105^ 28 * 2^31
.word   59122583 // zeta^ 92 * 2^31 = 21224105^ 92 * 2^31
.word   32364195 // zeta^ 60 * 2^31 = 21224105^ 60 * 2^31
.word   38891533 // zeta^124 * 2^31 = 21224105^124 * 2^31
.word 3057097163 // zeta^ 28 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 28 * 71292929 * 2^31
.word 2957603945 // zeta^ 92 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 92 * 71292929 * 2^31
.word 4074479965 // zeta^ 60 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 60 * 71292929 * 2^31
.word 2146473971 // zeta^124 * (q^(-1) mod 2^32) * 2^31 = 21224105^124 * 71292929 * 2^31
.word   51158985 // zeta^156 * 2^31 = 21224105^156 * 2^31
.word   12915351 // zeta^220 * 2^31 = 21224105^220 * 2^31
.word   17635297 // zeta^188 * 2^31 = 21224105^188 * 2^31
.word   24452961 // zeta^252 * 2^31 = 21224105^252 * 2^31
.word    7271765 // zeta^  4 * 2^31 = 21224105^  4 * 2^31
.word    9232849 // zeta^132 * 2^31 = 21224105^132 * 2^31
.word    5061807 // zeta^ 68 * 2^31 = 21224105^ 68 * 2^31
.word   12062383 // zeta^196 * 2^31 = 21224105^196 * 2^31
.word 2896581291 // zeta^  4 * (q^(-1) mod 2^32) * 2^31 = 21224105^  4 * 71292929 * 2^31
.word 1249625647 // zeta^132 * (q^(-1) mod 2^32) * 2^31 = 21224105^132 * 71292929 * 2^31
.word  695081809 // zeta^ 68 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 68 * 71292929 * 2^31
.word 1507019089 // zeta^196 * (q^(-1) mod 2^32) * 2^31 = 21224105^196 * 71292929 * 2^31
.word   34173151 // zeta^  2 * 2^31 = 21224105^  2 * 2^31
.word   40902341 // zeta^ 66 * 2^31 = 21224105^ 66 * 2^31
.word   13754549 // zeta^ 34 * 2^31 = 21224105^ 34 * 2^31
.word    5773819 // zeta^ 98 * 2^31 = 21224105^ 98 * 2^31
.word 3285804833 // zeta^  2 * (q^(-1) mod 2^32) * 2^31 = 21224105^  2 * 71292929 * 2^31
.word 3172903227 // zeta^ 66 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 66 * 71292929 * 2^31
.word 3372902219 // zeta^ 34 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 34 * 71292929 * 2^31
.word 1492590085 // zeta^ 98 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 98 * 71292929 * 2^31
.word    6702715 // zeta^130 * 2^31 = 21224105^130 * 2^31
.word   11747093 // zeta^194 * 2^31 = 21224105^194 * 2^31
.word   48295871 // zeta^162 * 2^31 = 21224105^162 * 2^31
.word   40968961 // zeta^226 * 2^31 = 21224105^226 * 2^31
.word   26674607 // zeta^ 36 * 2^31 = 21224105^ 36 * 2^31
.word    6369225 // zeta^164 * 2^31 = 21224105^164 * 2^31
.word   13877423 // zeta^100 * 2^31 = 21224105^100 * 2^31
.word   52182971 // zeta^228 * 2^31 = 21224105^228 * 2^31
.word 1871467089 // zeta^ 36 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 36 * 71292929 * 2^31
.word  416692279 // zeta^164 * (q^(-1) mod 2^32) * 2^31 = 21224105^164 * 71292929 * 2^31
.word  763860817 // zeta^100 * (q^(-1) mod 2^32) * 2^31 = 21224105^100 * 71292929 * 2^31
.word 2350446661 // zeta^228 * (q^(-1) mod 2^32) * 2^31 = 21224105^228 * 71292929 * 2^31
.word   64146459 // zeta^ 18 * 2^31 = 21224105^ 18 * 2^31
.word   47277573 // zeta^ 82 * 2^31 = 21224105^ 82 * 2^31
.word     378215 // zeta^ 50 * 2^31 = 21224105^ 50 * 2^31
.word   50433925 // zeta^114 * 2^31 = 21224105^114 * 2^31
.word 2035379173 // zeta^ 18 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 18 * 71292929 * 2^31
.word  534733307 // zeta^ 82 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 82 * 71292929 * 2^31
.word 4044509849 // zeta^ 50 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 50 * 71292929 * 2^31
.word 1177237627 // zeta^114 * (q^(-1) mod 2^32) * 2^31 = 21224105^114 * 71292929 * 2^31
.word     469857 // zeta^146 * 2^31 = 21224105^146 * 2^31
.word   23147541 // zeta^210 * 2^31 = 21224105^210 * 2^31
.word   22747623 // zeta^178 * 2^31 = 21224105^178 * 2^31
.word   12737503 // zeta^242 * 2^31 = 21224105^242 * 2^31
.word   26766019 // zeta^ 20 * 2^31 = 21224105^ 20 * 2^31
.word    3049295 // zeta^148 * 2^31 = 21224105^148 * 2^31
.word   27572075 // zeta^ 84 * 2^31 = 21224105^ 84 * 2^31
.word   62852605 // zeta^212 * 2^31 = 21224105^212 * 2^31
.word  307629373 // zeta^ 20 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 20 * 71292929 * 2^31
.word  892719281 // zeta^148 * (q^(-1) mod 2^32) * 2^31 = 21224105^148 * 71292929 * 2^31
.word  876871829 // zeta^ 84 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 84 * 71292929 * 2^31
.word 1664121347 // zeta^212 * (q^(-1) mod 2^32) * 2^31 = 21224105^212 * 71292929 * 2^31
.word   20257187 // zeta^ 10 * 2^31 = 21224105^ 10 * 2^31
.word   27954337 // zeta^ 74 * 2^31 = 21224105^ 74 * 2^31
.word   13368597 // zeta^ 42 * 2^31 = 21224105^ 42 * 2^31
.word   38893665 // zeta^106 * 2^31 = 21224105^106 * 2^31
.word 1443651165 // zeta^ 10 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 10 * 71292929 * 2^31
.word 4161706847 // zeta^ 74 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 74 * 71292929 * 2^31
.word 1165970155 // zeta^ 42 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 42 * 71292929 * 2^31
.word  473804703 // zeta^106 * (q^(-1) mod 2^32) * 2^31 = 21224105^106 * 71292929 * 2^31
.word   61186369 // zeta^138 * 2^31 = 21224105^138 * 2^31
.word   65344259 // zeta^202 * 2^31 = 21224105^202 * 2^31
.word   46956055 // zeta^170 * 2^31 = 21224105^170 * 2^31
.word   50639193 // zeta^234 * 2^31 = 21224105^234 * 2^31
.word   41037815 // zeta^ 52 * 2^31 = 21224105^ 52 * 2^31
.word   16612991 // zeta^180 * 2^31 = 21224105^180 * 2^31
.word   32973157 // zeta^116 * 2^31 = 21224105^116 * 2^31
.word   36139229 // zeta^244 * 2^31 = 21224105^244 * 2^31
.word 4216088585 // zeta^ 52 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 52 * 71292929 * 2^31
.word 4278606209 // zeta^180 * (q^(-1) mod 2^32) * 2^31 = 21224105^180 * 71292929 * 2^31
.word 2919278235 // zeta^116 * (q^(-1) mod 2^32) * 2^31 = 21224105^116 * 71292929 * 2^31
.word 2084247331 // zeta^244 * (q^(-1) mod 2^32) * 2^31 = 21224105^244 * 71292929 * 2^31
.word   18563127 // zeta^ 26 * 2^31 = 21224105^ 26 * 2^31
.word    6808477 // zeta^ 90 * 2^31 = 21224105^ 90 * 2^31
.word   49494815 // zeta^ 58 * 2^31 = 21224105^ 58 * 2^31
.word    7177603 // zeta^122 * 2^31 = 21224105^122 * 2^31
.word 1462589385 // zeta^ 26 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 26 * 71292929 * 2^31
.word 3756565603 // zeta^ 90 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 90 * 71292929 * 2^31
.word 3129580769 // zeta^ 58 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 58 * 71292929 * 2^31
.word 2947478141 // zeta^122 * (q^(-1) mod 2^32) * 2^31 = 21224105^122 * 71292929 * 2^31
.word   13659269 // zeta^154 * 2^31 = 21224105^154 * 2^31
.word   25156895 // zeta^218 * 2^31 = 21224105^218 * 2^31
.word   40639053 // zeta^186 * 2^31 = 21224105^186 * 2^31
.word    1950087 // zeta^250 * 2^31 = 21224105^250 * 2^31
.word   61506475 // zeta^ 12 * 2^31 = 21224105^ 12 * 2^31
.word   55340015 // zeta^140 * 2^31 = 21224105^140 * 2^31
.word   12255067 // zeta^ 76 * 2^31 = 21224105^ 76 * 2^31
.word   39251459 // zeta^204 * 2^31 = 21224105^204 * 2^31
.word  170406997 // zeta^ 12 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 12 * 71292929 * 2^31
.word  902884369 // zeta^140 * (q^(-1) mod 2^32) * 2^31 = 21224105^140 * 71292929 * 2^31
.word 4100667557 // zeta^ 76 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 76 * 71292929 * 2^31
.word  102337021 // zeta^204 * (q^(-1) mod 2^32) * 2^31 = 21224105^204 * 71292929 * 2^31
.word   60705671 // zeta^  6 * 2^31 = 21224105^  6 * 2^31
.word   23867373 // zeta^ 70 * 2^31 = 21224105^ 70 * 2^31
.word   39782807 // zeta^ 38 * 2^31 = 21224105^ 38 * 2^31
.word   29369949 // zeta^102 * 2^31 = 21224105^102 * 2^31
.word 3127823481 // zeta^  6 * (q^(-1) mod 2^32) * 2^31 = 21224105^  6 * 71292929 * 2^31
.word  919656467 // zeta^ 70 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 70 * 71292929 * 2^31
.word  358649449 // zeta^ 38 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 38 * 71292929 * 2^31
.word 4177420707 // zeta^102 * (q^(-1) mod 2^32) * 2^31 = 21224105^102 * 71292929 * 2^31
.word   58406951 // zeta^134 * 2^31 = 21224105^134 * 2^31
.word   26669715 // zeta^198 * 2^31 = 21224105^198 * 2^31
.word   17705221 // zeta^166 * 2^31 = 21224105^166 * 2^31
.word   49812459 // zeta^230 * 2^31 = 21224105^230 * 2^31
.word   13565749 // zeta^ 44 * 2^31 = 21224105^ 44 * 2^31
.word   36826073 // zeta^172 * 2^31 = 21224105^172 * 2^31
.word   34487347 // zeta^108 * 2^31 = 21224105^108 * 2^31
.word   61222515 // zeta^236 * 2^31 = 21224105^236 * 2^31
.word 3050391755 // zeta^ 44 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 44 * 71292929 * 2^31
.word 1885862951 // zeta^172 * (q^(-1) mod 2^32) * 2^31 = 21224105^172 * 71292929 * 2^31
.word 1587133389 // zeta^108 * (q^(-1) mod 2^32) * 2^31 = 21224105^108 * 71292929 * 2^31
.word 2329659789 // zeta^236 * (q^(-1) mod 2^32) * 2^31 = 21224105^236 * 71292929 * 2^31
.word    4594083 // zeta^ 22 * 2^31 = 21224105^ 22 * 2^31
.word   65137097 // zeta^ 86 * 2^31 = 21224105^ 86 * 2^31
.word   38253055 // zeta^ 54 * 2^31 = 21224105^ 54 * 2^31
.word   29082479 // zeta^118 * 2^31 = 21224105^118 * 2^31
.word 4277886557 // zeta^ 22 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 22 * 71292929 * 2^31
.word 2992995895 // zeta^ 86 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 86 * 71292929 * 2^31
.word 3049793025 // zeta^ 54 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 54 * 71292929 * 2^31
.word 3171783825 // zeta^118 * (q^(-1) mod 2^32) * 2^31 = 21224105^118 * 71292929 * 2^31
.word    7758757 // zeta^150 * 2^31 = 21224105^150 * 2^31
.word   29507409 // zeta^214 * 2^31 = 21224105^214 * 2^31
.word   39394541 // zeta^182 * 2^31 = 21224105^182 * 2^31
.word   44583105 // zeta^246 * 2^31 = 21224105^246 * 2^31
.word   62959157 // zeta^ 28 * 2^31 = 21224105^ 28 * 2^31
.word   51158985 // zeta^156 * 2^31 = 21224105^156 * 2^31
.word   59122583 // zeta^ 92 * 2^31 = 21224105^ 92 * 2^31
.word   12915351 // zeta^220 * 2^31 = 21224105^220 * 2^31
.word 3057097163 // zeta^ 28 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 28 * 71292929 * 2^31
.word 3752511543 // zeta^156 * (q^(-1) mod 2^32) * 2^31 = 21224105^156 * 71292929 * 2^31
.word 2957603945 // zeta^ 92 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 92 * 71292929 * 2^31
.word 3361899881 // zeta^220 * (q^(-1) mod 2^32) * 2^31 = 21224105^220 * 71292929 * 2^31
.word   30585257 // zeta^ 14 * 2^31 = 21224105^ 14 * 2^31
.word   40572935 // zeta^ 78 * 2^31 = 21224105^ 78 * 2^31
.word   39625501 // zeta^ 46 * 2^31 = 21224105^ 46 * 2^31
.word   25272919 // zeta^110 * 2^31 = 21224105^110 * 2^31
.word 3685725783 // zeta^ 14 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 14 * 71292929 * 2^31
.word 2610298873 // zeta^ 78 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 78 * 71292929 * 2^31
.word 1004528867 // zeta^ 46 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 46 * 71292929 * 2^31
.word 1310455209 // zeta^110 * (q^(-1) mod 2^32) * 2^31 = 21224105^110 * 71292929 * 2^31
.word   15268201 // zeta^142 * 2^31 = 21224105^142 * 2^31
.word   55301277 // zeta^206 * 2^31 = 21224105^206 * 2^31
.word    5900879 // zeta^174 * 2^31 = 21224105^174 * 2^31
.word   54885097 // zeta^238 * 2^31 = 21224105^238 * 2^31
.word   32364195 // zeta^ 60 * 2^31 = 21224105^ 60 * 2^31
.word   17635297 // zeta^188 * 2^31 = 21224105^188 * 2^31
.word   38891533 // zeta^124 * 2^31 = 21224105^124 * 2^31
.word   24452961 // zeta^252 * 2^31 = 21224105^252 * 2^31
.word 4074479965 // zeta^ 60 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 60 * 71292929 * 2^31
.word 2389577759 // zeta^188 * (q^(-1) mod 2^32) * 2^31 = 21224105^188 * 71292929 * 2^31
.word 2146473971 // zeta^124 * (q^(-1) mod 2^32) * 2^31 = 21224105^124 * 71292929 * 2^31
.word 4013033631 // zeta^252 * (q^(-1) mod 2^32) * 2^31 = 21224105^252 * 71292929 * 2^31
.word   37675113 // zeta^ 30 * 2^31 = 21224105^ 30 * 2^31
.word    8442215 // zeta^ 94 * 2^31 = 21224105^ 94 * 2^31
.word   36750327 // zeta^ 62 * 2^31 = 21224105^ 62 * 2^31
.word   30669833 // zeta^126 * 2^31 = 21224105^126 * 2^31
.word  311527319 // zeta^ 30 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 30 * 71292929 * 2^31
.word  712459929 // zeta^ 94 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 94 * 71292929 * 2^31
.word 3266171913 // zeta^ 62 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 62 * 71292929 * 2^31
.word 4149046263 // zeta^126 * (q^(-1) mod 2^32) * 2^31 = 21224105^126 * 71292929 * 2^31
.word   35767195 // zeta^158 * 2^31 = 21224105^158 * 2^31
.word   45014229 // zeta^222 * 2^31 = 21224105^222 * 2^31
.word   35947815 // zeta^190 * 2^31 = 21224105^190 * 2^31
.word   20303881 // zeta^254 * 2^31 = 21224105^254 * 2^31
.word   34173151 // zeta^  2 * 2^31 = 21224105^  2 * 2^31
.word    6702715 // zeta^130 * 2^31 = 21224105^130 * 2^31
.word   40902341 // zeta^ 66 * 2^31 = 21224105^ 66 * 2^31
.word   11747093 // zeta^194 * 2^31 = 21224105^194 * 2^31
.word 3285804833 // zeta^  2 * (q^(-1) mod 2^32) * 2^31 = 21224105^  2 * 71292929 * 2^31
.word 1876750725 // zeta^130 * (q^(-1) mod 2^32) * 2^31 = 21224105^130 * 71292929 * 2^31
.word 3172903227 // zeta^ 66 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 66 * 71292929 * 2^31
.word 3890743531 // zeta^194 * (q^(-1) mod 2^32) * 2^31 = 21224105^194 * 71292929 * 2^31
.word   57364657 // zeta^  1 * 2^31 = 21224105^  1 * 2^31
.word   65863923 // zeta^ 65 * 2^31 = 21224105^ 65 * 2^31
.word   38999497 // zeta^ 33 * 2^31 = 21224105^ 33 * 2^31
.word   39314409 // zeta^ 97 * 2^31 = 21224105^ 97 * 2^31
.word 3505411919 // zeta^  1 * (q^(-1) mod 2^32) * 2^31 = 21224105^  1 * 71292929 * 2^31
.word 4219008781 // zeta^ 65 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 65 * 71292929 * 2^31
.word 1658081847 // zeta^ 33 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 33 * 71292929 * 2^31
.word  453280791 // zeta^ 97 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 97 * 71292929 * 2^31
.word   17742663 // zeta^129 * 2^31 = 21224105^129 * 2^31
.word   45275813 // zeta^193 * 2^31 = 21224105^193 * 2^31
.word   64102957 // zeta^161 * 2^31 = 21224105^161 * 2^31
.word   25400553 // zeta^225 * 2^31 = 21224105^225 * 2^31
.word   13754549 // zeta^ 34 * 2^31 = 21224105^ 34 * 2^31
.word   48295871 // zeta^162 * 2^31 = 21224105^162 * 2^31
.word    5773819 // zeta^ 98 * 2^31 = 21224105^ 98 * 2^31
.word   40968961 // zeta^226 * 2^31 = 21224105^226 * 2^31
.word 3372902219 // zeta^ 34 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 34 * 71292929 * 2^31
.word  919922753 // zeta^162 * (q^(-1) mod 2^32) * 2^31 = 21224105^162 * 71292929 * 2^31
.word 1492590085 // zeta^ 98 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 98 * 71292929 * 2^31
.word 3871802623 // zeta^226 * (q^(-1) mod 2^32) * 2^31 = 21224105^226 * 71292929 * 2^31
.word    8546383 // zeta^ 17 * 2^31 = 21224105^ 17 * 2^31
.word   46173583 // zeta^ 81 * 2^31 = 21224105^ 81 * 2^31
.word   66816363 // zeta^ 49 * 2^31 = 21224105^ 49 * 2^31
.word   45664163 // zeta^113 * 2^31 = 21224105^113 * 2^31
.word  269086641 // zeta^ 17 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 17 * 71292929 * 2^31
.word 1939720817 // zeta^ 81 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 81 * 71292929 * 2^31
.word 1119694485 // zeta^ 49 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 49 * 71292929 * 2^31
.word 1740157021 // zeta^113 * (q^(-1) mod 2^32) * 2^31 = 21224105^113 * 71292929 * 2^31
.word   47863765 // zeta^145 * 2^31 = 21224105^145 * 2^31
.word    7553119 // zeta^209 * 2^31 = 21224105^209 * 2^31
.word    9938685 // zeta^177 * 2^31 = 21224105^177 * 2^31
.word   29035899 // zeta^241 * 2^31 = 21224105^241 * 2^31
.word   64146459 // zeta^ 18 * 2^31 = 21224105^ 18 * 2^31
.word     469857 // zeta^146 * 2^31 = 21224105^146 * 2^31
.word   47277573 // zeta^ 82 * 2^31 = 21224105^ 82 * 2^31
.word   23147541 // zeta^210 * 2^31 = 21224105^210 * 2^31
.word 2035379173 // zeta^ 18 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 18 * 71292929 * 2^31
.word 3263167647 // zeta^146 * (q^(-1) mod 2^32) * 2^31 = 21224105^146 * 71292929 * 2^31
.word  534733307 // zeta^ 82 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 82 * 71292929 * 2^31
.word 3582071787 // zeta^210 * (q^(-1) mod 2^32) * 2^31 = 21224105^210 * 71292929 * 2^31
.word    4853311 // zeta^  9 * 2^31 = 21224105^  9 * 2^31
.word   19847287 // zeta^ 73 * 2^31 = 21224105^ 73 * 2^31
.word   47886143 // zeta^ 41 * 2^31 = 21224105^ 41 * 2^31
.word   18266849 // zeta^105 * 2^31 = 21224105^105 * 2^31
.word  103795137 // zeta^  9 * (q^(-1) mod 2^32) * 2^31 = 21224105^  9 * 71292929 * 2^31
.word 1457766281 // zeta^ 73 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 73 * 71292929 * 2^31
.word 1556555969 // zeta^ 41 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 41 * 71292929 * 2^31
.word 1339845919 // zeta^105 * (q^(-1) mod 2^32) * 2^31 = 21224105^105 * 71292929 * 2^31
.word   44071181 // zeta^137 * 2^31 = 21224105^137 * 2^31
.word   56515763 // zeta^201 * 2^31 = 21224105^201 * 2^31
.word   16559399 // zeta^169 * 2^31 = 21224105^169 * 2^31
.word   20020769 // zeta^233 * 2^31 = 21224105^233 * 2^31
.word     378215 // zeta^ 50 * 2^31 = 21224105^ 50 * 2^31
.word   22747623 // zeta^178 * 2^31 = 21224105^178 * 2^31
.word   50433925 // zeta^114 * 2^31 = 21224105^114 * 2^31
.word   12737503 // zeta^242 * 2^31 = 21224105^242 * 2^31
.word 4044509849 // zeta^ 50 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 50 * 71292929 * 2^31
.word  619773465 // zeta^178 * (q^(-1) mod 2^32) * 2^31 = 21224105^178 * 71292929 * 2^31
.word 1177237627 // zeta^114 * (q^(-1) mod 2^32) * 2^31 = 21224105^114 * 71292929 * 2^31
.word 3923278881 // zeta^242 * (q^(-1) mod 2^32) * 2^31 = 21224105^242 * 71292929 * 2^31
.word   66706479 // zeta^ 25 * 2^31 = 21224105^ 25 * 2^31
.word   65464889 // zeta^ 89 * 2^31 = 21224105^ 89 * 2^31
.word   31632431 // zeta^ 57 * 2^31 = 21224105^ 57 * 2^31
.word   16224217 // zeta^121 * 2^31 = 21224105^121 * 2^31
.word 1051556817 // zeta^ 25 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 25 * 71292929 * 2^31
.word 2658270663 // zeta^ 89 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 89 * 71292929 * 2^31
.word 2705632209 // zeta^ 57 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 57 * 71292929 * 2^31
.word 1396856871 // zeta^121 * (q^(-1) mod 2^32) * 2^31 = 21224105^121 * 71292929 * 2^31
.word   20007053 // zeta^153 * 2^31 = 21224105^153 * 2^31
.word    9706713 // zeta^217 * 2^31 = 21224105^217 * 2^31
.word   28622733 // zeta^185 * 2^31 = 21224105^185 * 2^31
.word   47899901 // zeta^249 * 2^31 = 21224105^249 * 2^31
.word   20257187 // zeta^ 10 * 2^31 = 21224105^ 10 * 2^31
.word   61186369 // zeta^138 * 2^31 = 21224105^138 * 2^31
.word   27954337 // zeta^ 74 * 2^31 = 21224105^ 74 * 2^31
.word   65344259 // zeta^202 * 2^31 = 21224105^202 * 2^31
.word 1443651165 // zeta^ 10 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 10 * 71292929 * 2^31
.word 2303493823 // zeta^138 * (q^(-1) mod 2^32) * 2^31 = 21224105^138 * 71292929 * 2^31
.word 4161706847 // zeta^ 74 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 74 * 71292929 * 2^31
.word 4199769341 // zeta^202 * (q^(-1) mod 2^32) * 2^31 = 21224105^202 * 71292929 * 2^31
.word   27282801 // zeta^  5 * 2^31 = 21224105^  5 * 2^31
.word   61894293 // zeta^ 69 * 2^31 = 21224105^ 69 * 2^31
.word   56460987 // zeta^ 37 * 2^31 = 21224105^ 37 * 2^31
.word   37053313 // zeta^101 * 2^31 = 21224105^101 * 2^31
.word 3929627279 // zeta^  5 * (q^(-1) mod 2^32) * 2^31 = 21224105^  5 * 71292929 * 2^31
.word 2488719723 // zeta^ 69 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 69 * 71292929 * 2^31
.word 4277121349 // zeta^ 37 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 37 * 71292929 * 2^31
.word 1897317503 // zeta^101 * (q^(-1) mod 2^32) * 2^31 = 21224105^101 * 71292929 * 2^31
.word    4482895 // zeta^133 * 2^31 = 21224105^133 * 2^31
.word   15492289 // zeta^197 * 2^31 = 21224105^197 * 2^31
.word   50954585 // zeta^165 * 2^31 = 21224105^165 * 2^31
.word   51397001 // zeta^229 * 2^31 = 21224105^229 * 2^31
.word   13368597 // zeta^ 42 * 2^31 = 21224105^ 42 * 2^31
.word   46956055 // zeta^170 * 2^31 = 21224105^170 * 2^31
.word   38893665 // zeta^106 * 2^31 = 21224105^106 * 2^31
.word   50639193 // zeta^234 * 2^31 = 21224105^234 * 2^31
.word 1165970155 // zeta^ 42 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 42 * 71292929 * 2^31
.word  254220777 // zeta^170 * (q^(-1) mod 2^32) * 2^31 = 21224105^170 * 71292929 * 2^31
.word  473804703 // zeta^106 * (q^(-1) mod 2^32) * 2^31 = 21224105^106 * 71292929 * 2^31
.word 4268832423 // zeta^234 * (q^(-1) mod 2^32) * 2^31 = 21224105^234 * 71292929 * 2^31
.word   21989155 // zeta^ 21 * 2^31 = 21224105^ 21 * 2^31
.word   59599627 // zeta^ 85 * 2^31 = 21224105^ 85 * 2^31
.word   49109585 // zeta^ 53 * 2^31 = 21224105^ 53 * 2^31
.word   31901721 // zeta^117 * 2^31 = 21224105^117 * 2^31
.word  386789597 // zeta^ 21 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 21 * 71292929 * 2^31
.word  644631797 // zeta^ 85 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 85 * 71292929 * 2^31
.word  988761519 // zeta^ 53 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 53 * 71292929 * 2^31
.word 2736594919 // zeta^117 * (q^(-1) mod 2^32) * 2^31 = 21224105^117 * 71292929 * 2^31
.word   27458873 // zeta^149 * 2^31 = 21224105^149 * 2^31
.word   19221631 // zeta^213 * 2^31 = 21224105^213 * 2^31
.word   49552591 // zeta^181 * 2^31 = 21224105^181 * 2^31
.word   64086513 // zeta^245 * 2^31 = 21224105^245 * 2^31
.word   18563127 // zeta^ 26 * 2^31 = 21224105^ 26 * 2^31
.word   13659269 // zeta^154 * 2^31 = 21224105^154 * 2^31
.word    6808477 // zeta^ 90 * 2^31 = 21224105^ 90 * 2^31
.word   25156895 // zeta^218 * 2^31 = 21224105^218 * 2^31
.word 1462589385 // zeta^ 26 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 26 * 71292929 * 2^31
.word 1524915067 // zeta^154 * (q^(-1) mod 2^32) * 2^31 = 21224105^154 * 71292929 * 2^31
.word 3756565603 // zeta^ 90 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 90 * 71292929 * 2^31
.word  894237409 // zeta^218 * (q^(-1) mod 2^32) * 2^31 = 21224105^218 * 71292929 * 2^31
.word   65803619 // zeta^ 13 * 2^31 = 21224105^ 13 * 2^31
.word   41181789 // zeta^ 77 * 2^31 = 21224105^ 77 * 2^31
.word   28235729 // zeta^ 45 * 2^31 = 21224105^ 45 * 2^31
.word   57735669 // zeta^109 * 2^31 = 21224105^109 * 2^31
.word 4205535901 // zeta^ 13 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 13 * 71292929 * 2^31
.word  564798883 // zeta^ 77 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 77 * 71292929 * 2^31
.word  399101999 // zeta^ 45 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 45 * 71292929 * 2^31
.word 1381846539 // zeta^109 * (q^(-1) mod 2^32) * 2^31 = 21224105^109 * 71292929 * 2^31
.word   59515337 // zeta^141 * 2^31 = 21224105^141 * 2^31
.word   23737507 // zeta^205 * 2^31 = 21224105^205 * 2^31
.word   38742465 // zeta^173 * 2^31 = 21224105^173 * 2^31
.word    7373007 // zeta^237 * 2^31 = 21224105^237 * 2^31
.word   49494815 // zeta^ 58 * 2^31 = 21224105^ 58 * 2^31
.word   40639053 // zeta^186 * 2^31 = 21224105^186 * 2^31
.word    7177603 // zeta^122 * 2^31 = 21224105^122 * 2^31
.word    1950087 // zeta^250 * 2^31 = 21224105^250 * 2^31
.word 3129580769 // zeta^ 58 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 58 * 71292929 * 2^31
.word  443542963 // zeta^186 * (q^(-1) mod 2^32) * 2^31 = 21224105^186 * 71292929 * 2^31
.word 2947478141 // zeta^122 * (q^(-1) mod 2^32) * 2^31 = 21224105^122 * 71292929 * 2^31
.word  677336697 // zeta^250 * (q^(-1) mod 2^32) * 2^31 = 21224105^250 * 71292929 * 2^31
.word   36649543 // zeta^ 29 * 2^31 = 21224105^ 29 * 2^31
.word   16801927 // zeta^ 93 * 2^31 = 21224105^ 93 * 2^31
.word   39975475 // zeta^ 61 * 2^31 = 21224105^ 61 * 2^31
.word   34708039 // zeta^125 * 2^31 = 21224105^125 * 2^31
.word 2972442041 // zeta^ 29 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 29 * 71292929 * 2^31
.word 3495212921 // zeta^ 93 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 93 * 71292929 * 2^31
.word 4092984781 // zeta^ 61 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 61 * 71292929 * 2^31
.word  273251769 // zeta^125 * (q^(-1) mod 2^32) * 2^31 = 21224105^125 * 71292929 * 2^31
.word   57911317 // zeta^157 * 2^31 = 21224105^157 * 2^31
.word   55856649 // zeta^221 * 2^31 = 21224105^221 * 2^31
.word   32224601 // zeta^189 * 2^31 = 21224105^189 * 2^31
.word   66666709 // zeta^253 * 2^31 = 21224105^253 * 2^31
.word   60705671 // zeta^  6 * 2^31 = 21224105^  6 * 2^31
.word   58406951 // zeta^134 * 2^31 = 21224105^134 * 2^31
.word   23867373 // zeta^ 70 * 2^31 = 21224105^ 70 * 2^31
.word   26669715 // zeta^198 * 2^31 = 21224105^198 * 2^31
.word 3127823481 // zeta^  6 * (q^(-1) mod 2^32) * 2^31 = 21224105^  6 * 71292929 * 2^31
.word 2542460889 // zeta^134 * (q^(-1) mod 2^32) * 2^31 = 21224105^134 * 71292929 * 2^31
.word  919656467 // zeta^ 70 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 70 * 71292929 * 2^31
.word 2744124781 // zeta^198 * (q^(-1) mod 2^32) * 2^31 = 21224105^198 * 71292929 * 2^31
.word   23814037 // zeta^  3 * 2^31 = 21224105^  3 * 2^31
.word   18856687 // zeta^ 67 * 2^31 = 21224105^ 67 * 2^31
.word   54338297 // zeta^ 35 * 2^31 = 21224105^ 35 * 2^31
.word   56618763 // zeta^ 99 * 2^31 = 21224105^ 99 * 2^31
.word 2353260651 // zeta^  3 * (q^(-1) mod 2^32) * 2^31 = 21224105^  3 * 71292929 * 2^31
.word 2085985553 // zeta^ 67 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 67 * 71292929 * 2^31
.word 3891905799 // zeta^ 35 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 35 * 71292929 * 2^31
.word  188336373 // zeta^ 99 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 99 * 71292929 * 2^31
.word   26618141 // zeta^131 * 2^31 = 21224105^131 * 2^31
.word   56282849 // zeta^195 * 2^31 = 21224105^195 * 2^31
.word   53722505 // zeta^163 * 2^31 = 21224105^163 * 2^31
.word   23316989 // zeta^227 * 2^31 = 21224105^227 * 2^31
.word   39782807 // zeta^ 38 * 2^31 = 21224105^ 38 * 2^31
.word   17705221 // zeta^166 * 2^31 = 21224105^166 * 2^31
.word   29369949 // zeta^102 * 2^31 = 21224105^102 * 2^31
.word   49812459 // zeta^230 * 2^31 = 21224105^230 * 2^31
.word  358649449 // zeta^ 38 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 38 * 71292929 * 2^31
.word 3759841019 // zeta^166 * (q^(-1) mod 2^32) * 2^31 = 21224105^166 * 71292929 * 2^31
.word 4177420707 // zeta^102 * (q^(-1) mod 2^32) * 2^31 = 21224105^102 * 71292929 * 2^31
.word  426026005 // zeta^230 * (q^(-1) mod 2^32) * 2^31 = 21224105^230 * 71292929 * 2^31
.word   42286697 // zeta^ 19 * 2^31 = 21224105^ 19 * 2^31
.word   17252607 // zeta^ 83 * 2^31 = 21224105^ 83 * 2^31
.word   14807241 // zeta^ 51 * 2^31 = 21224105^ 51 * 2^31
.word   39617057 // zeta^115 * 2^31 = 21224105^115 * 2^31
.word 2432379287 // zeta^ 19 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 19 * 71292929 * 2^31
.word 3848312577 // zeta^ 83 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 83 * 71292929 * 2^31
.word 4135417655 // zeta^ 51 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 51 * 71292929 * 2^31
.word 1706599903 // zeta^115 * (q^(-1) mod 2^32) * 2^31 = 21224105^115 * 71292929 * 2^31
.word   28566647 // zeta^147 * 2^31 = 21224105^147 * 2^31
.word   57621535 // zeta^211 * 2^31 = 21224105^211 * 2^31
.word   57635731 // zeta^179 * 2^31 = 21224105^179 * 2^31
.word    7226843 // zeta^243 * 2^31 = 21224105^243 * 2^31
.word    4594083 // zeta^ 22 * 2^31 = 21224105^ 22 * 2^31
.word    7758757 // zeta^150 * 2^31 = 21224105^150 * 2^31
.word   65137097 // zeta^ 86 * 2^31 = 21224105^ 86 * 2^31
.word   29507409 // zeta^214 * 2^31 = 21224105^214 * 2^31
.word 4277886557 // zeta^ 22 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 22 * 71292929 * 2^31
.word   31155291 // zeta^150 * (q^(-1) mod 2^32) * 2^31 = 21224105^150 * 71292929 * 2^31
.word 2992995895 // zeta^ 86 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 86 * 71292929 * 2^31
.word 1071802543 // zeta^214 * (q^(-1) mod 2^32) * 2^31 = 21224105^214 * 71292929 * 2^31
.word   26740275 // zeta^ 11 * 2^31 = 21224105^ 11 * 2^31
.word   42796923 // zeta^ 75 * 2^31 = 21224105^ 75 * 2^31
.word   27010987 // zeta^ 43 * 2^31 = 21224105^ 43 * 2^31
.word   39320695 // zeta^107 * 2^31 = 21224105^107 * 2^31
.word 1721758157 // zeta^ 11 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 11 * 71292929 * 2^31
.word 1004417157 // zeta^ 75 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 75 * 71292929 * 2^31
.word 3453390933 // zeta^ 43 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 43 * 71292929 * 2^31
.word 3277495177 // zeta^107 * (q^(-1) mod 2^32) * 2^31 = 21224105^107 * 71292929 * 2^31
.word   62169111 // zeta^139 * 2^31 = 21224105^139 * 2^31
.word   56278767 // zeta^203 * 2^31 = 21224105^203 * 2^31
.word   51999501 // zeta^171 * 2^31 = 21224105^171 * 2^31
.word   41776143 // zeta^235 * 2^31 = 21224105^235 * 2^31
.word   38253055 // zeta^ 54 * 2^31 = 21224105^ 54 * 2^31
.word   39394541 // zeta^182 * 2^31 = 21224105^182 * 2^31
.word   29082479 // zeta^118 * 2^31 = 21224105^118 * 2^31
.word   44583105 // zeta^246 * 2^31 = 21224105^246 * 2^31
.word 3049793025 // zeta^ 54 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 54 * 71292929 * 2^31
.word 4209765139 // zeta^182 * (q^(-1) mod 2^32) * 2^31 = 21224105^182 * 71292929 * 2^31
.word 3171783825 // zeta^118 * (q^(-1) mod 2^32) * 2^31 = 21224105^118 * 71292929 * 2^31
.word  343269183 // zeta^246 * (q^(-1) mod 2^32) * 2^31 = 21224105^246 * 71292929 * 2^31
.word   67046997 // zeta^ 27 * 2^31 = 21224105^ 27 * 2^31
.word   59339603 // zeta^ 91 * 2^31 = 21224105^ 91 * 2^31
.word   47267443 // zeta^ 59 * 2^31 = 21224105^ 59 * 2^31
.word   30867557 // zeta^123 * 2^31 = 21224105^123 * 2^31
.word 3976083883 // zeta^ 27 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 27 * 71292929 * 2^31
.word 1438352557 // zeta^ 91 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 91 * 71292929 * 2^31
.word 1177598349 // zeta^ 59 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 59 * 71292929 * 2^31
.word 3908618139 // zeta^123 * (q^(-1) mod 2^32) * 2^31 = 21224105^123 * 71292929 * 2^31
.word   26032801 // zeta^155 * 2^31 = 21224105^155 * 2^31
.word   61420673 // zeta^219 * 2^31 = 21224105^219 * 2^31
.word   14848525 // zeta^187 * 2^31 = 21224105^187 * 2^31
.word   51582797 // zeta^251 * 2^31 = 21224105^251 * 2^31
.word   30585257 // zeta^ 14 * 2^31 = 21224105^ 14 * 2^31
.word   15268201 // zeta^142 * 2^31 = 21224105^142 * 2^31
.word   40572935 // zeta^ 78 * 2^31 = 21224105^ 78 * 2^31
.word   55301277 // zeta^206 * 2^31 = 21224105^206 * 2^31
.word 3685725783 // zeta^ 14 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 14 * 71292929 * 2^31
.word 1741647511 // zeta^142 * (q^(-1) mod 2^32) * 2^31 = 21224105^142 * 71292929 * 2^31
.word 2610298873 // zeta^ 78 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 78 * 71292929 * 2^31
.word  984396643 // zeta^206 * (q^(-1) mod 2^32) * 2^31 = 21224105^206 * 71292929 * 2^31
.word   62478247 // zeta^  7 * 2^31 = 21224105^  7 * 2^31
.word   13974447 // zeta^ 71 * 2^31 = 21224105^ 71 * 2^31
.word   14999777 // zeta^ 39 * 2^31 = 21224105^ 39 * 2^31
.word   59134963 // zeta^103 * 2^31 = 21224105^103 * 2^31
.word 1815658585 // zeta^  7 * (q^(-1) mod 2^32) * 2^31 = 21224105^  7 * 71292929 * 2^31
.word 2831031377 // zeta^ 71 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 71 * 71292929 * 2^31
.word  100550431 // zeta^ 39 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 39 * 71292929 * 2^31
.word  819438605 // zeta^103 * (q^(-1) mod 2^32) * 2^31 = 21224105^103 * 71292929 * 2^31
.word   53918527 // zeta^135 * 2^31 = 21224105^135 * 2^31
.word   10108243 // zeta^199 * 2^31 = 21224105^199 * 2^31
.word   10961253 // zeta^167 * 2^31 = 21224105^167 * 2^31
.word   23786629 // zeta^231 * 2^31 = 21224105^231 * 2^31
.word   39625501 // zeta^ 46 * 2^31 = 21224105^ 46 * 2^31
.word    5900879 // zeta^174 * 2^31 = 21224105^174 * 2^31
.word   25272919 // zeta^110 * 2^31 = 21224105^110 * 2^31
.word   54885097 // zeta^238 * 2^31 = 21224105^238 * 2^31
.word 1004528867 // zeta^ 46 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 46 * 71292929 * 2^31
.word 1099058609 // zeta^174 * (q^(-1) mod 2^32) * 2^31 = 21224105^174 * 71292929 * 2^31
.word 1310455209 // zeta^110 * (q^(-1) mod 2^32) * 2^31 = 21224105^110 * 71292929 * 2^31
.word 2041507095 // zeta^238 * (q^(-1) mod 2^32) * 2^31 = 21224105^238 * 71292929 * 2^31
.word   59164407 // zeta^ 23 * 2^31 = 21224105^ 23 * 2^31
.word   66143065 // zeta^ 87 * 2^31 = 21224105^ 87 * 2^31
.word   43155485 // zeta^ 55 * 2^31 = 21224105^ 55 * 2^31
.word   17669861 // zeta^119 * 2^31 = 21224105^119 * 2^31
.word 1909444873 // zeta^ 23 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 23 * 71292929 * 2^31
.word 1951704231 // zeta^ 87 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 87 * 71292929 * 2^31
.word 1714554851 // zeta^ 55 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 55 * 71292929 * 2^31
.word 3532007707 // zeta^119 * (q^(-1) mod 2^32) * 2^31 = 21224105^119 * 71292929 * 2^31
.word   24091995 // zeta^151 * 2^31 = 21224105^151 * 2^31
.word   16101757 // zeta^215 * 2^31 = 21224105^215 * 2^31
.word   13774769 // zeta^183 * 2^31 = 21224105^183 * 2^31
.word   36746905 // zeta^247 * 2^31 = 21224105^247 * 2^31
.word   37675113 // zeta^ 30 * 2^31 = 21224105^ 30 * 2^31
.word   35767195 // zeta^158 * 2^31 = 21224105^158 * 2^31
.word    8442215 // zeta^ 94 * 2^31 = 21224105^ 94 * 2^31
.word   45014229 // zeta^222 * 2^31 = 21224105^222 * 2^31
.word  311527319 // zeta^ 30 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 30 * 71292929 * 2^31
.word 4054742117 // zeta^158 * (q^(-1) mod 2^32) * 2^31 = 21224105^158 * 71292929 * 2^31
.word  712459929 // zeta^ 94 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 94 * 71292929 * 2^31
.word 3331484459 // zeta^222 * (q^(-1) mod 2^32) * 2^31 = 21224105^222 * 71292929 * 2^31
.word   36697917 // zeta^ 15 * 2^31 = 21224105^ 15 * 2^31
.word   58452265 // zeta^ 79 * 2^31 = 21224105^ 79 * 2^31
.word   13961957 // zeta^ 47 * 2^31 = 21224105^ 47 * 2^31
.word   61179875 // zeta^111 * 2^31 = 21224105^111 * 2^31
.word 3107033283 // zeta^ 15 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 15 * 71292929 * 2^31
.word 1790082775 // zeta^ 79 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 79 * 71292929 * 2^31
.word 4221484315 // zeta^ 47 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 47 * 71292929 * 2^31
.word 1423306781 // zeta^111 * (q^(-1) mod 2^32) * 2^31 = 21224105^111 * 71292929 * 2^31
.word    6463229 // zeta^143 * 2^31 = 21224105^143 * 2^31
.word   13236309 // zeta^207 * 2^31 = 21224105^207 * 2^31
.word    4183205 // zeta^175 * 2^31 = 21224105^175 * 2^31
.word   45952127 // zeta^239 * 2^31 = 21224105^239 * 2^31
.word   36750327 // zeta^ 62 * 2^31 = 21224105^ 62 * 2^31
.word   35947815 // zeta^190 * 2^31 = 21224105^190 * 2^31
.word   30669833 // zeta^126 * 2^31 = 21224105^126 * 2^31
.word   20303881 // zeta^254 * 2^31 = 21224105^254 * 2^31
.word 3266171913 // zeta^ 62 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 62 * 71292929 * 2^31
.word 3437859545 // zeta^190 * (q^(-1) mod 2^32) * 2^31 = 21224105^190 * 71292929 * 2^31
.word 4149046263 // zeta^126 * (q^(-1) mod 2^32) * 2^31 = 21224105^126 * 71292929 * 2^31
.word 1091278839 // zeta^254 * (q^(-1) mod 2^32) * 2^31 = 21224105^254 * 71292929 * 2^31
.word   18340771 // zeta^ 31 * 2^31 = 21224105^ 31 * 2^31
.word   29457983 // zeta^ 95 * 2^31 = 21224105^ 95 * 2^31
.word   11263143 // zeta^ 63 * 2^31 = 21224105^ 63 * 2^31
.word   47890357 // zeta^127 * 2^31 = 21224105^127 * 2^31
.word 1148820573 // zeta^ 31 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 31 * 71292929 * 2^31
.word 2922928577 // zeta^ 95 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 95 * 71292929 * 2^31
.word  336477017 // zeta^ 63 * (q^(-1) mod 2^32) * 2^31 = 21224105^ 63 * 71292929 * 2^31
.word 1775863883 // zeta^127 * (q^(-1) mod 2^32) * 2^31 = 21224105^127 * 71292929 * 2^31
.word   64730193 // zeta^159 * 2^31 = 21224105^159 * 2^31
.word   58025703 // zeta^223 * 2^31 = 21224105^223 * 2^31
.word    7013271 // zeta^191 * 2^31 = 21224105^191 * 2^31
.word   34564147 // zeta^255 * 2^31 = 21224105^255 * 2^31
.text
.align 4
roots_addr: .word roots
.syntax unified
.type ntt_512_u32_33564673_21224105, %function
.global ntt_512_u32_33564673_21224105
ntt_512_u32_33564673_21224105:
// Save GPRs
push {r4-r11,lr}
// Save MVE vector registers
vpush {d8-d15}
// Use r14 as marker for r0 + 1008
add r14, r0, #1008
// Use r12 as marker for r0 + 2016
add r12, r14, #1008
.equ modulus, 33564673
movw r11, #:lower16:modulus
movt r11, #:upper16:modulus
ldr r10, roots_addr
ldrd r9, r8, [r10], #+8
ldrd r7, r6, [r10], #+8
ldrd r5, r4, [r10], #+8
// input[192]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -60)]
vqrdmulh.s32 Q1, Q0, r9
// input[128]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -124)]
vmul.u32 Q0, Q0, r8
// input[64]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 64)]
vqrdmlah.s32 Q1, Q0, r11
vqrdmulh.s32 Q4, Q2, r9
vsub.s32 Q0, Q3, Q1
vmul.u32 Q2, Q2, r8
vadd.s32 Q3, Q3, Q1
vqrdmlah.s32 Q4, Q2, r11
// input[0]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 0)]
vqrdmulh.s32 Q5, Q0, r5
vsub.s32 Q2, Q1, Q4
vmul.u32 Q0, Q0, r4
vadd.s32 Q1, Q1, Q4
vqrdmlah.s32 Q5, Q0, r11
// input[196]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -56)]
vqrdmulh.s32 Q6, Q3, r7
vsub.s32 Q0, Q2, Q5
vmul.u32 Q3, Q3, r6
vadd.s32 Q2, Q2, Q5
vstrw.u32 Q0, [r14,#(-240)]
// Release input[192] from Q0
vqrdmlah.s32 Q6, Q3, r11
vstrw.u32 Q2, [r14,#(-496)]
// Release input[128] from Q2
vsub.s32 Q3, Q1, Q6
vstrw.u32 Q3, [r0,#(256)]
// Release input[64] from Q3
vadd.s32 Q1, Q1, Q6
// input[196]: Already loaded as Q4
vqrdmulh.s32 Q0, Q4, r9
// input[132]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -120)]
vmul.u32 Q4, Q4, r8
// input[68]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 68)]
vqrdmlah.s32 Q0, Q4, r11
vstrw.u32 Q1, [r0,#(0)]
// Release input[0] from Q1
vqrdmulh.s32 Q1, Q2, r9
vsub.s32 Q4, Q3, Q0
vmul.u32 Q2, Q2, r8
vadd.s32 Q3, Q3, Q0
vqrdmlah.s32 Q1, Q2, r11
// input[4]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 4)]
vqrdmulh.s32 Q5, Q4, r5
vsub.s32 Q2, Q0, Q1
vmul.u32 Q4, Q4, r4
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q4, r11
// input[200]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -52)]
vqrdmulh.s32 Q6, Q3, r7
vsub.s32 Q4, Q2, Q5
vmul.u32 Q3, Q3, r6
vadd.s32 Q2, Q2, Q5
vstrw.u32 Q4, [r14,#(-224)]
// Release input[196] from Q4
vqrdmlah.s32 Q6, Q3, r11
vstrw.u32 Q2, [r14,#(-480)]
// Release input[132] from Q2
vsub.s32 Q3, Q0, Q6
vstrw.u32 Q3, [r0,#(272)]
// Release input[68] from Q3
vadd.s32 Q0, Q0, Q6
// input[200]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r9
// input[136]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -116)]
vmul.u32 Q1, Q1, r8
// input[72]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 72)]
vqrdmlah.s32 Q2, Q1, r11
vstrw.u32 Q0, [r0,#(16)]
// Release input[4] from Q0
vqrdmulh.s32 Q0, Q3, r9
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r11
// input[8]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 8)]
vqrdmulh.s32 Q5, Q1, r5
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r4
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r11
// input[204]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -48)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(-208)]
// Release input[200] from Q1
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(-464)]
// Release input[136] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(288)]
// Release input[72] from Q4
vadd.s32 Q2, Q2, Q6
// input[204]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r9
// input[140]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -112)]
vmul.u32 Q0, Q0, r8
// input[76]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 76)]
vqrdmlah.s32 Q1, Q0, r11
vstrw.u32 Q2, [r0,#(32)]
// Release input[8] from Q2
vqrdmulh.s32 Q2, Q3, r9
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r11
// input[12]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 12)]
vqrdmulh.s32 Q5, Q0, r5
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r4
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r11
// input[208]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -44)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-192)]
// Release input[204] from Q0
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(-448)]
// Release input[140] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r0,#(304)]
// Release input[76] from Q4
vadd.s32 Q1, Q1, Q6
// input[208]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r9
// input[144]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -108)]
vmul.u32 Q2, Q2, r8
// input[80]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 80)]
vqrdmlah.s32 Q0, Q2, r11
vstrw.u32 Q1, [r0,#(48)]
// Release input[12] from Q1
vqrdmulh.s32 Q1, Q3, r9
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r11
// input[16]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 16)]
vqrdmulh.s32 Q5, Q2, r5
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r4
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r11
// input[212]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -40)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(-176)]
// Release input[208] from Q2
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(-432)]
// Release input[144] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r0,#(320)]
// Release input[80] from Q4
vadd.s32 Q0, Q0, Q6
// input[212]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r9
// input[148]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -104)]
vmul.u32 Q1, Q1, r8
// input[84]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 84)]
vqrdmlah.s32 Q2, Q1, r11
vstrw.u32 Q0, [r0,#(64)]
// Release input[16] from Q0
vqrdmulh.s32 Q0, Q3, r9
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r11
// input[20]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 20)]
vqrdmulh.s32 Q5, Q1, r5
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r4
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r11
// input[216]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -36)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(-160)]
// Release input[212] from Q1
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(-416)]
// Release input[148] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(336)]
// Release input[84] from Q4
vadd.s32 Q2, Q2, Q6
// input[216]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r9
// input[152]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -100)]
vmul.u32 Q0, Q0, r8
// input[88]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 88)]
vqrdmlah.s32 Q1, Q0, r11
vstrw.u32 Q2, [r0,#(80)]
// Release input[20] from Q2
vqrdmulh.s32 Q2, Q3, r9
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r11
// input[24]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 24)]
vqrdmulh.s32 Q5, Q0, r5
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r4
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r11
// input[220]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -32)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-144)]
// Release input[216] from Q0
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(-400)]
// Release input[152] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r0,#(352)]
// Release input[88] from Q4
vadd.s32 Q1, Q1, Q6
// input[220]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r9
// input[156]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -96)]
vmul.u32 Q2, Q2, r8
// input[92]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 92)]
vqrdmlah.s32 Q0, Q2, r11
vstrw.u32 Q1, [r0,#(96)]
// Release input[24] from Q1
vqrdmulh.s32 Q1, Q3, r9
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r11
// input[28]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 28)]
vqrdmulh.s32 Q5, Q2, r5
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r4
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r11
// input[224]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -28)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(-128)]
// Release input[220] from Q2
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(-384)]
// Release input[156] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r0,#(368)]
// Release input[92] from Q4
vadd.s32 Q0, Q0, Q6
// input[224]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r9
// input[160]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -92)]
vmul.u32 Q1, Q1, r8
// input[96]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 96)]
vqrdmlah.s32 Q2, Q1, r11
vstrw.u32 Q0, [r0,#(112)]
// Release input[28] from Q0
vqrdmulh.s32 Q0, Q3, r9
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r11
// input[32]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 32)]
vqrdmulh.s32 Q5, Q1, r5
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r4
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r11
// input[228]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -24)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(-112)]
// Release input[224] from Q1
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(-368)]
// Release input[160] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(384)]
// Release input[96] from Q4
vadd.s32 Q2, Q2, Q6
// input[228]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r9
// input[164]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -88)]
vmul.u32 Q0, Q0, r8
// input[100]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 100)]
vqrdmlah.s32 Q1, Q0, r11
vstrw.u32 Q2, [r0,#(128)]
// Release input[32] from Q2
vqrdmulh.s32 Q2, Q3, r9
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r11
// input[36]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 36)]
vqrdmulh.s32 Q5, Q0, r5
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r4
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r11
// input[232]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -20)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-96)]
// Release input[228] from Q0
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(-352)]
// Release input[164] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r0,#(400)]
// Release input[100] from Q4
vadd.s32 Q1, Q1, Q6
// input[232]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r9
// input[168]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -84)]
vmul.u32 Q2, Q2, r8
// input[104]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 104)]
vqrdmlah.s32 Q0, Q2, r11
vstrw.u32 Q1, [r0,#(144)]
// Release input[36] from Q1
vqrdmulh.s32 Q1, Q3, r9
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r11
// input[40]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 40)]
vqrdmulh.s32 Q5, Q2, r5
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r4
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r11
// input[236]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -16)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(-80)]
// Release input[232] from Q2
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(-336)]
// Release input[168] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r0,#(416)]
// Release input[104] from Q4
vadd.s32 Q0, Q0, Q6
// input[236]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r9
// input[172]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -80)]
vmul.u32 Q1, Q1, r8
// input[108]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 108)]
vqrdmlah.s32 Q2, Q1, r11
vstrw.u32 Q0, [r0,#(160)]
// Release input[40] from Q0
vqrdmulh.s32 Q0, Q3, r9
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r11
// input[44]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 44)]
vqrdmulh.s32 Q5, Q1, r5
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r4
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r11
// input[240]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -12)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(-64)]
// Release input[236] from Q1
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(-320)]
// Release input[172] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(432)]
// Release input[108] from Q4
vadd.s32 Q2, Q2, Q6
// input[240]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r9
// input[176]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -76)]
vmul.u32 Q0, Q0, r8
// input[112]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 112)]
vqrdmlah.s32 Q1, Q0, r11
vstrw.u32 Q2, [r0,#(176)]
// Release input[44] from Q2
vqrdmulh.s32 Q2, Q3, r9
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r11
// input[48]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 48)]
vqrdmulh.s32 Q5, Q0, r5
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r4
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r11
// input[244]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -8)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-48)]
// Release input[240] from Q0
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(-304)]
// Release input[176] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r0,#(448)]
// Release input[112] from Q4
vadd.s32 Q1, Q1, Q6
// input[244]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r9
// input[180]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -72)]
vmul.u32 Q2, Q2, r8
// input[116]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 116)]
vqrdmlah.s32 Q0, Q2, r11
vstrw.u32 Q1, [r0,#(192)]
// Release input[48] from Q1
vqrdmulh.s32 Q1, Q3, r9
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r11
// input[52]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 52)]
vqrdmulh.s32 Q5, Q2, r5
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r4
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r11
// input[248]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -4)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(-32)]
// Release input[244] from Q2
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(-288)]
// Release input[180] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r0,#(464)]
// Release input[116] from Q4
vadd.s32 Q0, Q0, Q6
// input[248]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r9
// input[184]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -68)]
vmul.u32 Q1, Q1, r8
// input[120]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 120)]
vqrdmlah.s32 Q2, Q1, r11
vstrw.u32 Q0, [r0,#(208)]
// Release input[52] from Q0
vqrdmulh.s32 Q0, Q3, r9
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r11
// input[56]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 56)]
vqrdmulh.s32 Q5, Q1, r5
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r4
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r11
// input[252]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 0)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(-16)]
// Release input[248] from Q1
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(-272)]
// Release input[184] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(480)]
// Release input[120] from Q4
vadd.s32 Q2, Q2, Q6
// input[252]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r9
// input[188]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -64)]
vmul.u32 Q0, Q0, r8
// input[124]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 124)]
vqrdmlah.s32 Q1, Q0, r11
vstrw.u32 Q2, [r0,#(224)]
// Release input[56] from Q2
vqrdmulh.s32 Q2, Q3, r9
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r11
// input[60]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 60)]
vqrdmulh.s32 Q5, Q0, r5
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r4
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r11
// input[448]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -56)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(0)]
// Release input[252] from Q0
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(-256)]
// Release input[188] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r0,#(496)]
// Release input[124] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r9, r8, [r10], #+8
ldrd r7, r6, [r10], #+8
ldrd r5, r4, [r10], #+8
// input[448]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r9
// input[384]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -120)]
vmul.u32 Q2, Q2, r8
// input[320]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 68)]
vqrdmlah.s32 Q0, Q2, r11
vstrw.u32 Q1, [r0,#(240)]
// Release input[60] from Q1
vqrdmulh.s32 Q1, Q3, r9
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r11
// input[256]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 4)]
vqrdmulh.s32 Q5, Q2, r5
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r4
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r11
// input[452]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -52)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(-224)]
// Release input[448] from Q2
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r12,#(-480)]
// Release input[384] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(272)]
// Release input[320] from Q4
vadd.s32 Q0, Q0, Q6
// input[452]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r9
// input[388]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -116)]
vmul.u32 Q1, Q1, r8
// input[324]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 72)]
vqrdmlah.s32 Q2, Q1, r11
vstrw.u32 Q0, [r14,#(16)]
// Release input[256] from Q0
vqrdmulh.s32 Q0, Q3, r9
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r11
// input[260]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 8)]
vqrdmulh.s32 Q5, Q1, r5
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r4
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r11
// input[456]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -48)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(-208)]
// Release input[452] from Q1
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r12,#(-464)]
// Release input[388] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(288)]
// Release input[324] from Q4
vadd.s32 Q2, Q2, Q6
// input[456]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r9
// input[392]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -112)]
vmul.u32 Q0, Q0, r8
// input[328]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 76)]
vqrdmlah.s32 Q1, Q0, r11
vstrw.u32 Q2, [r14,#(32)]
// Release input[260] from Q2
vqrdmulh.s32 Q2, Q3, r9
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r11
// input[264]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 12)]
vqrdmulh.s32 Q5, Q0, r5
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r4
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r11
// input[460]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -44)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r12,#(-192)]
// Release input[456] from Q0
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r12,#(-448)]
// Release input[392] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(304)]
// Release input[328] from Q4
vadd.s32 Q1, Q1, Q6
// input[460]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r9
// input[396]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -108)]
vmul.u32 Q2, Q2, r8
// input[332]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 80)]
vqrdmlah.s32 Q0, Q2, r11
vstrw.u32 Q1, [r14,#(48)]
// Release input[264] from Q1
vqrdmulh.s32 Q1, Q3, r9
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r11
// input[268]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 16)]
vqrdmulh.s32 Q5, Q2, r5
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r4
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r11
// input[464]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -40)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(-176)]
// Release input[460] from Q2
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r12,#(-432)]
// Release input[396] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(320)]
// Release input[332] from Q4
vadd.s32 Q0, Q0, Q6
// input[464]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r9
// input[400]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -104)]
vmul.u32 Q1, Q1, r8
// input[336]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 84)]
vqrdmlah.s32 Q2, Q1, r11
vstrw.u32 Q0, [r14,#(64)]
// Release input[268] from Q0
vqrdmulh.s32 Q0, Q3, r9
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r11
// input[272]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 20)]
vqrdmulh.s32 Q5, Q1, r5
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r4
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r11
// input[468]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -36)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(-160)]
// Release input[464] from Q1
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r12,#(-416)]
// Release input[400] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(336)]
// Release input[336] from Q4
vadd.s32 Q2, Q2, Q6
// input[468]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r9
// input[404]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -100)]
vmul.u32 Q0, Q0, r8
// input[340]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 88)]
vqrdmlah.s32 Q1, Q0, r11
vstrw.u32 Q2, [r14,#(80)]
// Release input[272] from Q2
vqrdmulh.s32 Q2, Q3, r9
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r11
// input[276]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 24)]
vqrdmulh.s32 Q5, Q0, r5
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r4
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r11
// input[472]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -32)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r12,#(-144)]
// Release input[468] from Q0
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r12,#(-400)]
// Release input[404] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(352)]
// Release input[340] from Q4
vadd.s32 Q1, Q1, Q6
// input[472]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r9
// input[408]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -96)]
vmul.u32 Q2, Q2, r8
// input[344]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 92)]
vqrdmlah.s32 Q0, Q2, r11
vstrw.u32 Q1, [r14,#(96)]
// Release input[276] from Q1
vqrdmulh.s32 Q1, Q3, r9
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r11
// input[280]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 28)]
vqrdmulh.s32 Q5, Q2, r5
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r4
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r11
// input[476]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -28)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(-128)]
// Release input[472] from Q2
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r12,#(-384)]
// Release input[408] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(368)]
// Release input[344] from Q4
vadd.s32 Q0, Q0, Q6
// input[476]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r9
// input[412]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -92)]
vmul.u32 Q1, Q1, r8
// input[348]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 96)]
vqrdmlah.s32 Q2, Q1, r11
vstrw.u32 Q0, [r14,#(112)]
// Release input[280] from Q0
vqrdmulh.s32 Q0, Q3, r9
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r11
// input[284]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 32)]
vqrdmulh.s32 Q5, Q1, r5
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r4
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r11
// input[480]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -24)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(-112)]
// Release input[476] from Q1
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r12,#(-368)]
// Release input[412] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(384)]
// Release input[348] from Q4
vadd.s32 Q2, Q2, Q6
// input[480]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r9
// input[416]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -88)]
vmul.u32 Q0, Q0, r8
// input[352]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 100)]
vqrdmlah.s32 Q1, Q0, r11
vstrw.u32 Q2, [r14,#(128)]
// Release input[284] from Q2
vqrdmulh.s32 Q2, Q3, r9
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r11
// input[288]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 36)]
vqrdmulh.s32 Q5, Q0, r5
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r4
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r11
// input[484]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -20)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r12,#(-96)]
// Release input[480] from Q0
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r12,#(-352)]
// Release input[416] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(400)]
// Release input[352] from Q4
vadd.s32 Q1, Q1, Q6
// input[484]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r9
// input[420]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -84)]
vmul.u32 Q2, Q2, r8
// input[356]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 104)]
vqrdmlah.s32 Q0, Q2, r11
vstrw.u32 Q1, [r14,#(144)]
// Release input[288] from Q1
vqrdmulh.s32 Q1, Q3, r9
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r11
// input[292]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 40)]
vqrdmulh.s32 Q5, Q2, r5
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r4
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r11
// input[488]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -16)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(-80)]
// Release input[484] from Q2
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r12,#(-336)]
// Release input[420] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(416)]
// Release input[356] from Q4
vadd.s32 Q0, Q0, Q6
// input[488]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r9
// input[424]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -80)]
vmul.u32 Q1, Q1, r8
// input[360]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 108)]
vqrdmlah.s32 Q2, Q1, r11
vstrw.u32 Q0, [r14,#(160)]
// Release input[292] from Q0
vqrdmulh.s32 Q0, Q3, r9
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r11
// input[296]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 44)]
vqrdmulh.s32 Q5, Q1, r5
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r4
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r11
// input[492]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -12)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(-64)]
// Release input[488] from Q1
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r12,#(-320)]
// Release input[424] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(432)]
// Release input[360] from Q4
vadd.s32 Q2, Q2, Q6
// input[492]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r9
// input[428]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -76)]
vmul.u32 Q0, Q0, r8
// input[364]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 112)]
vqrdmlah.s32 Q1, Q0, r11
vstrw.u32 Q2, [r14,#(176)]
// Release input[296] from Q2
vqrdmulh.s32 Q2, Q3, r9
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r11
// input[300]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 48)]
vqrdmulh.s32 Q5, Q0, r5
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r4
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r11
// input[496]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -8)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r12,#(-48)]
// Release input[492] from Q0
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r12,#(-304)]
// Release input[428] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(448)]
// Release input[364] from Q4
vadd.s32 Q1, Q1, Q6
// input[496]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r9
// input[432]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -72)]
vmul.u32 Q2, Q2, r8
// input[368]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 116)]
vqrdmlah.s32 Q0, Q2, r11
vstrw.u32 Q1, [r14,#(192)]
// Release input[300] from Q1
vqrdmulh.s32 Q1, Q3, r9
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r11
// input[304]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 52)]
vqrdmulh.s32 Q5, Q2, r5
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r4
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r11
// input[500]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -4)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(-32)]
// Release input[496] from Q2
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r12,#(-288)]
// Release input[432] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(464)]
// Release input[368] from Q4
vadd.s32 Q0, Q0, Q6
// input[500]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r9
// input[436]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -68)]
vmul.u32 Q1, Q1, r8
// input[372]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 120)]
vqrdmlah.s32 Q2, Q1, r11
vstrw.u32 Q0, [r14,#(208)]
// Release input[304] from Q0
vqrdmulh.s32 Q0, Q3, r9
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r11
// input[308]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 56)]
vqrdmulh.s32 Q5, Q1, r5
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r4
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r11
// input[504]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * 0)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(-16)]
// Release input[500] from Q1
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r12,#(-272)]
// Release input[436] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(480)]
// Release input[372] from Q4
vadd.s32 Q2, Q2, Q6
// input[504]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r9
// input[440]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -64)]
vmul.u32 Q0, Q0, r8
// input[376]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 124)]
vqrdmlah.s32 Q1, Q0, r11
vstrw.u32 Q2, [r14,#(224)]
// Release input[308] from Q2
vqrdmulh.s32 Q2, Q3, r9
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r11
// input[312]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 60)]
vqrdmulh.s32 Q5, Q0, r5
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r4
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r11
// input[508]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 4)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r12,#(0)]
// Release input[504] from Q0
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r12,#(-256)]
// Release input[440] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(496)]
// Release input[376] from Q4
vadd.s32 Q1, Q1, Q6
// input[508]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r9
// input[444]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -60)]
vmul.u32 Q2, Q2, r8
// input[380]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -124)]
vqrdmlah.s32 Q0, Q2, r11
vstrw.u32 Q1, [r14,#(240)]
// Release input[312] from Q1
vqrdmulh.s32 Q1, Q3, r9
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r11
// input[316]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 64)]
vqrdmulh.s32 Q5, Q2, r5
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r4
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r11
// input[48]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 48)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(16)]
// Release input[508] from Q2
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r12,#(-240)]
// Release input[444] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(-496)]
// Release input[380] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r9, r8, [r10], #+8
ldrd r7, r6, [r10], #+8
ldrd r5, r4, [r10], #+8
// input[48]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r9
// input[32]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 32)]
vmul.u32 Q1, Q1, r8
// input[16]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 16)]
vqrdmlah.s32 Q2, Q1, r11
vstrw.u32 Q0, [r14,#(256)]
// Release input[316] from Q0
vqrdmulh.s32 Q0, Q3, r9
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r11
// input[0]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 0)]
vqrdmulh.s32 Q5, Q1, r5
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r4
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r11
// input[52]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 52)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r0,#(192)]
// Release input[48] from Q1
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r0,#(128)]
// Release input[32] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(64)]
// Release input[16] from Q4
vadd.s32 Q2, Q2, Q6
// input[52]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r9
// input[36]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 36)]
vmul.u32 Q0, Q0, r8
// input[20]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 20)]
vqrdmlah.s32 Q1, Q0, r11
vstrw.u32 Q2, [r0,#(0)]
// Release input[0] from Q2
vqrdmulh.s32 Q2, Q3, r9
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r11
// input[4]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 4)]
vqrdmulh.s32 Q5, Q0, r5
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r4
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r11
// input[56]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 56)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r0,#(208)]
// Release input[52] from Q0
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r0,#(144)]
// Release input[36] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r0,#(80)]
// Release input[20] from Q4
vadd.s32 Q1, Q1, Q6
// input[56]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r9
// input[40]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 40)]
vmul.u32 Q2, Q2, r8
// input[24]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 24)]
vqrdmlah.s32 Q0, Q2, r11
vstrw.u32 Q1, [r0,#(16)]
// Release input[4] from Q1
vqrdmulh.s32 Q1, Q3, r9
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r11
// input[8]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 8)]
vqrdmulh.s32 Q5, Q2, r5
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r4
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r11
// input[60]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 60)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r0,#(224)]
// Release input[56] from Q2
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r0,#(160)]
// Release input[40] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r0,#(96)]
// Release input[24] from Q4
vadd.s32 Q0, Q0, Q6
// input[60]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r9
// input[44]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 44)]
vmul.u32 Q1, Q1, r8
// input[28]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 28)]
vqrdmlah.s32 Q2, Q1, r11
vstrw.u32 Q0, [r0,#(32)]
// Release input[8] from Q0
vqrdmulh.s32 Q0, Q3, r9
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r11
// input[12]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 12)]
vqrdmulh.s32 Q5, Q1, r5
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r4
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r11
// input[112]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 112)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r0,#(240)]
// Release input[60] from Q1
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r0,#(176)]
// Release input[44] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(112)]
// Release input[28] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r9, r8, [r10], #+8
ldrd r7, r6, [r10], #+8
ldrd r5, r4, [r10], #+8
// input[112]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r9
// input[96]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 96)]
vmul.u32 Q0, Q0, r8
// input[80]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 80)]
vqrdmlah.s32 Q1, Q0, r11
vstrw.u32 Q2, [r0,#(48)]
// Release input[12] from Q2
vqrdmulh.s32 Q2, Q3, r9
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r11
// input[64]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 64)]
vqrdmulh.s32 Q5, Q0, r5
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r4
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r11
// input[116]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 116)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r0,#(448)]
// Release input[112] from Q0
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r0,#(384)]
// Release input[96] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r0,#(320)]
// Release input[80] from Q4
vadd.s32 Q1, Q1, Q6
// input[116]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r9
// input[100]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 100)]
vmul.u32 Q2, Q2, r8
// input[84]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 84)]
vqrdmlah.s32 Q0, Q2, r11
vstrw.u32 Q1, [r0,#(256)]
// Release input[64] from Q1
vqrdmulh.s32 Q1, Q3, r9
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r11
// input[68]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 68)]
vqrdmulh.s32 Q5, Q2, r5
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r4
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r11
// input[120]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 120)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r0,#(464)]
// Release input[116] from Q2
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r0,#(400)]
// Release input[100] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r0,#(336)]
// Release input[84] from Q4
vadd.s32 Q0, Q0, Q6
// input[120]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r9
// input[104]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 104)]
vmul.u32 Q1, Q1, r8
// input[88]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 88)]
vqrdmlah.s32 Q2, Q1, r11
vstrw.u32 Q0, [r0,#(272)]
// Release input[68] from Q0
vqrdmulh.s32 Q0, Q3, r9
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r11
// input[72]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 72)]
vqrdmulh.s32 Q5, Q1, r5
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r4
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r11
// input[124]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 124)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r0,#(480)]
// Release input[120] from Q1
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r0,#(416)]
// Release input[104] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(352)]
// Release input[88] from Q4
vadd.s32 Q2, Q2, Q6
// input[124]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r9
// input[108]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 108)]
vmul.u32 Q0, Q0, r8
// input[92]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 92)]
vqrdmlah.s32 Q1, Q0, r11
vstrw.u32 Q2, [r0,#(288)]
// Release input[72] from Q2
vqrdmulh.s32 Q2, Q3, r9
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r11
// input[76]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 76)]
vqrdmulh.s32 Q5, Q0, r5
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r4
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r11
// input[176]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -76)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r0,#(496)]
// Release input[124] from Q0
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r0,#(432)]
// Release input[108] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r0,#(368)]
// Release input[92] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r9, r8, [r10], #+8
ldrd r7, r6, [r10], #+8
ldrd r5, r4, [r10], #+8
// input[176]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r9
// input[160]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -92)]
vmul.u32 Q2, Q2, r8
// input[144]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -108)]
vqrdmlah.s32 Q0, Q2, r11
vstrw.u32 Q1, [r0,#(304)]
// Release input[76] from Q1
vqrdmulh.s32 Q1, Q3, r9
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r11
// input[128]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -124)]
vqrdmulh.s32 Q5, Q2, r5
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r4
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r11
// input[180]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -72)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(-304)]
// Release input[176] from Q2
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(-368)]
// Release input[160] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(-432)]
// Release input[144] from Q4
vadd.s32 Q0, Q0, Q6
// input[180]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r9
// input[164]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -88)]
vmul.u32 Q1, Q1, r8
// input[148]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -104)]
vqrdmlah.s32 Q2, Q1, r11
vstrw.u32 Q0, [r14,#(-496)]
// Release input[128] from Q0
vqrdmulh.s32 Q0, Q3, r9
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r11
// input[132]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -120)]
vqrdmulh.s32 Q5, Q1, r5
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r4
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r11
// input[184]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -68)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(-288)]
// Release input[180] from Q1
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(-352)]
// Release input[164] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-416)]
// Release input[148] from Q4
vadd.s32 Q2, Q2, Q6
// input[184]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r9
// input[168]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -84)]
vmul.u32 Q0, Q0, r8
// input[152]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -100)]
vqrdmlah.s32 Q1, Q0, r11
vstrw.u32 Q2, [r14,#(-480)]
// Release input[132] from Q2
vqrdmulh.s32 Q2, Q3, r9
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r11
// input[136]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -116)]
vqrdmulh.s32 Q5, Q0, r5
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r4
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r11
// input[188]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -64)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-272)]
// Release input[184] from Q0
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(-336)]
// Release input[168] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(-400)]
// Release input[152] from Q4
vadd.s32 Q1, Q1, Q6
// input[188]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r9
// input[172]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -80)]
vmul.u32 Q2, Q2, r8
// input[156]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -96)]
vqrdmlah.s32 Q0, Q2, r11
vstrw.u32 Q1, [r14,#(-464)]
// Release input[136] from Q1
vqrdmulh.s32 Q1, Q3, r9
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r11
// input[140]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -112)]
vqrdmulh.s32 Q5, Q2, r5
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r4
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r11
// input[240]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -12)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(-256)]
// Release input[188] from Q2
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(-320)]
// Release input[172] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(-384)]
// Release input[156] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r9, r8, [r10], #+8
ldrd r7, r6, [r10], #+8
ldrd r5, r4, [r10], #+8
// input[240]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r9
// input[224]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -28)]
vmul.u32 Q1, Q1, r8
// input[208]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -44)]
vqrdmlah.s32 Q2, Q1, r11
vstrw.u32 Q0, [r14,#(-448)]
// Release input[140] from Q0
vqrdmulh.s32 Q0, Q3, r9
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r11
// input[192]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -60)]
vqrdmulh.s32 Q5, Q1, r5
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r4
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r11
// input[244]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -8)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(-48)]
// Release input[240] from Q1
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(-112)]
// Release input[224] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-176)]
// Release input[208] from Q4
vadd.s32 Q2, Q2, Q6
// input[244]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r9
// input[228]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -24)]
vmul.u32 Q0, Q0, r8
// input[212]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -40)]
vqrdmlah.s32 Q1, Q0, r11
vstrw.u32 Q2, [r14,#(-240)]
// Release input[192] from Q2
vqrdmulh.s32 Q2, Q3, r9
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r11
// input[196]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -56)]
vqrdmulh.s32 Q5, Q0, r5
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r4
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r11
// input[248]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -4)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-32)]
// Release input[244] from Q0
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(-96)]
// Release input[228] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(-160)]
// Release input[212] from Q4
vadd.s32 Q1, Q1, Q6
// input[248]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r9
// input[232]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -20)]
vmul.u32 Q2, Q2, r8
// input[216]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -36)]
vqrdmlah.s32 Q0, Q2, r11
vstrw.u32 Q1, [r14,#(-224)]
// Release input[196] from Q1
vqrdmulh.s32 Q1, Q3, r9
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r11
// input[200]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -52)]
vqrdmulh.s32 Q5, Q2, r5
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r4
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r11
// input[252]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 0)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(-16)]
// Release input[248] from Q2
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(-80)]
// Release input[232] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(-144)]
// Release input[216] from Q4
vadd.s32 Q0, Q0, Q6
// input[252]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r9
// input[236]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -16)]
vmul.u32 Q1, Q1, r8
// input[220]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -32)]
vqrdmlah.s32 Q2, Q1, r11
vstrw.u32 Q0, [r14,#(-208)]
// Release input[200] from Q0
vqrdmulh.s32 Q0, Q3, r9
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r11
// input[204]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -48)]
vqrdmulh.s32 Q5, Q1, r5
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r4
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r11
// input[304]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 52)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(0)]
// Release input[252] from Q1
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(-64)]
// Release input[236] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-128)]
// Release input[220] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r9, r8, [r10], #+8
ldrd r7, r6, [r10], #+8
ldrd r5, r4, [r10], #+8
// input[304]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r9
// input[288]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 36)]
vmul.u32 Q0, Q0, r8
// input[272]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 20)]
vqrdmlah.s32 Q1, Q0, r11
vstrw.u32 Q2, [r14,#(-192)]
// Release input[204] from Q2
vqrdmulh.s32 Q2, Q3, r9
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r11
// input[256]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 4)]
vqrdmulh.s32 Q5, Q0, r5
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r4
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r11
// input[308]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 56)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(208)]
// Release input[304] from Q0
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(144)]
// Release input[288] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(80)]
// Release input[272] from Q4
vadd.s32 Q1, Q1, Q6
// input[308]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r9
// input[292]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 40)]
vmul.u32 Q2, Q2, r8
// input[276]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 24)]
vqrdmlah.s32 Q0, Q2, r11
vstrw.u32 Q1, [r14,#(16)]
// Release input[256] from Q1
vqrdmulh.s32 Q1, Q3, r9
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r11
// input[260]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 8)]
vqrdmulh.s32 Q5, Q2, r5
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r4
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r11
// input[312]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 60)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(224)]
// Release input[308] from Q2
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(160)]
// Release input[292] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(96)]
// Release input[276] from Q4
vadd.s32 Q0, Q0, Q6
// input[312]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r9
// input[296]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 44)]
vmul.u32 Q1, Q1, r8
// input[280]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 28)]
vqrdmlah.s32 Q2, Q1, r11
vstrw.u32 Q0, [r14,#(32)]
// Release input[260] from Q0
vqrdmulh.s32 Q0, Q3, r9
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r11
// input[264]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 12)]
vqrdmulh.s32 Q5, Q1, r5
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r4
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r11
// input[316]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 64)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(240)]
// Release input[312] from Q1
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(176)]
// Release input[296] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(112)]
// Release input[280] from Q4
vadd.s32 Q2, Q2, Q6
// input[316]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r9
// input[300]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 48)]
vmul.u32 Q0, Q0, r8
// input[284]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 32)]
vqrdmlah.s32 Q1, Q0, r11
vstrw.u32 Q2, [r14,#(48)]
// Release input[264] from Q2
vqrdmulh.s32 Q2, Q3, r9
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r11
// input[268]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 16)]
vqrdmulh.s32 Q5, Q0, r5
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r4
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r11
// input[368]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 116)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(256)]
// Release input[316] from Q0
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(192)]
// Release input[300] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(128)]
// Release input[284] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r9, r8, [r10], #+8
ldrd r7, r6, [r10], #+8
ldrd r5, r4, [r10], #+8
// input[368]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r9
// input[352]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 100)]
vmul.u32 Q2, Q2, r8
// input[336]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 84)]
vqrdmlah.s32 Q0, Q2, r11
vstrw.u32 Q1, [r14,#(64)]
// Release input[268] from Q1
vqrdmulh.s32 Q1, Q3, r9
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r11
// input[320]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 68)]
vqrdmulh.s32 Q5, Q2, r5
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r4
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r11
// input[372]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 120)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(464)]
// Release input[368] from Q2
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(400)]
// Release input[352] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(336)]
// Release input[336] from Q4
vadd.s32 Q0, Q0, Q6
// input[372]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r9
// input[356]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 104)]
vmul.u32 Q1, Q1, r8
// input[340]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 88)]
vqrdmlah.s32 Q2, Q1, r11
vstrw.u32 Q0, [r14,#(272)]
// Release input[320] from Q0
vqrdmulh.s32 Q0, Q3, r9
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r11
// input[324]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 72)]
vqrdmulh.s32 Q5, Q1, r5
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r4
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r11
// input[376]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 124)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(480)]
// Release input[372] from Q1
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(416)]
// Release input[356] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(352)]
// Release input[340] from Q4
vadd.s32 Q2, Q2, Q6
// input[376]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r9
// input[360]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 108)]
vmul.u32 Q0, Q0, r8
// input[344]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 92)]
vqrdmlah.s32 Q1, Q0, r11
vstrw.u32 Q2, [r14,#(288)]
// Release input[324] from Q2
vqrdmulh.s32 Q2, Q3, r9
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r11
// input[328]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 76)]
vqrdmulh.s32 Q5, Q0, r5
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r4
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r11
// input[380]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -124)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(496)]
// Release input[376] from Q0
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(432)]
// Release input[360] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(368)]
// Release input[344] from Q4
vadd.s32 Q1, Q1, Q6
// input[380]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r9
// input[364]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 112)]
vmul.u32 Q2, Q2, r8
// input[348]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 96)]
vqrdmlah.s32 Q0, Q2, r11
vstrw.u32 Q1, [r14,#(304)]
// Release input[328] from Q1
vqrdmulh.s32 Q1, Q3, r9
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r11
// input[332]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 80)]
vqrdmulh.s32 Q5, Q2, r5
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r4
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r11
// input[432]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -72)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(-496)]
// Release input[380] from Q2
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(448)]
// Release input[364] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(384)]
// Release input[348] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r9, r8, [r10], #+8
ldrd r7, r6, [r10], #+8
ldrd r5, r4, [r10], #+8
// input[432]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r9
// input[416]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -88)]
vmul.u32 Q1, Q1, r8
// input[400]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -104)]
vqrdmlah.s32 Q2, Q1, r11
vstrw.u32 Q0, [r14,#(320)]
// Release input[332] from Q0
vqrdmulh.s32 Q0, Q3, r9
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r11
// input[384]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -120)]
vqrdmulh.s32 Q5, Q1, r5
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r4
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r11
// input[436]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -68)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(-288)]
// Release input[432] from Q1
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r12,#(-352)]
// Release input[416] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(-416)]
// Release input[400] from Q4
vadd.s32 Q2, Q2, Q6
// input[436]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r9
// input[420]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -84)]
vmul.u32 Q0, Q0, r8
// input[404]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -100)]
vqrdmlah.s32 Q1, Q0, r11
vstrw.u32 Q2, [r12,#(-480)]
// Release input[384] from Q2
vqrdmulh.s32 Q2, Q3, r9
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r11
// input[388]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -116)]
vqrdmulh.s32 Q5, Q0, r5
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r4
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r11
// input[440]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -64)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r12,#(-272)]
// Release input[436] from Q0
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r12,#(-336)]
// Release input[420] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(-400)]
// Release input[404] from Q4
vadd.s32 Q1, Q1, Q6
// input[440]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r9
// input[424]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -80)]
vmul.u32 Q2, Q2, r8
// input[408]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -96)]
vqrdmlah.s32 Q0, Q2, r11
vstrw.u32 Q1, [r12,#(-464)]
// Release input[388] from Q1
vqrdmulh.s32 Q1, Q3, r9
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r11
// input[392]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -112)]
vqrdmulh.s32 Q5, Q2, r5
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r4
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r11
// input[444]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -60)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(-256)]
// Release input[440] from Q2
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r12,#(-320)]
// Release input[424] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(-384)]
// Release input[408] from Q4
vadd.s32 Q0, Q0, Q6
// input[444]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r9
// input[428]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -76)]
vmul.u32 Q1, Q1, r8
// input[412]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -92)]
vqrdmlah.s32 Q2, Q1, r11
vstrw.u32 Q0, [r12,#(-448)]
// Release input[392] from Q0
vqrdmulh.s32 Q0, Q3, r9
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r11
// input[396]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -108)]
vqrdmulh.s32 Q5, Q1, r5
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r4
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r11
// input[496]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -8)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(-240)]
// Release input[444] from Q1
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r12,#(-304)]
// Release input[428] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(-368)]
// Release input[412] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r9, r8, [r10], #+8
ldrd r7, r6, [r10], #+8
ldrd r5, r4, [r10], #+8
// input[496]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r9
// input[480]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -24)]
vmul.u32 Q0, Q0, r8
// input[464]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -40)]
vqrdmlah.s32 Q1, Q0, r11
vstrw.u32 Q2, [r12,#(-432)]
// Release input[396] from Q2
vqrdmulh.s32 Q2, Q3, r9
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r11
// input[448]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -56)]
vqrdmulh.s32 Q5, Q0, r5
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r4
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r11
// input[500]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -4)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r12,#(-32)]
// Release input[496] from Q0
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r12,#(-96)]
// Release input[480] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(-160)]
// Release input[464] from Q4
vadd.s32 Q1, Q1, Q6
// input[500]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r9
// input[484]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -20)]
vmul.u32 Q2, Q2, r8
// input[468]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -36)]
vqrdmlah.s32 Q0, Q2, r11
vstrw.u32 Q1, [r12,#(-224)]
// Release input[448] from Q1
vqrdmulh.s32 Q1, Q3, r9
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r11
// input[452]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -52)]
vqrdmulh.s32 Q5, Q2, r5
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r4
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r11
// input[504]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 0)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(-16)]
// Release input[500] from Q2
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r12,#(-80)]
// Release input[484] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(-144)]
// Release input[468] from Q4
vadd.s32 Q0, Q0, Q6
// input[504]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r9
// input[488]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -16)]
vmul.u32 Q1, Q1, r8
// input[472]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -32)]
vqrdmlah.s32 Q2, Q1, r11
vstrw.u32 Q0, [r12,#(-208)]
// Release input[452] from Q0
vqrdmulh.s32 Q0, Q3, r9
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r11
// input[456]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -48)]
vqrdmulh.s32 Q5, Q1, r5
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r4
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r11
// input[508]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * 4)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(0)]
// Release input[504] from Q1
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r12,#(-64)]
// Release input[488] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(-128)]
// Release input[472] from Q4
vadd.s32 Q2, Q2, Q6
// input[508]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r9
// input[492]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -12)]
vmul.u32 Q0, Q0, r8
// input[476]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -28)]
vqrdmlah.s32 Q1, Q0, r11
vstrw.u32 Q2, [r12,#(-192)]
// Release input[456] from Q2
vqrdmulh.s32 Q2, Q3, r9
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r11
// input[460]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -44)]
vqrdmulh.s32 Q5, Q0, r5
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r4
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r11
// input[12]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 12)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r12,#(16)]
// Release input[508] from Q0
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r12,#(-48)]
// Release input[492] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(-112)]
// Release input[476] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r9, r8, [r10], #+8
ldrd r7, r6, [r10], #+8
ldrd r5, r4, [r10], #+8
// input[12]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r9
// input[8]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 8)]
vmul.u32 Q2, Q2, r8
// input[4]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 4)]
vqrdmlah.s32 Q0, Q2, r11
vstrw.u32 Q1, [r12,#(-176)]
// Release input[460] from Q1
vqrdmulh.s32 Q1, Q3, r9
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r11
// input[0]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 0)]
vqrdmulh.s32 Q5, Q2, r5
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r4
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r11
// input[28]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 28)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r0,#(48)]
// Release input[12] from Q2
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r0,#(32)]
// Release input[8] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r0,#(16)]
// Release input[4] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r9, r8, [r10], #+8
ldrd r7, r6, [r10], #+8
ldrd r5, r4, [r10], #+8
// input[28]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r9
// input[24]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 24)]
vmul.u32 Q1, Q1, r8
// input[20]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 20)]
vqrdmlah.s32 Q2, Q1, r11
vstrw.u32 Q0, [r0,#(0)]
// Release input[0] from Q0
vqrdmulh.s32 Q0, Q3, r9
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r11
// input[16]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 16)]
vqrdmulh.s32 Q5, Q1, r5
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r4
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r11
// input[44]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 44)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r0,#(112)]
// Release input[28] from Q1
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r0,#(96)]
// Release input[24] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(80)]
// Release input[20] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r9, r8, [r10], #+8
ldrd r7, r6, [r10], #+8
ldrd r5, r4, [r10], #+8
// input[44]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r9
// input[40]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 40)]
vmul.u32 Q0, Q0, r8
// input[36]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 36)]
vqrdmlah.s32 Q1, Q0, r11
vstrw.u32 Q2, [r0,#(64)]
// Release input[16] from Q2
vqrdmulh.s32 Q2, Q3, r9
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r11
// input[32]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 32)]
vqrdmulh.s32 Q5, Q0, r5
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r4
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r11
// input[60]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 60)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r0,#(176)]
// Release input[44] from Q0
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r0,#(160)]
// Release input[40] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r0,#(144)]
// Release input[36] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r9, r8, [r10], #+8
ldrd r7, r6, [r10], #+8
ldrd r5, r4, [r10], #+8
// input[60]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r9
// input[56]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 56)]
vmul.u32 Q2, Q2, r8
// input[52]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 52)]
vqrdmlah.s32 Q0, Q2, r11
vstrw.u32 Q1, [r0,#(128)]
// Release input[32] from Q1
vqrdmulh.s32 Q1, Q3, r9
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r11
// input[48]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 48)]
vqrdmulh.s32 Q5, Q2, r5
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r4
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r11
// input[76]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 76)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r0,#(240)]
// Release input[60] from Q2
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r0,#(224)]
// Release input[56] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r0,#(208)]
// Release input[52] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r9, r8, [r10], #+8
ldrd r7, r6, [r10], #+8
ldrd r5, r4, [r10], #+8
// input[76]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r9
// input[72]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 72)]
vmul.u32 Q1, Q1, r8
// input[68]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 68)]
vqrdmlah.s32 Q2, Q1, r11
vstrw.u32 Q0, [r0,#(192)]
// Release input[48] from Q0
vqrdmulh.s32 Q0, Q3, r9
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r11
// input[64]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 64)]
vqrdmulh.s32 Q5, Q1, r5
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r4
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r11
// input[92]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 92)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r0,#(304)]
// Release input[76] from Q1
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r0,#(288)]
// Release input[72] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(272)]
// Release input[68] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r9, r8, [r10], #+8
ldrd r7, r6, [r10], #+8
ldrd r5, r4, [r10], #+8
// input[92]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r9
// input[88]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 88)]
vmul.u32 Q0, Q0, r8
// input[84]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 84)]
vqrdmlah.s32 Q1, Q0, r11
vstrw.u32 Q2, [r0,#(256)]
// Release input[64] from Q2
vqrdmulh.s32 Q2, Q3, r9
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r11
// input[80]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 80)]
vqrdmulh.s32 Q5, Q0, r5
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r4
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r11
// input[108]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 108)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r0,#(368)]
// Release input[92] from Q0
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r0,#(352)]
// Release input[88] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r0,#(336)]
// Release input[84] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r9, r8, [r10], #+8
ldrd r7, r6, [r10], #+8
ldrd r5, r4, [r10], #+8
// input[108]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r9
// input[104]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 104)]
vmul.u32 Q2, Q2, r8
// input[100]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 100)]
vqrdmlah.s32 Q0, Q2, r11
vstrw.u32 Q1, [r0,#(320)]
// Release input[80] from Q1
vqrdmulh.s32 Q1, Q3, r9
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r11
// input[96]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 96)]
vqrdmulh.s32 Q5, Q2, r5
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r4
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r11
// input[124]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 124)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r0,#(432)]
// Release input[108] from Q2
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r0,#(416)]
// Release input[104] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r0,#(400)]
// Release input[100] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r9, r8, [r10], #+8
ldrd r7, r6, [r10], #+8
ldrd r5, r4, [r10], #+8
// input[124]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r9
// input[120]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 120)]
vmul.u32 Q1, Q1, r8
// input[116]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 116)]
vqrdmlah.s32 Q2, Q1, r11
vstrw.u32 Q0, [r0,#(384)]
// Release input[96] from Q0
vqrdmulh.s32 Q0, Q3, r9
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r11
// input[112]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 112)]
vqrdmulh.s32 Q5, Q1, r5
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r4
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r11
// input[140]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -112)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r0,#(496)]
// Release input[124] from Q1
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r0,#(480)]
// Release input[120] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(464)]
// Release input[116] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r9, r8, [r10], #+8
ldrd r7, r6, [r10], #+8
ldrd r5, r4, [r10], #+8
// input[140]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r9
// input[136]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -116)]
vmul.u32 Q0, Q0, r8
// input[132]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -120)]
vqrdmlah.s32 Q1, Q0, r11
vstrw.u32 Q2, [r0,#(448)]
// Release input[112] from Q2
vqrdmulh.s32 Q2, Q3, r9
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r11
// input[128]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -124)]
vqrdmulh.s32 Q5, Q0, r5
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r4
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r11
// input[156]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -96)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-448)]
// Release input[140] from Q0
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(-464)]
// Release input[136] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(-480)]
// Release input[132] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r9, r8, [r10], #+8
ldrd r7, r6, [r10], #+8
ldrd r5, r4, [r10], #+8
// input[156]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r9
// input[152]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -100)]
vmul.u32 Q2, Q2, r8
// input[148]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -104)]
vqrdmlah.s32 Q0, Q2, r11
vstrw.u32 Q1, [r14,#(-496)]
// Release input[128] from Q1
vqrdmulh.s32 Q1, Q3, r9
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r11
// input[144]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -108)]
vqrdmulh.s32 Q5, Q2, r5
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r4
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r11
// input[172]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -80)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(-384)]
// Release input[156] from Q2
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(-400)]
// Release input[152] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(-416)]
// Release input[148] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r9, r8, [r10], #+8
ldrd r7, r6, [r10], #+8
ldrd r5, r4, [r10], #+8
// input[172]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r9
// input[168]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -84)]
vmul.u32 Q1, Q1, r8
// input[164]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -88)]
vqrdmlah.s32 Q2, Q1, r11
vstrw.u32 Q0, [r14,#(-432)]
// Release input[144] from Q0
vqrdmulh.s32 Q0, Q3, r9
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r11
// input[160]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -92)]
vqrdmulh.s32 Q5, Q1, r5
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r4
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r11
// input[188]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -64)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(-320)]
// Release input[172] from Q1
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(-336)]
// Release input[168] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-352)]
// Release input[164] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r9, r8, [r10], #+8
ldrd r7, r6, [r10], #+8
ldrd r5, r4, [r10], #+8
// input[188]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r9
// input[184]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -68)]
vmul.u32 Q0, Q0, r8
// input[180]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -72)]
vqrdmlah.s32 Q1, Q0, r11
vstrw.u32 Q2, [r14,#(-368)]
// Release input[160] from Q2
vqrdmulh.s32 Q2, Q3, r9
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r11
// input[176]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -76)]
vqrdmulh.s32 Q5, Q0, r5
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r4
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r11
// input[204]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -48)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-256)]
// Release input[188] from Q0
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(-272)]
// Release input[184] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(-288)]
// Release input[180] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r9, r8, [r10], #+8
ldrd r7, r6, [r10], #+8
ldrd r5, r4, [r10], #+8
// input[204]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r9
// input[200]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -52)]
vmul.u32 Q2, Q2, r8
// input[196]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -56)]
vqrdmlah.s32 Q0, Q2, r11
vstrw.u32 Q1, [r14,#(-304)]
// Release input[176] from Q1
vqrdmulh.s32 Q1, Q3, r9
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r11
// input[192]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -60)]
vqrdmulh.s32 Q5, Q2, r5
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r4
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r11
// input[220]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -32)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(-192)]
// Release input[204] from Q2
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(-208)]
// Release input[200] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(-224)]
// Release input[196] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r9, r8, [r10], #+8
ldrd r7, r6, [r10], #+8
ldrd r5, r4, [r10], #+8
// input[220]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r9
// input[216]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -36)]
vmul.u32 Q1, Q1, r8
// input[212]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -40)]
vqrdmlah.s32 Q2, Q1, r11
vstrw.u32 Q0, [r14,#(-240)]
// Release input[192] from Q0
vqrdmulh.s32 Q0, Q3, r9
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r11
// input[208]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -44)]
vqrdmulh.s32 Q5, Q1, r5
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r4
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r11
// input[236]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -16)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(-128)]
// Release input[220] from Q1
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(-144)]
// Release input[216] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-160)]
// Release input[212] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r9, r8, [r10], #+8
ldrd r7, r6, [r10], #+8
ldrd r5, r4, [r10], #+8
// input[236]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r9
// input[232]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -20)]
vmul.u32 Q0, Q0, r8
// input[228]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -24)]
vqrdmlah.s32 Q1, Q0, r11
vstrw.u32 Q2, [r14,#(-176)]
// Release input[208] from Q2
vqrdmulh.s32 Q2, Q3, r9
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r11
// input[224]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -28)]
vqrdmulh.s32 Q5, Q0, r5
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r4
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r11
// input[252]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 0)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-64)]
// Release input[236] from Q0
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(-80)]
// Release input[232] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(-96)]
// Release input[228] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r9, r8, [r10], #+8
ldrd r7, r6, [r10], #+8
ldrd r5, r4, [r10], #+8
// input[252]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r9
// input[248]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -4)]
vmul.u32 Q2, Q2, r8
// input[244]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -8)]
vqrdmlah.s32 Q0, Q2, r11
vstrw.u32 Q1, [r14,#(-112)]
// Release input[224] from Q1
vqrdmulh.s32 Q1, Q3, r9
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r11
// input[240]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -12)]
vqrdmulh.s32 Q5, Q2, r5
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r4
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r11
// input[268]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 16)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(0)]
// Release input[252] from Q2
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(-16)]
// Release input[248] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(-32)]
// Release input[244] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r9, r8, [r10], #+8
ldrd r7, r6, [r10], #+8
ldrd r5, r4, [r10], #+8
// input[268]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r9
// input[264]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 12)]
vmul.u32 Q1, Q1, r8
// input[260]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 8)]
vqrdmlah.s32 Q2, Q1, r11
vstrw.u32 Q0, [r14,#(-48)]
// Release input[240] from Q0
vqrdmulh.s32 Q0, Q3, r9
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r11
// input[256]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 4)]
vqrdmulh.s32 Q5, Q1, r5
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r4
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r11
// input[284]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 32)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(64)]
// Release input[268] from Q1
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(48)]
// Release input[264] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(32)]
// Release input[260] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r9, r8, [r10], #+8
ldrd r7, r6, [r10], #+8
ldrd r5, r4, [r10], #+8
// input[284]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r9
// input[280]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 28)]
vmul.u32 Q0, Q0, r8
// input[276]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 24)]
vqrdmlah.s32 Q1, Q0, r11
vstrw.u32 Q2, [r14,#(16)]
// Release input[256] from Q2
vqrdmulh.s32 Q2, Q3, r9
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r11
// input[272]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 20)]
vqrdmulh.s32 Q5, Q0, r5
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r4
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r11
// input[300]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 48)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(128)]
// Release input[284] from Q0
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(112)]
// Release input[280] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(96)]
// Release input[276] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r9, r8, [r10], #+8
ldrd r7, r6, [r10], #+8
ldrd r5, r4, [r10], #+8
// input[300]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r9
// input[296]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 44)]
vmul.u32 Q2, Q2, r8
// input[292]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 40)]
vqrdmlah.s32 Q0, Q2, r11
vstrw.u32 Q1, [r14,#(80)]
// Release input[272] from Q1
vqrdmulh.s32 Q1, Q3, r9
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r11
// input[288]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 36)]
vqrdmulh.s32 Q5, Q2, r5
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r4
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r11
// input[316]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 64)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(192)]
// Release input[300] from Q2
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(176)]
// Release input[296] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(160)]
// Release input[292] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r9, r8, [r10], #+8
ldrd r7, r6, [r10], #+8
ldrd r5, r4, [r10], #+8
// input[316]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r9
// input[312]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 60)]
vmul.u32 Q1, Q1, r8
// input[308]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 56)]
vqrdmlah.s32 Q2, Q1, r11
vstrw.u32 Q0, [r14,#(144)]
// Release input[288] from Q0
vqrdmulh.s32 Q0, Q3, r9
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r11
// input[304]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 52)]
vqrdmulh.s32 Q5, Q1, r5
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r4
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r11
// input[332]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 80)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(256)]
// Release input[316] from Q1
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(240)]
// Release input[312] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(224)]
// Release input[308] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r9, r8, [r10], #+8
ldrd r7, r6, [r10], #+8
ldrd r5, r4, [r10], #+8
// input[332]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r9
// input[328]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 76)]
vmul.u32 Q0, Q0, r8
// input[324]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 72)]
vqrdmlah.s32 Q1, Q0, r11
vstrw.u32 Q2, [r14,#(208)]
// Release input[304] from Q2
vqrdmulh.s32 Q2, Q3, r9
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r11
// input[320]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 68)]
vqrdmulh.s32 Q5, Q0, r5
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r4
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r11
// input[348]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 96)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(320)]
// Release input[332] from Q0
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(304)]
// Release input[328] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(288)]
// Release input[324] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r9, r8, [r10], #+8
ldrd r7, r6, [r10], #+8
ldrd r5, r4, [r10], #+8
// input[348]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r9
// input[344]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 92)]
vmul.u32 Q2, Q2, r8
// input[340]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 88)]
vqrdmlah.s32 Q0, Q2, r11
vstrw.u32 Q1, [r14,#(272)]
// Release input[320] from Q1
vqrdmulh.s32 Q1, Q3, r9
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r11
// input[336]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 84)]
vqrdmulh.s32 Q5, Q2, r5
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r4
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r11
// input[364]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 112)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(384)]
// Release input[348] from Q2
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(368)]
// Release input[344] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(352)]
// Release input[340] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r9, r8, [r10], #+8
ldrd r7, r6, [r10], #+8
ldrd r5, r4, [r10], #+8
// input[364]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r9
// input[360]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 108)]
vmul.u32 Q1, Q1, r8
// input[356]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 104)]
vqrdmlah.s32 Q2, Q1, r11
vstrw.u32 Q0, [r14,#(336)]
// Release input[336] from Q0
vqrdmulh.s32 Q0, Q3, r9
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r11
// input[352]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 100)]
vqrdmulh.s32 Q5, Q1, r5
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r4
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r11
// input[380]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -124)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(448)]
// Release input[364] from Q1
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(432)]
// Release input[360] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(416)]
// Release input[356] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r9, r8, [r10], #+8
ldrd r7, r6, [r10], #+8
ldrd r5, r4, [r10], #+8
// input[380]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r9
// input[376]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 124)]
vmul.u32 Q0, Q0, r8
// input[372]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 120)]
vqrdmlah.s32 Q1, Q0, r11
vstrw.u32 Q2, [r14,#(400)]
// Release input[352] from Q2
vqrdmulh.s32 Q2, Q3, r9
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r11
// input[368]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 116)]
vqrdmulh.s32 Q5, Q0, r5
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r4
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r11
// input[396]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -108)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r12,#(-496)]
// Release input[380] from Q0
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r14,#(496)]
// Release input[376] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(480)]
// Release input[372] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r9, r8, [r10], #+8
ldrd r7, r6, [r10], #+8
ldrd r5, r4, [r10], #+8
// input[396]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r9
// input[392]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -112)]
vmul.u32 Q2, Q2, r8
// input[388]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -116)]
vqrdmlah.s32 Q0, Q2, r11
vstrw.u32 Q1, [r14,#(464)]
// Release input[368] from Q1
vqrdmulh.s32 Q1, Q3, r9
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r11
// input[384]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -120)]
vqrdmulh.s32 Q5, Q2, r5
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r4
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r11
// input[412]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -92)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(-432)]
// Release input[396] from Q2
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r12,#(-448)]
// Release input[392] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(-464)]
// Release input[388] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r9, r8, [r10], #+8
ldrd r7, r6, [r10], #+8
ldrd r5, r4, [r10], #+8
// input[412]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r9
// input[408]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -96)]
vmul.u32 Q1, Q1, r8
// input[404]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -100)]
vqrdmlah.s32 Q2, Q1, r11
vstrw.u32 Q0, [r12,#(-480)]
// Release input[384] from Q0
vqrdmulh.s32 Q0, Q3, r9
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r11
// input[400]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -104)]
vqrdmulh.s32 Q5, Q1, r5
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r4
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r11
// input[428]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -76)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(-368)]
// Release input[412] from Q1
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r12,#(-384)]
// Release input[408] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(-400)]
// Release input[404] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r9, r8, [r10], #+8
ldrd r7, r6, [r10], #+8
ldrd r5, r4, [r10], #+8
// input[428]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r9
// input[424]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -80)]
vmul.u32 Q0, Q0, r8
// input[420]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -84)]
vqrdmlah.s32 Q1, Q0, r11
vstrw.u32 Q2, [r12,#(-416)]
// Release input[400] from Q2
vqrdmulh.s32 Q2, Q3, r9
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r11
// input[416]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -88)]
vqrdmulh.s32 Q5, Q0, r5
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r4
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r11
// input[444]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -60)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r12,#(-304)]
// Release input[428] from Q0
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r12,#(-320)]
// Release input[424] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(-336)]
// Release input[420] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r9, r8, [r10], #+8
ldrd r7, r6, [r10], #+8
ldrd r5, r4, [r10], #+8
// input[444]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r9
// input[440]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -64)]
vmul.u32 Q2, Q2, r8
// input[436]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -68)]
vqrdmlah.s32 Q0, Q2, r11
vstrw.u32 Q1, [r12,#(-352)]
// Release input[416] from Q1
vqrdmulh.s32 Q1, Q3, r9
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r11
// input[432]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -72)]
vqrdmulh.s32 Q5, Q2, r5
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r4
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r11
// input[460]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -44)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(-240)]
// Release input[444] from Q2
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r12,#(-256)]
// Release input[440] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(-272)]
// Release input[436] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r9, r8, [r10], #+8
ldrd r7, r6, [r10], #+8
ldrd r5, r4, [r10], #+8
// input[460]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r9
// input[456]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -48)]
vmul.u32 Q1, Q1, r8
// input[452]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -52)]
vqrdmlah.s32 Q2, Q1, r11
vstrw.u32 Q0, [r12,#(-288)]
// Release input[432] from Q0
vqrdmulh.s32 Q0, Q3, r9
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r11
// input[448]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -56)]
vqrdmulh.s32 Q5, Q1, r5
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r4
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r11
// input[476]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -28)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(-176)]
// Release input[460] from Q1
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r12,#(-192)]
// Release input[456] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(-208)]
// Release input[452] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r9, r8, [r10], #+8
ldrd r7, r6, [r10], #+8
ldrd r5, r4, [r10], #+8
// input[476]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r9
// input[472]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -32)]
vmul.u32 Q0, Q0, r8
// input[468]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -36)]
vqrdmlah.s32 Q1, Q0, r11
vstrw.u32 Q2, [r12,#(-224)]
// Release input[448] from Q2
vqrdmulh.s32 Q2, Q3, r9
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r11
// input[464]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -40)]
vqrdmulh.s32 Q5, Q0, r5
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r4
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r11
// input[492]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -12)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r12,#(-112)]
// Release input[476] from Q0
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r12,#(-128)]
// Release input[472] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(-144)]
// Release input[468] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r9, r8, [r10], #+8
ldrd r7, r6, [r10], #+8
ldrd r5, r4, [r10], #+8
// input[492]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r9
// input[488]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -16)]
vmul.u32 Q2, Q2, r8
// input[484]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -20)]
vqrdmlah.s32 Q0, Q2, r11
vstrw.u32 Q1, [r12,#(-160)]
// Release input[464] from Q1
vqrdmulh.s32 Q1, Q3, r9
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r11
// input[480]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -24)]
vqrdmulh.s32 Q5, Q2, r5
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r4
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r11
// input[508]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 4)]
vqrdmulh.s32 Q6, Q4, r7
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(-48)]
// Release input[492] from Q2
vqrdmlah.s32 Q6, Q4, r11
vstrw.u32 Q3, [r12,#(-64)]
// Release input[488] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(-80)]
// Release input[484] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r9, r8, [r10], #+8
ldrd r7, r6, [r10], #+8
ldrd r5, r4, [r10], #+8
// input[508]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r9
// input[504]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 0)]
vmul.u32 Q1, Q1, r8
// input[500]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -4)]
vqrdmlah.s32 Q2, Q1, r11
vstrw.u32 Q0, [r12,#(-96)]
// Release input[480] from Q0
vqrdmulh.s32 Q0, Q3, r9
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r8
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r11
// input[496]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -8)]
vqrdmulh.s32 Q5, Q1, r5
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r4
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r11
vqrdmulh.s32 Q0, Q4, r7
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r6
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(16)]
// Release input[508] from Q1
vqrdmlah.s32 Q0, Q4, r11
vstrw.u32 Q3, [r12,#(0)]
// Release input[504] from Q3
vsub.s32 Q4, Q2, Q0
vstrw.u32 Q4, [r12,#(-16)]
// Release input[500] from Q4
vadd.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r12,#(-32)]
// Release input[496] from Q2
.equ modulus_inv, 4223674367
movw r9, #:lower16:modulus_inv
movt r9, #:upper16:modulus_inv
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vldrw.s32 Q5, [r10], #80
vqrdmulh.s32 Q4, Q3, Q5
vldrw.s32 Q6, [r10, #-64]
vmul.u32 Q3, Q3, Q6
vqrdmlah.s32 Q4, Q3, r11
vldrw.s32 Q3, [r10, #-48]
vqrdmulh.s32 Q5, Q2, Q5
vsub.s32 Q7, Q1, Q4
vmul.u32 Q2, Q2, Q6
vadd.s32 Q1, Q1, Q4
vqrdmlah.s32 Q5, Q2, r11
vldrw.s32 Q2, [r10, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q4, Q0, Q5
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q5
vqrdmlah.s32 Q3, Q1, r11
vldrw.s32 Q5, [r10, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q6, Q5, r9
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q5, Q7, Q5
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q7, Q7, Q6
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q5, Q7, r11
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q7, Q4, Q5
vstrw.s32 Q7, [r0, #-80]
vadd.s32 Q4, Q4, Q5
vldrw.s32 Q6, [r10], #80
vqrdmulh.s32 Q5, Q3, Q6
vldrw.s32 Q7, [r10, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q4, [r0, #-96]
vqrdmlah.s32 Q5, Q3, r11
vldrw.s32 Q3, [r10, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q4, Q1, Q5
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q5
vqrdmlah.s32 Q6, Q2, r11
vldrw.s32 Q2, [r10, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q5, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r11
vldrw.s32 Q6, [r10, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r9
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q4, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q4, Q4, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q4, r11
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q4, Q5, Q6
vstrw.s32 Q4, [r0, #-80]
vadd.s32 Q5, Q5, Q6
vldrw.s32 Q6, [r10], #80
vqrdmulh.s32 Q4, Q3, Q6
vldrw.s32 Q7, [r10, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q5, [r0, #-96]
vqrdmlah.s32 Q4, Q3, r11
vldrw.s32 Q3, [r10, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q5, Q1, Q4
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q4
vqrdmlah.s32 Q6, Q2, r11
vldrw.s32 Q2, [r10, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q4, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r11
vldrw.s32 Q6, [r10, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r9
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q5, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q5, Q5, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q5, r11
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q5, Q4, Q6
vstrw.s32 Q5, [r0, #-80]
vadd.s32 Q4, Q4, Q6
vldrw.s32 Q6, [r10], #80
vqrdmulh.s32 Q5, Q3, Q6
vldrw.s32 Q7, [r10, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q4, [r0, #-96]
vqrdmlah.s32 Q5, Q3, r11
vldrw.s32 Q3, [r10, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q4, Q1, Q5
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q5
vqrdmlah.s32 Q6, Q2, r11
vldrw.s32 Q2, [r10, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q5, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r11
vldrw.s32 Q6, [r10, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r9
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q4, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q4, Q4, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q4, r11
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q4, Q5, Q6
vstrw.s32 Q4, [r0, #-80]
vadd.s32 Q5, Q5, Q6
vldrw.s32 Q6, [r10], #80
vqrdmulh.s32 Q4, Q3, Q6
vldrw.s32 Q7, [r10, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q5, [r0, #-96]
vqrdmlah.s32 Q4, Q3, r11
vldrw.s32 Q3, [r10, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q5, Q1, Q4
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q4
vqrdmlah.s32 Q6, Q2, r11
vldrw.s32 Q2, [r10, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q4, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r11
vldrw.s32 Q6, [r10, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r9
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q5, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q5, Q5, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q5, r11
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q5, Q4, Q6
vstrw.s32 Q5, [r0, #-80]
vadd.s32 Q4, Q4, Q6
vldrw.s32 Q6, [r10], #80
vqrdmulh.s32 Q5, Q3, Q6
vldrw.s32 Q7, [r10, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q4, [r0, #-96]
vqrdmlah.s32 Q5, Q3, r11
vldrw.s32 Q3, [r10, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q4, Q1, Q5
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q5
vqrdmlah.s32 Q6, Q2, r11
vldrw.s32 Q2, [r10, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q5, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r11
vldrw.s32 Q6, [r10, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r9
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q4, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q4, Q4, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q4, r11
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q4, Q5, Q6
vstrw.s32 Q4, [r0, #-80]
vadd.s32 Q5, Q5, Q6
vldrw.s32 Q6, [r10], #80
vqrdmulh.s32 Q4, Q3, Q6
vldrw.s32 Q7, [r10, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q5, [r0, #-96]
vqrdmlah.s32 Q4, Q3, r11
vldrw.s32 Q3, [r10, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q5, Q1, Q4
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q4
vqrdmlah.s32 Q6, Q2, r11
vldrw.s32 Q2, [r10, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q4, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r11
vldrw.s32 Q6, [r10, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r9
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q5, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q5, Q5, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q5, r11
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q5, Q4, Q6
vstrw.s32 Q5, [r0, #-80]
vadd.s32 Q4, Q4, Q6
vldrw.s32 Q6, [r10], #80
vqrdmulh.s32 Q5, Q3, Q6
vldrw.s32 Q7, [r10, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q4, [r0, #-96]
vqrdmlah.s32 Q5, Q3, r11
vldrw.s32 Q3, [r10, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q4, Q1, Q5
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q5
vqrdmlah.s32 Q6, Q2, r11
vldrw.s32 Q2, [r10, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q5, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r11
vldrw.s32 Q6, [r10, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r9
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q4, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q4, Q4, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q4, r11
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q4, Q5, Q6
vstrw.s32 Q4, [r0, #-80]
vadd.s32 Q5, Q5, Q6
vldrw.s32 Q6, [r10], #80
vqrdmulh.s32 Q4, Q3, Q6
vldrw.s32 Q7, [r10, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q5, [r0, #-96]
vqrdmlah.s32 Q4, Q3, r11
vldrw.s32 Q3, [r10, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q5, Q1, Q4
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q4
vqrdmlah.s32 Q6, Q2, r11
vldrw.s32 Q2, [r10, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q4, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r11
vldrw.s32 Q6, [r10, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r9
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q5, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q5, Q5, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q5, r11
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q5, Q4, Q6
vstrw.s32 Q5, [r0, #-80]
vadd.s32 Q4, Q4, Q6
vldrw.s32 Q6, [r10], #80
vqrdmulh.s32 Q5, Q3, Q6
vldrw.s32 Q7, [r10, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q4, [r0, #-96]
vqrdmlah.s32 Q5, Q3, r11
vldrw.s32 Q3, [r10, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q4, Q1, Q5
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q5
vqrdmlah.s32 Q6, Q2, r11
vldrw.s32 Q2, [r10, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q5, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r11
vldrw.s32 Q6, [r10, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r9
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q4, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q4, Q4, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q4, r11
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q4, Q5, Q6
vstrw.s32 Q4, [r0, #-80]
vadd.s32 Q5, Q5, Q6
vldrw.s32 Q6, [r10], #80
vqrdmulh.s32 Q4, Q3, Q6
vldrw.s32 Q7, [r10, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q5, [r0, #-96]
vqrdmlah.s32 Q4, Q3, r11
vldrw.s32 Q3, [r10, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q5, Q1, Q4
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q4
vqrdmlah.s32 Q6, Q2, r11
vldrw.s32 Q2, [r10, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q4, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r11
vldrw.s32 Q6, [r10, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r9
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q5, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q5, Q5, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q5, r11
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q5, Q4, Q6
vstrw.s32 Q5, [r0, #-80]
vadd.s32 Q4, Q4, Q6
vldrw.s32 Q6, [r10], #80
vqrdmulh.s32 Q5, Q3, Q6
vldrw.s32 Q7, [r10, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q4, [r0, #-96]
vqrdmlah.s32 Q5, Q3, r11
vldrw.s32 Q3, [r10, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q4, Q1, Q5
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q5
vqrdmlah.s32 Q6, Q2, r11
vldrw.s32 Q2, [r10, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q5, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r11
vldrw.s32 Q6, [r10, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r9
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q4, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q4, Q4, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q4, r11
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q4, Q5, Q6
vstrw.s32 Q4, [r0, #-80]
vadd.s32 Q5, Q5, Q6
vldrw.s32 Q6, [r10], #80
vqrdmulh.s32 Q4, Q3, Q6
vldrw.s32 Q7, [r10, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q5, [r0, #-96]
vqrdmlah.s32 Q4, Q3, r11
vldrw.s32 Q3, [r10, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q5, Q1, Q4
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q4
vqrdmlah.s32 Q6, Q2, r11
vldrw.s32 Q2, [r10, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q4, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r11
vldrw.s32 Q6, [r10, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r9
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q5, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q5, Q5, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q5, r11
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q5, Q4, Q6
vstrw.s32 Q5, [r0, #-80]
vadd.s32 Q4, Q4, Q6
vldrw.s32 Q6, [r10], #80
vqrdmulh.s32 Q5, Q3, Q6
vldrw.s32 Q7, [r10, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q4, [r0, #-96]
vqrdmlah.s32 Q5, Q3, r11
vldrw.s32 Q3, [r10, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q4, Q1, Q5
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q5
vqrdmlah.s32 Q6, Q2, r11
vldrw.s32 Q2, [r10, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q5, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r11
vldrw.s32 Q6, [r10, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r9
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q4, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q4, Q4, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q4, r11
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q4, Q5, Q6
vstrw.s32 Q4, [r0, #-80]
vadd.s32 Q5, Q5, Q6
vldrw.s32 Q6, [r10], #80
vqrdmulh.s32 Q4, Q3, Q6
vldrw.s32 Q7, [r10, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q5, [r0, #-96]
vqrdmlah.s32 Q4, Q3, r11
vldrw.s32 Q3, [r10, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q5, Q1, Q4
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q4
vqrdmlah.s32 Q6, Q2, r11
vldrw.s32 Q2, [r10, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q4, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r11
vldrw.s32 Q6, [r10, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r9
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q5, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q5, Q5, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q5, r11
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q5, Q4, Q6
vstrw.s32 Q5, [r0, #-80]
vadd.s32 Q4, Q4, Q6
vldrw.s32 Q6, [r10], #80
vqrdmulh.s32 Q5, Q3, Q6
vldrw.s32 Q7, [r10, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q4, [r0, #-96]
vqrdmlah.s32 Q5, Q3, r11
vldrw.s32 Q3, [r10, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q4, Q1, Q5
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q5
vqrdmlah.s32 Q6, Q2, r11
vldrw.s32 Q2, [r10, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q5, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r11
vldrw.s32 Q6, [r10, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r9
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q4, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q4, Q4, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q4, r11
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q4, Q5, Q6
vstrw.s32 Q4, [r0, #-80]
vadd.s32 Q5, Q5, Q6
vldrw.s32 Q6, [r10], #80
vqrdmulh.s32 Q4, Q3, Q6
vldrw.s32 Q7, [r10, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q5, [r0, #-96]
vqrdmlah.s32 Q4, Q3, r11
vldrw.s32 Q3, [r10, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q5, Q1, Q4
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q4
vqrdmlah.s32 Q6, Q2, r11
vldrw.s32 Q2, [r10, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q4, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r11
vldrw.s32 Q6, [r10, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r9
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q5, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q5, Q5, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q5, r11
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q5, Q4, Q6
vstrw.s32 Q5, [r0, #-80]
vadd.s32 Q4, Q4, Q6
vldrw.s32 Q6, [r10], #80
vqrdmulh.s32 Q5, Q3, Q6
vldrw.s32 Q7, [r10, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q4, [r0, #-96]
vqrdmlah.s32 Q5, Q3, r11
vldrw.s32 Q3, [r10, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q4, Q1, Q5
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q5
vqrdmlah.s32 Q6, Q2, r11
vldrw.s32 Q2, [r10, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q5, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r11
vldrw.s32 Q6, [r10, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r9
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q4, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q4, Q4, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q4, r11
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q4, Q5, Q6
vstrw.s32 Q4, [r0, #-80]
vadd.s32 Q5, Q5, Q6
vldrw.s32 Q6, [r10], #80
vqrdmulh.s32 Q4, Q3, Q6
vldrw.s32 Q7, [r10, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q5, [r0, #-96]
vqrdmlah.s32 Q4, Q3, r11
vldrw.s32 Q3, [r10, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q5, Q1, Q4
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q4
vqrdmlah.s32 Q6, Q2, r11
vldrw.s32 Q2, [r10, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q4, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r11
vldrw.s32 Q6, [r10, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r9
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q5, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q5, Q5, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q5, r11
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q5, Q4, Q6
vstrw.s32 Q5, [r0, #-80]
vadd.s32 Q4, Q4, Q6
vldrw.s32 Q6, [r10], #80
vqrdmulh.s32 Q5, Q3, Q6
vldrw.s32 Q7, [r10, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q4, [r0, #-96]
vqrdmlah.s32 Q5, Q3, r11
vldrw.s32 Q3, [r10, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q4, Q1, Q5
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q5
vqrdmlah.s32 Q6, Q2, r11
vldrw.s32 Q2, [r10, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q5, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r11
vldrw.s32 Q6, [r10, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r9
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q4, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q4, Q4, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q4, r11
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q4, Q5, Q6
vstrw.s32 Q4, [r0, #-80]
vadd.s32 Q5, Q5, Q6
vldrw.s32 Q6, [r10], #80
vqrdmulh.s32 Q4, Q3, Q6
vldrw.s32 Q7, [r10, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q5, [r0, #-96]
vqrdmlah.s32 Q4, Q3, r11
vldrw.s32 Q3, [r10, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q5, Q1, Q4
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q4
vqrdmlah.s32 Q6, Q2, r11
vldrw.s32 Q2, [r10, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q4, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r11
vldrw.s32 Q6, [r10, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r9
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q5, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q5, Q5, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q5, r11
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q5, Q4, Q6
vstrw.s32 Q5, [r0, #-80]
vadd.s32 Q4, Q4, Q6
vldrw.s32 Q6, [r10], #80
vqrdmulh.s32 Q5, Q3, Q6
vldrw.s32 Q7, [r10, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q4, [r0, #-96]
vqrdmlah.s32 Q5, Q3, r11
vldrw.s32 Q3, [r10, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q4, Q1, Q5
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q5
vqrdmlah.s32 Q6, Q2, r11
vldrw.s32 Q2, [r10, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q5, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r11
vldrw.s32 Q6, [r10, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r9
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q4, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q4, Q4, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q4, r11
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q4, Q5, Q6
vstrw.s32 Q4, [r0, #-80]
vadd.s32 Q5, Q5, Q6
vldrw.s32 Q6, [r10], #80
vqrdmulh.s32 Q4, Q3, Q6
vldrw.s32 Q7, [r10, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q5, [r0, #-96]
vqrdmlah.s32 Q4, Q3, r11
vldrw.s32 Q3, [r10, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q5, Q1, Q4
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q4
vqrdmlah.s32 Q6, Q2, r11
vldrw.s32 Q2, [r10, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q4, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r11
vldrw.s32 Q6, [r10, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r9
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q5, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q5, Q5, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q5, r11
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q5, Q4, Q6
vstrw.s32 Q5, [r0, #-80]
vadd.s32 Q4, Q4, Q6
vldrw.s32 Q6, [r10], #80
vqrdmulh.s32 Q5, Q3, Q6
vldrw.s32 Q7, [r10, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q4, [r0, #-96]
vqrdmlah.s32 Q5, Q3, r11
vldrw.s32 Q3, [r10, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q4, Q1, Q5
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q5
vqrdmlah.s32 Q6, Q2, r11
vldrw.s32 Q2, [r10, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q5, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r11
vldrw.s32 Q6, [r10, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r9
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q4, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q4, Q4, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q4, r11
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q4, Q5, Q6
vstrw.s32 Q4, [r0, #-80]
vadd.s32 Q5, Q5, Q6
vldrw.s32 Q6, [r10], #80
vqrdmulh.s32 Q4, Q3, Q6
vldrw.s32 Q7, [r10, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q5, [r0, #-96]
vqrdmlah.s32 Q4, Q3, r11
vldrw.s32 Q3, [r10, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q5, Q1, Q4
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q4
vqrdmlah.s32 Q6, Q2, r11
vldrw.s32 Q2, [r10, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q4, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r11
vldrw.s32 Q6, [r10, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r9
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q5, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q5, Q5, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q5, r11
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q5, Q4, Q6
vstrw.s32 Q5, [r0, #-80]
vadd.s32 Q4, Q4, Q6
vldrw.s32 Q6, [r10], #80
vqrdmulh.s32 Q5, Q3, Q6
vldrw.s32 Q7, [r10, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q4, [r0, #-96]
vqrdmlah.s32 Q5, Q3, r11
vldrw.s32 Q3, [r10, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q4, Q1, Q5
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q5
vqrdmlah.s32 Q6, Q2, r11
vldrw.s32 Q2, [r10, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q5, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r11
vldrw.s32 Q6, [r10, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r9
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q4, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q4, Q4, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q4, r11
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q4, Q5, Q6
vstrw.s32 Q4, [r0, #-80]
vadd.s32 Q5, Q5, Q6
vldrw.s32 Q6, [r10], #80
vqrdmulh.s32 Q4, Q3, Q6
vldrw.s32 Q7, [r10, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q5, [r0, #-96]
vqrdmlah.s32 Q4, Q3, r11
vldrw.s32 Q3, [r10, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q5, Q1, Q4
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q4
vqrdmlah.s32 Q6, Q2, r11
vldrw.s32 Q2, [r10, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q4, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r11
vldrw.s32 Q6, [r10, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r9
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q5, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q5, Q5, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q5, r11
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q5, Q4, Q6
vstrw.s32 Q5, [r0, #-80]
vadd.s32 Q4, Q4, Q6
vldrw.s32 Q6, [r10], #80
vqrdmulh.s32 Q5, Q3, Q6
vldrw.s32 Q7, [r10, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q4, [r0, #-96]
vqrdmlah.s32 Q5, Q3, r11
vldrw.s32 Q3, [r10, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q4, Q1, Q5
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q5
vqrdmlah.s32 Q6, Q2, r11
vldrw.s32 Q2, [r10, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q5, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r11
vldrw.s32 Q6, [r10, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r9
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q4, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q4, Q4, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q4, r11
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q4, Q5, Q6
vstrw.s32 Q4, [r0, #-80]
vadd.s32 Q5, Q5, Q6
vldrw.s32 Q6, [r10], #80
vqrdmulh.s32 Q4, Q3, Q6
vldrw.s32 Q7, [r10, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q5, [r0, #-96]
vqrdmlah.s32 Q4, Q3, r11
vldrw.s32 Q3, [r10, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q5, Q1, Q4
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q4
vqrdmlah.s32 Q6, Q2, r11
vldrw.s32 Q2, [r10, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q4, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r11
vldrw.s32 Q6, [r10, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r9
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q5, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q5, Q5, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q5, r11
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q5, Q4, Q6
vstrw.s32 Q5, [r0, #-80]
vadd.s32 Q4, Q4, Q6
vldrw.s32 Q6, [r10], #80
vqrdmulh.s32 Q5, Q3, Q6
vldrw.s32 Q7, [r10, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q4, [r0, #-96]
vqrdmlah.s32 Q5, Q3, r11
vldrw.s32 Q3, [r10, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q4, Q1, Q5
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q5
vqrdmlah.s32 Q6, Q2, r11
vldrw.s32 Q2, [r10, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q5, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r11
vldrw.s32 Q6, [r10, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r9
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q4, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q4, Q4, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q4, r11
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q4, Q5, Q6
vstrw.s32 Q4, [r0, #-80]
vadd.s32 Q5, Q5, Q6
vldrw.s32 Q6, [r10], #80
vqrdmulh.s32 Q4, Q3, Q6
vldrw.s32 Q7, [r10, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q5, [r0, #-96]
vqrdmlah.s32 Q4, Q3, r11
vldrw.s32 Q3, [r10, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q5, Q1, Q4
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q4
vqrdmlah.s32 Q6, Q2, r11
vldrw.s32 Q2, [r10, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q4, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r11
vldrw.s32 Q6, [r10, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r9
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q5, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q5, Q5, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q5, r11
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q5, Q4, Q6
vstrw.s32 Q5, [r0, #-80]
vadd.s32 Q4, Q4, Q6
vldrw.s32 Q6, [r10], #80
vqrdmulh.s32 Q5, Q3, Q6
vldrw.s32 Q7, [r10, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q4, [r0, #-96]
vqrdmlah.s32 Q5, Q3, r11
vldrw.s32 Q3, [r10, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q4, Q1, Q5
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q5
vqrdmlah.s32 Q6, Q2, r11
vldrw.s32 Q2, [r10, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q5, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r11
vldrw.s32 Q6, [r10, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r9
vqrdmulh.s32 Q6, Q4, Q6
vmul.u32 Q4, Q4, Q7
vqrdmlah.s32 Q6, Q4, r11
vsub.s32 Q4, Q5, Q6
vstrw.s32 Q4, [r0, #-16]
vadd.s32 Q5, Q5, Q6
vstrw.s32 Q5, [r0, #-32]
// Restore MVE vector registers
vpop {d8-d15}
// Restore GPRs
pop {r4-r11,lr}
bx lr

// Line count:        5688
// Instruction count: 4819