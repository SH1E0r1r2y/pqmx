
///
/// Copyright (c) 2021 Arm Limited
/// SPDX-License-Identifier: MIT
///
/// Permission is hereby granted, free of charge, to any person obtaining a copy
/// of this software and associated documentation files (the "Software"), to deal
/// in the Software without restriction, including without limitation the rights
/// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
/// copies of the Software, and to permit persons to whom the Software is
/// furnished to do so, subject to the following conditions:
///
/// The above copyright notice and this permission notice shall be included in all
/// copies or substantial portions of the Software.
///
/// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
/// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
/// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
/// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
/// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
/// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
/// SOFTWARE.
///



///
/// This assembly code has been auto-generated.
/// Don't modify it directly.
///

.data
roots:
.word   66384763 /// zeta^512 * 2^31 = 299353^512 * 2^31 = 25038561 * 2^31
.word 3749829253 /// zeta^512 * f(q^(-1) mod 2^32) * 2^31 = 299353^512 * 375649793 * 2^31
.word     893127 /// zeta^256 * 2^31 = 299353^256 * 2^31 = 8518431 * 2^31
.word 2692621625 /// zeta^256 * f(q^(-1) mod 2^32) * 2^31 = 299353^256 * 375649793 * 2^31
.word   33393089 // zeta^  0 * 2^31 = 299353^  0 * 2^31 = 1 * 2^31
.word 2147483711 // zeta^  0 * f(q^(-1) mod 2^32) * 2^31 = 299353^  0 * 375649793 * 2^31
.word   33393089 // zeta^  0 * 2^31 = 299353^  0 * 2^31 = 1 * 2^31
.word 2147483711 // zeta^  0 * f(q^(-1) mod 2^32) * 2^31 = 299353^  0 * 375649793 * 2^31
.word   29095681 // zeta^576 * 2^31 = 299353^576 * 2^31 = 17702291 * 2^31
.word 3280343807 // zeta^576 * f(q^(-1) mod 2^32) * 2^31 = 299353^576 * 375649793 * 2^31
.word   66220859 // zeta^640 * 2^31 = 299353^640 * 2^31 = 25038562 * 2^31
.word 1602345669 // zeta^640 * f(q^(-1) mod 2^32) * 2^31 = 299353^640 * 375649793 * 2^31
.word   12340695 // zeta^704 * 2^31 = 299353^704 * 2^31 = 31543752 * 2^31
.word 2018646057 // zeta^704 * f(q^(-1) mod 2^32) * 2^31 = 299353^704 * 375649793 * 2^31
.word   66384763 // zeta^512 * 2^31 = 299353^512 * 2^31 = 25038561 * 2^31
.word 3749829253 // zeta^512 * f(q^(-1) mod 2^32) * 2^31 = 299353^512 * 375649793 * 2^31
.word   66384763 // zeta^512 * 2^31 = 299353^512 * 2^31 = 25038561 * 2^31
.word 3749829253 // zeta^512 * f(q^(-1) mod 2^32) * 2^31 = 299353^512 * 375649793 * 2^31
.word   66220859 // zeta^640 * 2^31 = 299353^640 * 2^31 = 25038562 * 2^31
.word 1602345669 // zeta^640 * f(q^(-1) mod 2^32) * 2^31 = 299353^640 * 375649793 * 2^31
.word   50311979 // zeta^448 * 2^31 = 299353^448 * 2^31 = 19715532 * 2^31
.word 1261697749 // zeta^448 * f(q^(-1) mod 2^32) * 2^31 = 299353^448 * 375649793 * 2^31
.word   33393089 // zeta^  0 * 2^31 = 299353^  0 * 2^31 = 1 * 2^31
.word 2147483711 // zeta^  0 * f(q^(-1) mod 2^32) * 2^31 = 299353^  0 * 375649793 * 2^31
.word   33393089 // zeta^  0 * 2^31 = 299353^  0 * 2^31 = 1 * 2^31
.word 2147483711 // zeta^  0 * f(q^(-1) mod 2^32) * 2^31 = 299353^  0 * 375649793 * 2^31
.word   29095681 // zeta^576 * 2^31 = 299353^576 * 2^31 = 17702291 * 2^31
.word 3280343807 // zeta^576 * f(q^(-1) mod 2^32) * 2^31 = 299353^576 * 375649793 * 2^31
.word   29095681 // zeta^576 * 2^31 = 299353^576 * 2^31 = 17702291 * 2^31
.word 3280343807 // zeta^576 * f(q^(-1) mod 2^32) * 2^31 = 299353^576 * 375649793 * 2^31
.word   52637069 // zeta^672 * 2^31 = 299353^672 * 2^31 = 30296666 * 2^31
.word 1938838643 // zeta^672 * f(q^(-1) mod 2^32) * 2^31 = 299353^672 * 375649793 * 2^31
.word   23796181 // zeta^480 * 2^31 = 299353^480 * 2^31 = 18977417 * 2^31
.word 3361945643 // zeta^480 * f(q^(-1) mod 2^32) * 2^31 = 299353^480 * 375649793 * 2^31
.word   52637069 // zeta^672 * 2^31 = 299353^672 * 2^31 = 30296666 * 2^31
.word 1938838643 // zeta^672 * f(q^(-1) mod 2^32) * 2^31 = 299353^672 * 375649793 * 2^31
.word   62228979 // zeta^720 * 2^31 = 299353^720 * 2^31 = 20647416 * 2^31
.word 1321333773 // zeta^720 * f(q^(-1) mod 2^32) * 2^31 = 299353^720 * 375649793 * 2^31
.word   18598075 // zeta^528 * 2^31 = 299353^528 * 2^31 = 6733847 * 2^31
.word 2578416965 // zeta^528 * f(q^(-1) mod 2^32) * 2^31 = 299353^528 * 375649793 * 2^31
.word   23796181 // zeta^480 * 2^31 = 299353^480 * 2^31 = 18977417 * 2^31
.word 3361945643 // zeta^480 * f(q^(-1) mod 2^32) * 2^31 = 299353^480 * 375649793 * 2^31
.word   34427601 // zeta^624 * 2^31 = 299353^624 * 2^31 = 13512548 * 2^31
.word  864737071 // zeta^624 * f(q^(-1) mod 2^32) * 2^31 = 299353^624 * 375649793 * 2^31
.word    2430825 // zeta^432 * 2^31 = 299353^432 * 2^31 = 18811302 * 2^31
.word 1203831447 // zeta^432 * f(q^(-1) mod 2^32) * 2^31 = 299353^432 * 375649793 * 2^31
.word    9032575 // zeta^736 * 2^31 = 299353^736 * 2^31 = 23624597 * 2^31
.word 3659342465 // zeta^736 * f(q^(-1) mod 2^32) * 2^31 = 299353^736 * 375649793 * 2^31
.word   18922677 // zeta^752 * 2^31 = 299353^752 * 2^31 = 403828 * 2^31
.word   25843019 // zeta^752 * f(q^(-1) mod 2^32) * 2^31 = 299353^752 * 375649793 * 2^31
.word   38694841 // zeta^560 * 2^31 = 299353^560 * 2^31 = 994165 * 2^31
.word 2211105351 // zeta^560 * f(q^(-1) mod 2^32) * 2^31 = 299353^560 * 375649793 * 2^31
.word   11561947 // zeta^544 * 2^31 = 299353^544 * 2^31 = 29356361 * 2^31
.word 4026147365 // zeta^544 * f(q^(-1) mod 2^32) * 2^31 = 299353^544 * 375649793 * 2^31
.word   14211205 // zeta^656 * 2^31 = 299353^656 * 2^31 = 30845592 * 2^31
.word 1973967227 // zeta^656 * f(q^(-1) mod 2^32) * 2^31 = 299353^656 * 375649793 * 2^31
.word   15880423 // zeta^464 * 2^31 = 299353^464 * 2^31 = 518908 * 2^31
.word   33207577 // zeta^464 * f(q^(-1) mod 2^32) * 2^31 = 299353^464 * 375649793 * 2^31
.word   66220859 // zeta^640 * 2^31 = 299353^640 * 2^31 = 25038562 * 2^31
.word 1602345669 // zeta^640 * f(q^(-1) mod 2^32) * 2^31 = 299353^640 * 375649793 * 2^31
.word   12340695 // zeta^704 * 2^31 = 299353^704 * 2^31 = 31543752 * 2^31
.word 2018646057 // zeta^704 * f(q^(-1) mod 2^32) * 2^31 = 299353^704 * 375649793 * 2^31
.word   66384763 // zeta^512 * 2^31 = 299353^512 * 2^31 = 25038561 * 2^31
.word 3749829253 // zeta^512 * f(q^(-1) mod 2^32) * 2^31 = 299353^512 * 375649793 * 2^31
.word   50311979 // zeta^448 * 2^31 = 299353^448 * 2^31 = 19715532 * 2^31
.word 1261697749 // zeta^448 * f(q^(-1) mod 2^32) * 2^31 = 299353^448 * 375649793 * 2^31
.word   66385749 // zeta^608 * 2^31 = 299353^608 * 2^31 = 9045021 * 2^31
.word 2726320811 // zeta^608 * f(q^(-1) mod 2^32) * 2^31 = 299353^608 * 375649793 * 2^31
.word   59595857 // zeta^416 * 2^31 = 299353^416 * 2^31 = 32616688 * 2^31
.word 2087308719 // zeta^416 * f(q^(-1) mod 2^32) * 2^31 = 299353^416 * 375649793 * 2^31
.word   12340695 // zeta^704 * 2^31 = 299353^704 * 2^31 = 31543752 * 2^31
.word 2018646057 // zeta^704 * f(q^(-1) mod 2^32) * 2^31 = 299353^704 * 375649793 * 2^31
.word    9032575 // zeta^736 * 2^31 = 299353^736 * 2^31 = 23624597 * 2^31
.word 3659342465 // zeta^736 * f(q^(-1) mod 2^32) * 2^31 = 299353^736 * 375649793 * 2^31
.word   11561947 // zeta^544 * 2^31 = 299353^544 * 2^31 = 29356361 * 2^31
.word 4026147365 // zeta^544 * f(q^(-1) mod 2^32) * 2^31 = 299353^544 * 375649793 * 2^31
.word   66384763 // zeta^512 * 2^31 = 299353^512 * 2^31 = 25038561 * 2^31
.word 3749829253 // zeta^512 * f(q^(-1) mod 2^32) * 2^31 = 299353^512 * 375649793 * 2^31
.word   66220859 // zeta^640 * 2^31 = 299353^640 * 2^31 = 25038562 * 2^31
.word 1602345669 // zeta^640 * f(q^(-1) mod 2^32) * 2^31 = 299353^640 * 375649793 * 2^31
.word   50311979 // zeta^448 * 2^31 = 299353^448 * 2^31 = 19715532 * 2^31
.word 1261697749 // zeta^448 * f(q^(-1) mod 2^32) * 2^31 = 299353^448 * 375649793 * 2^31
.word   66385749 // zeta^608 * 2^31 = 299353^608 * 2^31 = 9045021 * 2^31
.word 2726320811 // zeta^608 * f(q^(-1) mod 2^32) * 2^31 = 299353^608 * 375649793 * 2^31
.word    2707023 // zeta^688 * 2^31 = 299353^688 * 2^31 = 15739856 * 2^31
.word 1007273905 // zeta^688 * f(q^(-1) mod 2^32) * 2^31 = 299353^688 * 375649793 * 2^31
.word   49061917 // zeta^496 * 2^31 = 299353^496 * 2^31 = 13108720 * 2^31
.word  838894051 // zeta^496 * f(q^(-1) mod 2^32) * 2^31 = 299353^496 * 375649793 * 2^31
.word   59595857 // zeta^416 * 2^31 = 299353^416 * 2^31 = 32616688 * 2^31
.word 2087308719 // zeta^416 * f(q^(-1) mod 2^32) * 2^31 = 299353^416 * 375649793 * 2^31
.word   44552409 // zeta^592 * 2^31 = 299353^592 * 2^31 = 21166324 * 2^31
.word 1354541351 // zeta^592 * f(q^(-1) mod 2^32) * 2^31 = 299353^592 * 375649793 * 2^31
.word   37943863 // zeta^400 * 2^31 = 299353^400 * 2^31 = 9445248 * 2^31
.word  604449737 // zeta^400 * f(q^(-1) mod 2^32) * 2^31 = 299353^400 * 375649793 * 2^31
.word   33393089 // zeta^  0 * 2^31 = 299353^  0 * 2^31 = 1 * 2^31
.word 2147483711 // zeta^  0 * f(q^(-1) mod 2^32) * 2^31 = 299353^  0 * 375649793 * 2^31
.word   33393089 // zeta^  0 * 2^31 = 299353^  0 * 2^31 = 1 * 2^31
.word 2147483711 // zeta^  0 * f(q^(-1) mod 2^32) * 2^31 = 299353^  0 * 375649793 * 2^31
.word   29095681 // zeta^576 * 2^31 = 299353^576 * 2^31 = 17702291 * 2^31
.word 3280343807 // zeta^576 * f(q^(-1) mod 2^32) * 2^31 = 299353^576 * 375649793 * 2^31
.word   29095681 // zeta^576 * 2^31 = 299353^576 * 2^31 = 17702291 * 2^31
.word 3280343807 // zeta^576 * f(q^(-1) mod 2^32) * 2^31 = 299353^576 * 375649793 * 2^31
.word   52637069 // zeta^672 * 2^31 = 299353^672 * 2^31 = 30296666 * 2^31
.word 1938838643 // zeta^672 * f(q^(-1) mod 2^32) * 2^31 = 299353^672 * 375649793 * 2^31
.word   23796181 // zeta^480 * 2^31 = 299353^480 * 2^31 = 18977417 * 2^31
.word 3361945643 // zeta^480 * f(q^(-1) mod 2^32) * 2^31 = 299353^480 * 375649793 * 2^31
.word   52637069 // zeta^672 * 2^31 = 299353^672 * 2^31 = 30296666 * 2^31
.word 1938838643 // zeta^672 * f(q^(-1) mod 2^32) * 2^31 = 299353^672 * 375649793 * 2^31
.word   62228979 // zeta^720 * 2^31 = 299353^720 * 2^31 = 20647416 * 2^31
.word 1321333773 // zeta^720 * f(q^(-1) mod 2^32) * 2^31 = 299353^720 * 375649793 * 2^31
.word   18598075 // zeta^528 * 2^31 = 299353^528 * 2^31 = 6733847 * 2^31
.word 2578416965 // zeta^528 * f(q^(-1) mod 2^32) * 2^31 = 299353^528 * 375649793 * 2^31
.word   23796181 // zeta^480 * 2^31 = 299353^480 * 2^31 = 18977417 * 2^31
.word 3361945643 // zeta^480 * f(q^(-1) mod 2^32) * 2^31 = 299353^480 * 375649793 * 2^31
.word   34427601 // zeta^624 * 2^31 = 299353^624 * 2^31 = 13512548 * 2^31
.word  864737071 // zeta^624 * f(q^(-1) mod 2^32) * 2^31 = 299353^624 * 375649793 * 2^31
.word    2430825 // zeta^432 * 2^31 = 299353^432 * 2^31 = 18811302 * 2^31
.word 1203831447 // zeta^432 * f(q^(-1) mod 2^32) * 2^31 = 299353^432 * 375649793 * 2^31
.word   62228979 // zeta^720 * 2^31 = 299353^720 * 2^31 = 20647416 * 2^31
.word 1321333773 // zeta^720 * f(q^(-1) mod 2^32) * 2^31 = 299353^720 * 375649793 * 2^31
.word   12542317 // zeta^744 * 2^31 = 299353^744 * 2^31 = 3271804 * 2^31
.word  209379475 // zeta^744 * f(q^(-1) mod 2^32) * 2^31 = 299353^744 * 375649793 * 2^31
.word   48811299 // zeta^552 * 2^31 = 299353^552 * 2^31 = 29737761 * 2^31
.word 4050555101 // zeta^552 * f(q^(-1) mod 2^32) * 2^31 = 299353^552 * 375649793 * 2^31
.word   18598075 // zeta^528 * 2^31 = 299353^528 * 2^31 = 6733847 * 2^31
.word 2578416965 // zeta^528 * f(q^(-1) mod 2^32) * 2^31 = 299353^528 * 375649793 * 2^31
.word   27114239 // zeta^648 * 2^31 = 299353^648 * 2^31 = 13128918 * 2^31
.word  840186625 // zeta^648 * f(q^(-1) mod 2^32) * 2^31 = 299353^648 * 375649793 * 2^31
.word   21796399 // zeta^456 * 2^31 = 299353^456 * 2^31 = 18930340 * 2^31
.word 1211449297 // zeta^456 * f(q^(-1) mod 2^32) * 2^31 = 299353^456 * 375649793 * 2^31
.word   34427601 // zeta^624 * 2^31 = 299353^624 * 2^31 = 13512548 * 2^31
.word  864737071 // zeta^624 * f(q^(-1) mod 2^32) * 2^31 = 299353^624 * 375649793 * 2^31
.word   41196349 // zeta^696 * 2^31 = 299353^696 * 2^31 = 10953311 * 2^31
.word 2848442051 // zeta^696 * f(q^(-1) mod 2^32) * 2^31 = 299353^696 * 375649793 * 2^31
.word   58757463 // zeta^504 * 2^31 = 299353^504 * 2^31 = 17352831 * 2^31
.word 3257980073 // zeta^504 * f(q^(-1) mod 2^32) * 2^31 = 299353^504 * 375649793 * 2^31
.word    2430825 // zeta^432 * 2^31 = 299353^432 * 2^31 = 18811302 * 2^31
.word 1203831447 // zeta^432 * f(q^(-1) mod 2^32) * 2^31 = 299353^432 * 375649793 * 2^31
.word   40500013 // zeta^600 * 2^31 = 299353^600 * 2^31 = 9914896 * 2^31
.word  634504915 // zeta^600 * f(q^(-1) mod 2^32) * 2^31 = 299353^600 * 375649793 * 2^31
.word    7832335 // zeta^408 * 2^31 = 299353^408 * 2^31 = 12267508 * 2^31
.word  785060593 // zeta^408 * f(q^(-1) mod 2^32) * 2^31 = 299353^408 * 375649793 * 2^31
.word   12542317 // zeta^744 * 2^31 = 299353^744 * 2^31 = 3271804 * 2^31
.word  209379475 // zeta^744 * f(q^(-1) mod 2^32) * 2^31 = 299353^744 * 375649793 * 2^31
.word   61099389 // zeta^756 * 2^31 = 299353^756 * 2^31 = 26362414 * 2^31
.word 1687065731 // zeta^756 * f(q^(-1) mod 2^32) * 2^31 = 299353^756 * 375649793 * 2^31
.word   31380141 // zeta^564 * 2^31 = 299353^564 * 2^31 = 2302061 * 2^31
.word 2294804307 // zeta^564 * f(q^(-1) mod 2^32) * 2^31 = 299353^564 * 375649793 * 2^31
.word   48811299 // zeta^552 * 2^31 = 299353^552 * 2^31 = 29737761 * 2^31
.word 4050555101 // zeta^552 * f(q^(-1) mod 2^32) * 2^31 = 299353^552 * 375649793 * 2^31
.word   54335767 // zeta^660 * 2^31 = 299353^660 * 2^31 = 6490403 * 2^31
.word 2562837737 // zeta^660 * f(q^(-1) mod 2^32) * 2^31 = 299353^660 * 375649793 * 2^31
.word   46002083 // zeta^468 * 2^31 = 299353^468 * 2^31 = 19648405 * 2^31
.word 3404885597 // zeta^468 * f(q^(-1) mod 2^32) * 2^31 = 299353^468 * 375649793 * 2^31
.word   27114239 // zeta^648 * 2^31 = 299353^648 * 2^31 = 13128918 * 2^31
.word  840186625 // zeta^648 * f(q^(-1) mod 2^32) * 2^31 = 299353^648 * 375649793 * 2^31
.word   54842419 // zeta^708 * 2^31 = 299353^708 * 2^31 = 27028662 * 2^31
.word 1729702349 // zeta^708 * f(q^(-1) mod 2^32) * 2^31 = 299353^708 * 375649793 * 2^31
.word   35394733 // zeta^516 * 2^31 = 299353^516 * 2^31 = 9731484 * 2^31
.word  622767443 // zeta^516 * f(q^(-1) mod 2^32) * 2^31 = 299353^516 * 375649793 * 2^31
.word   21796399 // zeta^456 * 2^31 = 299353^456 * 2^31 = 18930340 * 2^31
.word 1211449297 // zeta^456 * f(q^(-1) mod 2^32) * 2^31 = 299353^456 * 375649793 * 2^31
.word   56722355 // zeta^612 * 2^31 = 299353^612 * 2^31 = 31418183 * 2^31
.word 4158093901 // zeta^612 * f(q^(-1) mod 2^32) * 2^31 = 299353^612 * 375649793 * 2^31
.word    1316163 // zeta^420 * 2^31 = 299353^420 * 2^31 = 14833295 * 2^31
.word 3096742077 // zeta^420 * f(q^(-1) mod 2^32) * 2^31 = 299353^420 * 375649793 * 2^31
.word   41196349 // zeta^696 * 2^31 = 299353^696 * 2^31 = 10953311 * 2^31
.word 2848442051 // zeta^696 * f(q^(-1) mod 2^32) * 2^31 = 299353^696 * 375649793 * 2^31
.word    9983051 // zeta^732 * 2^31 = 299353^732 * 2^31 = 5086187 * 2^31
.word 2472974773 // zeta^732 * f(q^(-1) mod 2^32) * 2^31 = 299353^732 * 375649793 * 2^31
.word    3784291 // zeta^540 * 2^31 = 299353^540 * 2^31 = 25309194 * 2^31
.word 1619664797 // zeta^540 * f(q^(-1) mod 2^32) * 2^31 = 299353^540 * 375649793 * 2^31
.word   58757463 // zeta^504 * 2^31 = 299353^504 * 2^31 = 17352831 * 2^31
.word 3257980073 // zeta^504 * f(q^(-1) mod 2^32) * 2^31 = 299353^504 * 375649793 * 2^31
.word   57730785 // zeta^636 * 2^31 = 299353^636 * 2^31 = 25085703 * 2^31
.word 3752846111 // zeta^636 * f(q^(-1) mod 2^32) * 2^31 = 299353^636 * 375649793 * 2^31
.word    7721125 // zeta^444 * 2^31 = 299353^444 * 2^31 = 28113639 * 2^31
.word 3946619227 // zeta^444 * f(q^(-1) mod 2^32) * 2^31 = 299353^444 * 375649793 * 2^31
.word   40500013 // zeta^600 * 2^31 = 299353^600 * 2^31 = 9914896 * 2^31
.word  634504915 // zeta^600 * f(q^(-1) mod 2^32) * 2^31 = 299353^600 * 375649793 * 2^31
.word    8316793 // zeta^684 * 2^31 = 299353^684 * 2^31 = 9249292 * 2^31
.word  591909511 // zeta^684 * f(q^(-1) mod 2^32) * 2^31 = 299353^684 * 375649793 * 2^31
.word   16634213 // zeta^492 * 2^31 = 299353^492 * 2^31 = 29292862 * 2^31
.word 1874600091 // zeta^492 * f(q^(-1) mod 2^32) * 2^31 = 299353^492 * 375649793 * 2^31
.word    7832335 // zeta^408 * 2^31 = 299353^408 * 2^31 = 12267508 * 2^31
.word  785060593 // zeta^408 * f(q^(-1) mod 2^32) * 2^31 = 299353^408 * 375649793 * 2^31
.word   62080381 // zeta^588 * 2^31 = 299353^588 * 2^31 = 6865022 * 2^31
.word  439327875 // zeta^588 * f(q^(-1) mod 2^32) * 2^31 = 299353^588 * 375649793 * 2^31
.word   26241327 // zeta^396 * 2^31 = 299353^396 * 2^31 = 572895 * 2^31
.word 2184146129 // zeta^396 * f(q^(-1) mod 2^32) * 2^31 = 299353^396 * 375649793 * 2^31
.word   51789473 // zeta^760 * 2^31 = 299353^760 * 2^31 = 3793231 * 2^31
.word 2390231903 // zeta^760 * f(q^(-1) mod 2^32) * 2^31 = 299353^760 * 375649793 * 2^31
.word   13776707 // zeta^764 * 2^31 = 299353^764 * 2^31 = 24424675 * 2^31
.word 3710543549 // zeta^764 * f(q^(-1) mod 2^32) * 2^31 = 299353^764 * 375649793 * 2^31
.word    4211035 // zeta^572 * 2^31 = 299353^572 * 2^31 = 10684514 * 2^31
.word  683756709 // zeta^572 * f(q^(-1) mod 2^32) * 2^31 = 299353^572 * 375649793 * 2^31
.word   38147821 // zeta^568 * 2^31 = 299353^568 * 2^31 = 27276494 * 2^31
.word 1745562387 // zeta^568 * f(q^(-1) mod 2^32) * 2^31 = 299353^568 * 375649793 * 2^31
.word    2239199 // zeta^668 * 2^31 = 299353^668 * 2^31 = 28426918 * 2^31
.word 1819183905 // zeta^668 * f(q^(-1) mod 2^32) * 2^31 = 299353^668 * 375649793 * 2^31
.word   22779603 // zeta^476 * 2^31 = 299353^476 * 2^31 = 1602327 * 2^31
.word 2250024749 // zeta^476 * f(q^(-1) mod 2^32) * 2^31 = 299353^476 * 375649793 * 2^31
.word   50846023 // zeta^664 * 2^31 = 299353^664 * 2^31 = 21424662 * 2^31
.word 1371073721 // zeta^664 * f(q^(-1) mod 2^32) * 2^31 = 299353^664 * 375649793 * 2^31
.word   66165173 // zeta^716 * 2^31 = 299353^716 * 2^31 = 21853285 * 2^31
.word 3545987147 // zeta^716 * f(q^(-1) mod 2^32) * 2^31 = 299353^716 * 375649793 * 2^31
.word   50761721 // zeta^524 * 2^31 = 299353^524 * 2^31 = 7165643 * 2^31
.word 2606049799 // zeta^524 * f(q^(-1) mod 2^32) * 2^31 = 299353^524 * 375649793 * 2^31
.word   60005985 // zeta^472 * 2^31 = 299353^472 * 2^31 = 3334573 * 2^31
.word 2360880031 // zeta^472 * f(q^(-1) mod 2^32) * 2^31 = 299353^472 * 375649793 * 2^31
.word   22799139 // zeta^620 * 2^31 = 299353^620 * 2^31 = 23553265 * 2^31
.word 3654777565 // zeta^620 * f(q^(-1) mod 2^32) * 2^31 = 299353^620 * 375649793 * 2^31
.word   58461905 // zeta^428 * 2^31 = 299353^428 * 2^31 = 5624346 * 2^31
.word  359930671 // zeta^428 * f(q^(-1) mod 2^32) * 2^31 = 299353^428 * 375649793 * 2^31
.word   10205025 // zeta^712 * 2^31 = 299353^712 * 2^31 = 7514760 * 2^31
.word  480907935 // zeta^712 * f(q^(-1) mod 2^32) * 2^31 = 299353^712 * 375649793 * 2^31
.word   26033017 // zeta^740 * 2^31 = 299353^740 * 2^31 = 25562521 * 2^31
.word 3783360135 // zeta^740 * f(q^(-1) mod 2^32) * 2^31 = 299353^740 * 375649793 * 2^31
.word   18756165 // zeta^548 * 2^31 = 299353^548 * 2^31 = 7312429 * 2^31
.word 2615443387 // zeta^548 * f(q^(-1) mod 2^32) * 2^31 = 299353^548 * 375649793 * 2^31
.word   62474397 // zeta^520 * 2^31 = 299353^520 * 2^31 = 24586938 * 2^31
.word 1573443939 // zeta^520 * f(q^(-1) mod 2^32) * 2^31 = 299353^520 * 375649793 * 2^31
.word   23976243 // zeta^644 * 2^31 = 299353^644 * 2^31 = 3967426 * 2^31
.word  253895885 // zeta^644 * f(q^(-1) mod 2^32) * 2^31 = 299353^644 * 375649793 * 2^31
.word   12747875 // zeta^452 * 2^31 = 299353^452 * 2^31 = 25099490 * 2^31
.word 1606244765 // zeta^452 * f(q^(-1) mod 2^32) * 2^31 = 299353^452 * 375649793 * 2^31
.word   40016325 // zeta^616 * 2^31 = 299353^616 * 2^31 = 23245647 * 2^31
.word 3635091515 // zeta^616 * f(q^(-1) mod 2^32) * 2^31 = 299353^616 * 375649793 * 2^31
.word   60810771 // zeta^692 * 2^31 = 299353^692 * 2^31 = 15189991 * 2^31
.word 3119568877 // zeta^692 * f(q^(-1) mod 2^32) * 2^31 = 299353^692 * 375649793 * 2^31
.word   17968525 // zeta^500 * 2^31 = 299353^500 * 2^31 = 19827515 * 2^31
.word 3416347763 // zeta^500 * f(q^(-1) mod 2^32) * 2^31 = 299353^500 * 375649793 * 2^31
.word   24437007 // zeta^424 * 2^31 = 299353^424 * 2^31 = 23981562 * 2^31
.word 1534702833 // zeta^424 * f(q^(-1) mod 2^32) * 2^31 = 299353^424 * 375649793 * 2^31
.word   38196147 // zeta^596 * 2^31 = 299353^596 * 2^31 = 12078147 * 2^31
.word 2920426061 // zeta^596 * f(q^(-1) mod 2^32) * 2^31 = 299353^596 * 375649793 * 2^31
.word   61373823 // zeta^404 * 2^31 = 299353^404 * 2^31 = 8817795 * 2^31
.word 2711779457 // zeta^404 * f(q^(-1) mod 2^32) * 2^31 = 299353^404 * 375649793 * 2^31
.word    9032575 // zeta^736 * 2^31 = 299353^736 * 2^31 = 23624597 * 2^31
.word 3659342465 // zeta^736 * f(q^(-1) mod 2^32) * 2^31 = 299353^736 * 375649793 * 2^31
.word   18922677 // zeta^752 * 2^31 = 299353^752 * 2^31 = 403828 * 2^31
.word   25843019 // zeta^752 * f(q^(-1) mod 2^32) * 2^31 = 299353^752 * 375649793 * 2^31
.word   38694841 // zeta^560 * 2^31 = 299353^560 * 2^31 = 994165 * 2^31
.word 2211105351 // zeta^560 * f(q^(-1) mod 2^32) * 2^31 = 299353^560 * 375649793 * 2^31
.word   11561947 // zeta^544 * 2^31 = 299353^544 * 2^31 = 29356361 * 2^31
.word 4026147365 // zeta^544 * f(q^(-1) mod 2^32) * 2^31 = 299353^544 * 375649793 * 2^31
.word   14211205 // zeta^656 * 2^31 = 299353^656 * 2^31 = 30845592 * 2^31
.word 1973967227 // zeta^656 * f(q^(-1) mod 2^32) * 2^31 = 299353^656 * 375649793 * 2^31
.word   15880423 // zeta^464 * 2^31 = 299353^464 * 2^31 = 518908 * 2^31
.word   33207577 // zeta^464 * f(q^(-1) mod 2^32) * 2^31 = 299353^464 * 375649793 * 2^31
.word   66220859 // zeta^640 * 2^31 = 299353^640 * 2^31 = 25038562 * 2^31
.word 1602345669 // zeta^640 * f(q^(-1) mod 2^32) * 2^31 = 299353^640 * 375649793 * 2^31
.word   12340695 // zeta^704 * 2^31 = 299353^704 * 2^31 = 31543752 * 2^31
.word 2018646057 // zeta^704 * f(q^(-1) mod 2^32) * 2^31 = 299353^704 * 375649793 * 2^31
.word   66384763 // zeta^512 * 2^31 = 299353^512 * 2^31 = 25038561 * 2^31
.word 3749829253 // zeta^512 * f(q^(-1) mod 2^32) * 2^31 = 299353^512 * 375649793 * 2^31
.word   50311979 // zeta^448 * 2^31 = 299353^448 * 2^31 = 19715532 * 2^31
.word 1261697749 // zeta^448 * f(q^(-1) mod 2^32) * 2^31 = 299353^448 * 375649793 * 2^31
.word   66385749 // zeta^608 * 2^31 = 299353^608 * 2^31 = 9045021 * 2^31
.word 2726320811 // zeta^608 * f(q^(-1) mod 2^32) * 2^31 = 299353^608 * 375649793 * 2^31
.word   59595857 // zeta^416 * 2^31 = 299353^416 * 2^31 = 32616688 * 2^31
.word 2087308719 // zeta^416 * f(q^(-1) mod 2^32) * 2^31 = 299353^416 * 375649793 * 2^31
.word    2707023 // zeta^688 * 2^31 = 299353^688 * 2^31 = 15739856 * 2^31
.word 1007273905 // zeta^688 * f(q^(-1) mod 2^32) * 2^31 = 299353^688 * 375649793 * 2^31
.word   14051021 // zeta^728 * 2^31 = 299353^728 * 2^31 = 6580323 * 2^31
.word 2568592179 // zeta^728 * f(q^(-1) mod 2^32) * 2^31 = 299353^728 * 375649793 * 2^31
.word   25121365 // zeta^536 * 2^31 = 299353^536 * 2^31 = 135177 * 2^31
.word 2156134315 // zeta^536 * f(q^(-1) mod 2^32) * 2^31 = 299353^536 * 375649793 * 2^31
.word   49061917 // zeta^496 * 2^31 = 299353^496 * 2^31 = 13108720 * 2^31
.word  838894051 // zeta^496 * f(q^(-1) mod 2^32) * 2^31 = 299353^496 * 375649793 * 2^31
.word    9875957 // zeta^632 * 2^31 = 299353^632 * 2^31 = 21146062 * 2^31
.word 1353244683 // zeta^632 * f(q^(-1) mod 2^32) * 2^31 = 299353^632 * 375649793 * 2^31
.word   30508465 // zeta^440 * 2^31 = 299353^440 * 2^31 = 16323183 * 2^31
.word 3192087631 // zeta^440 * f(q^(-1) mod 2^32) * 2^31 = 299353^440 * 375649793 * 2^31
.word   44552409 // zeta^592 * 2^31 = 299353^592 * 2^31 = 21166324 * 2^31
.word 1354541351 // zeta^592 * f(q^(-1) mod 2^32) * 2^31 = 299353^592 * 375649793 * 2^31
.word   57931285 // zeta^680 * 2^31 = 299353^680 * 2^31 = 5756199 * 2^31
.word 2515852267 // zeta^680 * f(q^(-1) mod 2^32) * 2^31 = 299353^680 * 375649793 * 2^31
.word   61031001 // zeta^488 * 2^31 = 299353^488 * 2^31 = 19973843 * 2^31
.word 3425712039 // zeta^488 * f(q^(-1) mod 2^32) * 2^31 = 299353^488 * 375649793 * 2^31
.word   37943863 // zeta^400 * 2^31 = 299353^400 * 2^31 = 9445248 * 2^31
.word  604449737 // zeta^400 * f(q^(-1) mod 2^32) * 2^31 = 299353^400 * 375649793 * 2^31
.word   65558417 // zeta^584 * 2^31 = 299353^584 * 2^31 = 26445100 * 2^31
.word 1692357231 // zeta^584 * f(q^(-1) mod 2^32) * 2^31 = 299353^584 * 375649793 * 2^31
.word    1803165 // zeta^392 * 2^31 = 299353^392 * 2^31 = 11458020 * 2^31
.word  733257315 // zeta^392 * f(q^(-1) mod 2^32) * 2^31 = 299353^392 * 375649793 * 2^31
.word   18922677 // zeta^752 * 2^31 = 299353^752 * 2^31 = 403828 * 2^31
.word   25843019 // zeta^752 * f(q^(-1) mod 2^32) * 2^31 = 299353^752 * 375649793 * 2^31
.word   51789473 // zeta^760 * 2^31 = 299353^760 * 2^31 = 3793231 * 2^31
.word 2390231903 // zeta^760 * f(q^(-1) mod 2^32) * 2^31 = 299353^760 * 375649793 * 2^31
.word   38147821 // zeta^568 * 2^31 = 299353^568 * 2^31 = 27276494 * 2^31
.word 1745562387 // zeta^568 * f(q^(-1) mod 2^32) * 2^31 = 299353^568 * 375649793 * 2^31
.word   38694841 // zeta^560 * 2^31 = 299353^560 * 2^31 = 994165 * 2^31
.word 2211105351 // zeta^560 * f(q^(-1) mod 2^32) * 2^31 = 299353^560 * 375649793 * 2^31
.word   50846023 // zeta^664 * 2^31 = 299353^664 * 2^31 = 21424662 * 2^31
.word 1371073721 // zeta^664 * f(q^(-1) mod 2^32) * 2^31 = 299353^664 * 375649793 * 2^31
.word   60005985 // zeta^472 * 2^31 = 299353^472 * 2^31 = 3334573 * 2^31
.word 2360880031 // zeta^472 * f(q^(-1) mod 2^32) * 2^31 = 299353^472 * 375649793 * 2^31
.word   14211205 // zeta^656 * 2^31 = 299353^656 * 2^31 = 30845592 * 2^31
.word 1973967227 // zeta^656 * f(q^(-1) mod 2^32) * 2^31 = 299353^656 * 375649793 * 2^31
.word   10205025 // zeta^712 * 2^31 = 299353^712 * 2^31 = 7514760 * 2^31
.word  480907935 // zeta^712 * f(q^(-1) mod 2^32) * 2^31 = 299353^712 * 375649793 * 2^31
.word   62474397 // zeta^520 * 2^31 = 299353^520 * 2^31 = 24586938 * 2^31
.word 1573443939 // zeta^520 * f(q^(-1) mod 2^32) * 2^31 = 299353^520 * 375649793 * 2^31
.word   15880423 // zeta^464 * 2^31 = 299353^464 * 2^31 = 518908 * 2^31
.word   33207577 // zeta^464 * f(q^(-1) mod 2^32) * 2^31 = 299353^464 * 375649793 * 2^31
.word   40016325 // zeta^616 * 2^31 = 299353^616 * 2^31 = 23245647 * 2^31
.word 3635091515 // zeta^616 * f(q^(-1) mod 2^32) * 2^31 = 299353^616 * 375649793 * 2^31
.word   24437007 // zeta^424 * 2^31 = 299353^424 * 2^31 = 23981562 * 2^31
.word 1534702833 // zeta^424 * f(q^(-1) mod 2^32) * 2^31 = 299353^424 * 375649793 * 2^31
.word   12340695 // zeta^704 * 2^31 = 299353^704 * 2^31 = 31543752 * 2^31
.word 2018646057 // zeta^704 * f(q^(-1) mod 2^32) * 2^31 = 299353^704 * 375649793 * 2^31
.word    9032575 // zeta^736 * 2^31 = 299353^736 * 2^31 = 23624597 * 2^31
.word 3659342465 // zeta^736 * f(q^(-1) mod 2^32) * 2^31 = 299353^736 * 375649793 * 2^31
.word   11561947 // zeta^544 * 2^31 = 299353^544 * 2^31 = 29356361 * 2^31
.word 4026147365 // zeta^544 * f(q^(-1) mod 2^32) * 2^31 = 299353^544 * 375649793 * 2^31
.word   66384763 // zeta^512 * 2^31 = 299353^512 * 2^31 = 25038561 * 2^31
.word 3749829253 // zeta^512 * f(q^(-1) mod 2^32) * 2^31 = 299353^512 * 375649793 * 2^31
.word   66220859 // zeta^640 * 2^31 = 299353^640 * 2^31 = 25038562 * 2^31
.word 1602345669 // zeta^640 * f(q^(-1) mod 2^32) * 2^31 = 299353^640 * 375649793 * 2^31
.word   50311979 // zeta^448 * 2^31 = 299353^448 * 2^31 = 19715532 * 2^31
.word 1261697749 // zeta^448 * f(q^(-1) mod 2^32) * 2^31 = 299353^448 * 375649793 * 2^31
.word   66385749 // zeta^608 * 2^31 = 299353^608 * 2^31 = 9045021 * 2^31
.word 2726320811 // zeta^608 * f(q^(-1) mod 2^32) * 2^31 = 299353^608 * 375649793 * 2^31
.word    2707023 // zeta^688 * 2^31 = 299353^688 * 2^31 = 15739856 * 2^31
.word 1007273905 // zeta^688 * f(q^(-1) mod 2^32) * 2^31 = 299353^688 * 375649793 * 2^31
.word   49061917 // zeta^496 * 2^31 = 299353^496 * 2^31 = 13108720 * 2^31
.word  838894051 // zeta^496 * f(q^(-1) mod 2^32) * 2^31 = 299353^496 * 375649793 * 2^31
.word   59595857 // zeta^416 * 2^31 = 299353^416 * 2^31 = 32616688 * 2^31
.word 2087308719 // zeta^416 * f(q^(-1) mod 2^32) * 2^31 = 299353^416 * 375649793 * 2^31
.word   44552409 // zeta^592 * 2^31 = 299353^592 * 2^31 = 21166324 * 2^31
.word 1354541351 // zeta^592 * f(q^(-1) mod 2^32) * 2^31 = 299353^592 * 375649793 * 2^31
.word   37943863 // zeta^400 * 2^31 = 299353^400 * 2^31 = 9445248 * 2^31
.word  604449737 // zeta^400 * f(q^(-1) mod 2^32) * 2^31 = 299353^400 * 375649793 * 2^31
.word   14051021 // zeta^728 * 2^31 = 299353^728 * 2^31 = 6580323 * 2^31
.word 2568592179 // zeta^728 * f(q^(-1) mod 2^32) * 2^31 = 299353^728 * 375649793 * 2^31
.word   39721919 // zeta^748 * 2^31 = 299353^748 * 2^31 = 27817396 * 2^31
.word 1780177473 // zeta^748 * f(q^(-1) mod 2^32) * 2^31 = 299353^748 * 375649793 * 2^31
.word   33221705 // zeta^556 * 2^31 = 299353^556 * 2^31 = 14873638 * 2^31
.word  951840183 // zeta^556 * f(q^(-1) mod 2^32) * 2^31 = 299353^556 * 375649793 * 2^31
.word   25121365 // zeta^536 * 2^31 = 299353^536 * 2^31 = 135177 * 2^31
.word 2156134315 // zeta^536 * f(q^(-1) mod 2^32) * 2^31 = 299353^536 * 375649793 * 2^31
.word   58077387 // zeta^652 * 2^31 = 299353^652 * 2^31 = 6592748 * 2^31
.word  421903669 // zeta^652 * f(q^(-1) mod 2^32) * 2^31 = 299353^652 * 375649793 * 2^31
.word   29472201 // zeta^460 * 2^31 = 299353^460 * 2^31 = 18568730 * 2^31
.word 1188308023 // zeta^460 * f(q^(-1) mod 2^32) * 2^31 = 299353^460 * 375649793 * 2^31
.word    9875957 // zeta^632 * 2^31 = 299353^632 * 2^31 = 21146062 * 2^31
.word 1353244683 // zeta^632 * f(q^(-1) mod 2^32) * 2^31 = 299353^632 * 375649793 * 2^31
.word   30046903 // zeta^700 * 2^31 = 299353^700 * 2^31 = 16127868 * 2^31
.word 1032104777 // zeta^700 * f(q^(-1) mod 2^32) * 2^31 = 299353^700 * 375649793 * 2^31
.word   10397085 // zeta^508 * 2^31 = 299353^508 * 2^31 = 661028 * 2^31
.word   42302563 // zeta^508 * f(q^(-1) mod 2^32) * 2^31 = 299353^508 * 375649793 * 2^31
.word   30508465 // zeta^440 * 2^31 = 299353^440 * 2^31 = 16323183 * 2^31
.word 3192087631 // zeta^440 * f(q^(-1) mod 2^32) * 2^31 = 299353^440 * 375649793 * 2^31
.word   66319647 // zeta^604 * 2^31 = 299353^604 * 2^31 = 6688514 * 2^31
.word  428032225 // zeta^604 * f(q^(-1) mod 2^32) * 2^31 = 299353^604 * 375649793 * 2^31
.word   35102085 // zeta^412 * 2^31 = 299353^412 * 2^31 = 30439269 * 2^31
.word 4095448187 // zeta^412 * f(q^(-1) mod 2^32) * 2^31 = 299353^412 * 375649793 * 2^31
.word   57931285 // zeta^680 * 2^31 = 299353^680 * 2^31 = 5756199 * 2^31
.word 2515852267 // zeta^680 * f(q^(-1) mod 2^32) * 2^31 = 299353^680 * 375649793 * 2^31
.word   25751057 // zeta^724 * 2^31 = 299353^724 * 2^31 = 25986735 * 2^31
.word 3810507759 // zeta^724 * f(q^(-1) mod 2^32) * 2^31 = 299353^724 * 375649793 * 2^31
.word   15038611 // zeta^532 * 2^31 = 299353^532 * 2^31 = 15308198 * 2^31
.word  979649901 // zeta^532 * f(q^(-1) mod 2^32) * 2^31 = 299353^532 * 375649793 * 2^31
.word   61031001 // zeta^488 * 2^31 = 299353^488 * 2^31 = 19973843 * 2^31
.word 3425712039 // zeta^488 * f(q^(-1) mod 2^32) * 2^31 = 299353^488 * 375649793 * 2^31
.word   45510921 // zeta^628 * 2^31 = 299353^628 * 2^31 = 12632936 * 2^31
.word  808446199 // zeta^628 * f(q^(-1) mod 2^32) * 2^31 = 299353^628 * 375649793 * 2^31
.word    4126363 // zeta^436 * 2^31 = 299353^436 * 2^31 = 20669063 * 2^31
.word 3470202725 // zeta^436 * f(q^(-1) mod 2^32) * 2^31 = 299353^436 * 375649793 * 2^31
.word   65558417 // zeta^584 * 2^31 = 299353^584 * 2^31 = 26445100 * 2^31
.word 1692357231 // zeta^584 * f(q^(-1) mod 2^32) * 2^31 = 299353^584 * 375649793 * 2^31
.word   50996995 // zeta^676 * 2^31 = 299353^676 * 2^31 = 26036127 * 2^31
.word 3813668605 // zeta^676 * f(q^(-1) mod 2^32) * 2^31 = 299353^676 * 375649793 * 2^31
.word   64246331 // zeta^484 * 2^31 = 299353^484 * 2^31 = 5855662 * 2^31
.word  374733765 // zeta^484 * f(q^(-1) mod 2^32) * 2^31 = 299353^484 * 375649793 * 2^31
.word    1803165 // zeta^392 * 2^31 = 299353^392 * 2^31 = 11458020 * 2^31
.word  733257315 // zeta^392 * f(q^(-1) mod 2^32) * 2^31 = 299353^392 * 375649793 * 2^31
.word   34033301 // zeta^580 * 2^31 = 299353^580 * 2^31 = 18571159 * 2^31
.word 3335947115 // zeta^580 * f(q^(-1) mod 2^32) * 2^31 = 299353^580 * 375649793 * 2^31
.word   44975483 // zeta^388 * 2^31 = 299353^388 * 2^31 = 5764058 * 2^31
.word  368871557 // zeta^388 * f(q^(-1) mod 2^32) * 2^31 = 299353^388 * 375649793 * 2^31
.text
.align 4
roots_addr: .word roots
.syntax unified
.type ntt_768_u32_33556993_299353_incomplete_bitrev, %function
.global ntt_768_u32_33556993_299353_incomplete_bitrev
ntt_768_u32_33556993_299353_incomplete_bitrev:
// Save GPRs
push {r4-r11,lr}
// Save MVE vector registers
vpush {d8-d15}
// Use r14 as marker for r0 + 1008
add r14, r0, #1008
// Use r12 as marker for r0 + 2016
add r12, r14, #1008
// Use r11 as marker for r0 + 3024
add r11, r12, #1008
.equ modulus, 33556993
movw r10, #:lower16:modulus
movt r10, #:upper16:modulus
ldr r9, roots_addr
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
// input[424]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -80)]
// input[596]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 92)]
vsub.s32 Q2, Q0, Q1
vqrdmulh.s32 Q3, Q2, r8
vadd.s32 Q5, Q0, Q1
// Release input[424] from Q0
vmul.u32 Q4, Q2, r7
// input[0]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 0)]
vqrdmlah.s32 Q3, Q4, r10
vsub.s32 Q4, Q0, Q1
// Release input[596] from Q1
// input[680]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -76)]
vadd.s32 Q6, Q4, Q3
// input[212]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * -40)]
vsub.s32 Q4, Q4, Q3
vstrw.u32 Q6, [r12,#(-320)]
vsub.s32 Q4, Q4, Q2
vstrw.u32 Q4, [r12,#(368)]
vadd.s32 Q5, Q5, Q0
// Release input[0] from Q0
vstrw.u32 Q5, [r0,#(0)]
// input[680]: Already loaded as Q1
// input[212]: Already loaded as Q7
vsub.s32 Q0, Q1, Q7
vqrdmulh.s32 Q2, Q0, r8
vadd.s32 Q4, Q1, Q7
// Release input[680] from Q1
vmul.u32 Q3, Q0, r7
// input[256]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 4)]
vqrdmlah.s32 Q2, Q3, r10
vsub.s32 Q3, Q1, Q7
// Release input[212] from Q7
// input[104]: Load as Q5
vldrw.u32 Q5, [r0, #(4 * 104)]
vadd.s32 Q6, Q3, Q2
// input[468]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * -36)]
vsub.s32 Q3, Q3, Q2
vstrw.u32 Q6, [r11,#(-304)]
vsub.s32 Q3, Q3, Q0
vstrw.u32 Q3, [r14,#(-160)]
vadd.s32 Q4, Q4, Q1
// Release input[256] from Q1
vstrw.u32 Q4, [r14,#(16)]
// input[104]: Already loaded as Q5
// input[468]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[104] from Q5
vmul.u32 Q2, Q0, r7
// input[512]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 8)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[468] from Q7
// input[360]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * 108)]
vadd.s32 Q6, Q2, Q1
// input[724]: Load as Q7
vldrw.u32 Q7, [r11, #(4 * -32)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r0,#(416)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r12,#(-144)]
vadd.s32 Q3, Q3, Q4
// Release input[512] from Q4
vstrw.u32 Q3, [r12,#(32)]
// input[360]: Already loaded as Q5
// input[724]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[360] from Q5
vmul.u32 Q2, Q0, r7
// input[128]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -124)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[724] from Q7
// input[616]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * 112)]
vadd.s32 Q6, Q2, Q1
// input[52]: Load as Q7
vldrw.u32 Q7, [r0, #(4 * 52)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r14,#(432)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r11,#(-128)]
vadd.s32 Q3, Q3, Q4
// Release input[128] from Q4
vstrw.u32 Q3, [r14,#(-496)]
// input[616]: Already loaded as Q5
// input[52]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[616] from Q5
vmul.u32 Q2, Q0, r7
// input[384]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -120)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[52] from Q7
// input[232]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * -20)]
vadd.s32 Q6, Q2, Q1
// input[308]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * 56)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r12,#(448)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r0,#(208)]
vadd.s32 Q3, Q3, Q4
// Release input[384] from Q4
vstrw.u32 Q3, [r12,#(-480)]
// input[232]: Already loaded as Q5
// input[308]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[232] from Q5
vmul.u32 Q2, Q0, r7
// input[640]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -116)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[308] from Q7
// input[488]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * -16)]
vadd.s32 Q6, Q2, Q1
// input[564]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * 60)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r14,#(-80)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r14,#(224)]
vadd.s32 Q3, Q3, Q4
// Release input[640] from Q4
vstrw.u32 Q3, [r11,#(-464)]
// input[488]: Already loaded as Q5
// input[564]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[488] from Q5
vmul.u32 Q2, Q0, r7
// input[64]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 64)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[564] from Q7
// input[744]: Load as Q5
vldrw.u32 Q5, [r11, #(4 * -12)]
vadd.s32 Q6, Q2, Q1
// input[180]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * -72)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r12,#(-64)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r12,#(240)]
vadd.s32 Q3, Q3, Q4
// Release input[64] from Q4
vstrw.u32 Q3, [r0,#(256)]
// input[744]: Already loaded as Q5
// input[180]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[744] from Q5
vmul.u32 Q2, Q0, r7
// input[320]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 68)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[180] from Q7
// input[24]: Load as Q5
vldrw.u32 Q5, [r0, #(4 * 24)]
vadd.s32 Q6, Q2, Q1
// input[436]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * -68)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r11,#(-48)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r14,#(-288)]
vadd.s32 Q3, Q3, Q4
// Release input[320] from Q4
vstrw.u32 Q3, [r14,#(272)]
// input[24]: Already loaded as Q5
// input[436]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[24] from Q5
vmul.u32 Q2, Q0, r7
// input[576]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 72)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[436] from Q7
// input[280]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * 28)]
vadd.s32 Q6, Q2, Q1
// input[692]: Load as Q7
vldrw.u32 Q7, [r11, #(4 * -64)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r0,#(96)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r12,#(-272)]
vadd.s32 Q3, Q3, Q4
// Release input[576] from Q4
vstrw.u32 Q3, [r12,#(288)]
// input[280]: Already loaded as Q5
// input[692]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[280] from Q5
vmul.u32 Q2, Q0, r7
// input[192]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -60)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[692] from Q7
// input[536]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * 32)]
vadd.s32 Q6, Q2, Q1
// input[116]: Load as Q7
vldrw.u32 Q7, [r0, #(4 * 116)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r14,#(112)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r11,#(-256)]
vadd.s32 Q3, Q3, Q4
// Release input[192] from Q4
vstrw.u32 Q3, [r14,#(-240)]
// input[536]: Already loaded as Q5
// input[116]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[536] from Q5
vmul.u32 Q2, Q0, r7
// input[448]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -56)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[116] from Q7
// input[152]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * -100)]
vadd.s32 Q6, Q2, Q1
// input[372]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * 120)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r12,#(128)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r0,#(464)]
vadd.s32 Q3, Q3, Q4
// Release input[448] from Q4
vstrw.u32 Q3, [r12,#(-224)]
// input[152]: Already loaded as Q5
// input[372]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[152] from Q5
vmul.u32 Q2, Q0, r7
// input[704]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -52)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[372] from Q7
// input[408]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * -96)]
vadd.s32 Q6, Q2, Q1
// input[628]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * 124)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r14,#(-400)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r14,#(480)]
vadd.s32 Q3, Q3, Q4
// Release input[704] from Q4
vstrw.u32 Q3, [r11,#(-208)]
// input[408]: Already loaded as Q5
// input[628]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[408] from Q5
vmul.u32 Q2, Q0, r7
// input[32]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 32)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[628] from Q7
// input[664]: Load as Q5
vldrw.u32 Q5, [r11, #(4 * -92)]
vadd.s32 Q6, Q2, Q1
// input[244]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * -8)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r12,#(-384)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r12,#(496)]
vadd.s32 Q3, Q3, Q4
// Release input[32] from Q4
vstrw.u32 Q3, [r0,#(128)]
// input[664]: Already loaded as Q5
// input[244]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[664] from Q5
vmul.u32 Q2, Q0, r7
// input[288]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 36)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[244] from Q7
// input[88]: Load as Q5
vldrw.u32 Q5, [r0, #(4 * 88)]
vadd.s32 Q6, Q2, Q1
// input[500]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * -4)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r11,#(-368)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r14,#(-32)]
vadd.s32 Q3, Q3, Q4
// Release input[288] from Q4
vstrw.u32 Q3, [r14,#(144)]
// input[88]: Already loaded as Q5
// input[500]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[88] from Q5
vmul.u32 Q2, Q0, r7
// input[544]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 40)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[500] from Q7
// input[344]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * 92)]
vadd.s32 Q6, Q2, Q1
// input[756]: Load as Q7
vldrw.u32 Q7, [r11, #(4 * 0)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r0,#(352)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r12,#(-16)]
vadd.s32 Q3, Q3, Q4
// Release input[544] from Q4
vstrw.u32 Q3, [r12,#(160)]
// input[344]: Already loaded as Q5
// input[756]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[344] from Q5
vmul.u32 Q2, Q0, r7
// input[160]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -92)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[756] from Q7
// input[600]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * 96)]
vadd.s32 Q6, Q2, Q1
// input[12]: Load as Q7
vldrw.u32 Q7, [r0, #(4 * 12)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r14,#(368)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r11,#(0)]
vadd.s32 Q3, Q3, Q4
// Release input[160] from Q4
vstrw.u32 Q3, [r14,#(-368)]
// input[600]: Already loaded as Q5
// input[12]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[600] from Q5
vmul.u32 Q2, Q0, r7
// input[416]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -88)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[12] from Q7
// input[216]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * -36)]
vadd.s32 Q6, Q2, Q1
// input[268]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * 16)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r12,#(384)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r0,#(48)]
vadd.s32 Q3, Q3, Q4
// Release input[416] from Q4
vstrw.u32 Q3, [r12,#(-352)]
// input[216]: Already loaded as Q5
// input[268]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[216] from Q5
vmul.u32 Q2, Q0, r7
// input[672]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -84)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[268] from Q7
// input[472]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * -32)]
vadd.s32 Q6, Q2, Q1
// input[524]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * 20)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r14,#(-144)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r14,#(64)]
vadd.s32 Q3, Q3, Q4
// Release input[672] from Q4
vstrw.u32 Q3, [r11,#(-336)]
// input[472]: Already loaded as Q5
// input[524]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[472] from Q5
vmul.u32 Q2, Q0, r7
// input[96]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 96)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[524] from Q7
// input[728]: Load as Q5
vldrw.u32 Q5, [r11, #(4 * -28)]
vadd.s32 Q6, Q2, Q1
// input[140]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * -112)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r12,#(-128)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r12,#(80)]
vadd.s32 Q3, Q3, Q4
// Release input[96] from Q4
vstrw.u32 Q3, [r0,#(384)]
// input[728]: Already loaded as Q5
// input[140]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[728] from Q5
vmul.u32 Q2, Q0, r7
// input[352]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 100)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[140] from Q7
// input[56]: Load as Q5
vldrw.u32 Q5, [r0, #(4 * 56)]
vadd.s32 Q6, Q2, Q1
// input[396]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * -108)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r11,#(-112)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r14,#(-448)]
vadd.s32 Q3, Q3, Q4
// Release input[352] from Q4
vstrw.u32 Q3, [r14,#(400)]
// input[56]: Already loaded as Q5
// input[396]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[56] from Q5
vmul.u32 Q2, Q0, r7
// input[608]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 104)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[396] from Q7
// input[312]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * 60)]
vadd.s32 Q6, Q2, Q1
// input[652]: Load as Q7
vldrw.u32 Q7, [r11, #(4 * -104)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r0,#(224)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r12,#(-432)]
vadd.s32 Q3, Q3, Q4
// Release input[608] from Q4
vstrw.u32 Q3, [r12,#(416)]
// input[312]: Already loaded as Q5
// input[652]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[312] from Q5
vmul.u32 Q2, Q0, r7
// input[224]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -28)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[652] from Q7
// input[568]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * 64)]
vadd.s32 Q6, Q2, Q1
// input[76]: Load as Q7
vldrw.u32 Q7, [r0, #(4 * 76)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r14,#(240)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r11,#(-416)]
vadd.s32 Q3, Q3, Q4
// Release input[224] from Q4
vstrw.u32 Q3, [r14,#(-112)]
// input[568]: Already loaded as Q5
// input[76]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[568] from Q5
vmul.u32 Q2, Q0, r7
// input[480]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -24)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[76] from Q7
// input[184]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * -68)]
vadd.s32 Q6, Q2, Q1
// input[332]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * 80)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r12,#(256)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r0,#(304)]
vadd.s32 Q3, Q3, Q4
// Release input[480] from Q4
vstrw.u32 Q3, [r12,#(-96)]
// input[184]: Already loaded as Q5
// input[332]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[184] from Q5
vmul.u32 Q2, Q0, r7
// input[736]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -20)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[332] from Q7
// input[440]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * -64)]
vadd.s32 Q6, Q2, Q1
// input[588]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * 84)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r14,#(-272)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r14,#(320)]
vadd.s32 Q3, Q3, Q4
// Release input[736] from Q4
vstrw.u32 Q3, [r11,#(-80)]
// input[440]: Already loaded as Q5
// input[588]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[440] from Q5
vmul.u32 Q2, Q0, r7
// input[16]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 16)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[588] from Q7
// input[696]: Load as Q5
vldrw.u32 Q5, [r11, #(4 * -60)]
vadd.s32 Q6, Q2, Q1
// input[204]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * -48)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r12,#(-256)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r12,#(336)]
vadd.s32 Q3, Q3, Q4
// Release input[16] from Q4
vstrw.u32 Q3, [r0,#(64)]
// input[696]: Already loaded as Q5
// input[204]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[696] from Q5
vmul.u32 Q2, Q0, r7
// input[272]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 20)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[204] from Q7
// input[120]: Load as Q5
vldrw.u32 Q5, [r0, #(4 * 120)]
vadd.s32 Q6, Q2, Q1
// input[460]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * -44)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r11,#(-240)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r14,#(-192)]
vadd.s32 Q3, Q3, Q4
// Release input[272] from Q4
vstrw.u32 Q3, [r14,#(80)]
// input[120]: Already loaded as Q5
// input[460]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[120] from Q5
vmul.u32 Q2, Q0, r7
// input[528]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 24)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[460] from Q7
// input[376]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * 124)]
vadd.s32 Q6, Q2, Q1
// input[716]: Load as Q7
vldrw.u32 Q7, [r11, #(4 * -40)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r0,#(480)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r12,#(-176)]
vadd.s32 Q3, Q3, Q4
// Release input[528] from Q4
vstrw.u32 Q3, [r12,#(96)]
// input[376]: Already loaded as Q5
// input[716]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[376] from Q5
vmul.u32 Q2, Q0, r7
// input[144]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -108)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[716] from Q7
// input[632]: Load as Q5
vldrw.u32 Q5, [r11, #(4 * -124)]
vadd.s32 Q6, Q2, Q1
// input[44]: Load as Q7
vldrw.u32 Q7, [r0, #(4 * 44)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r14,#(496)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r11,#(-160)]
vadd.s32 Q3, Q3, Q4
// Release input[144] from Q4
vstrw.u32 Q3, [r14,#(-432)]
// input[632]: Already loaded as Q5
// input[44]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[632] from Q5
vmul.u32 Q2, Q0, r7
// input[400]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -104)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[44] from Q7
// input[248]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * -4)]
vadd.s32 Q6, Q2, Q1
// input[300]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * 48)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r11,#(-496)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r0,#(176)]
vadd.s32 Q3, Q3, Q4
// Release input[400] from Q4
vstrw.u32 Q3, [r12,#(-416)]
// input[248]: Already loaded as Q5
// input[300]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[248] from Q5
vmul.u32 Q2, Q0, r7
// input[656]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -100)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[300] from Q7
// input[504]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * 0)]
vadd.s32 Q6, Q2, Q1
// input[556]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * 52)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r14,#(-16)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r14,#(192)]
vadd.s32 Q3, Q3, Q4
// Release input[656] from Q4
vstrw.u32 Q3, [r11,#(-400)]
// input[504]: Already loaded as Q5
// input[556]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[504] from Q5
vmul.u32 Q2, Q0, r7
// input[80]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 80)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[556] from Q7
// input[760]: Load as Q5
vldrw.u32 Q5, [r11, #(4 * 4)]
vadd.s32 Q6, Q2, Q1
// input[172]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * -80)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r12,#(0)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r12,#(208)]
vadd.s32 Q3, Q3, Q4
// Release input[80] from Q4
vstrw.u32 Q3, [r0,#(320)]
// input[760]: Already loaded as Q5
// input[172]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[760] from Q5
vmul.u32 Q2, Q0, r7
// input[336]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 84)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[172] from Q7
// input[4]: Load as Q5
vldrw.u32 Q5, [r0, #(4 * 4)]
vadd.s32 Q6, Q2, Q1
// input[428]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * -76)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r11,#(16)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r14,#(-320)]
vadd.s32 Q3, Q3, Q4
// Release input[336] from Q4
vstrw.u32 Q3, [r14,#(336)]
// input[4]: Already loaded as Q5
// input[428]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[4] from Q5
vmul.u32 Q2, Q0, r7
// input[592]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 88)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[428] from Q7
// input[260]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * 8)]
vadd.s32 Q6, Q2, Q1
// input[684]: Load as Q7
vldrw.u32 Q7, [r11, #(4 * -72)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r0,#(16)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r12,#(-304)]
vadd.s32 Q3, Q3, Q4
// Release input[592] from Q4
vstrw.u32 Q3, [r12,#(352)]
// input[260]: Already loaded as Q5
// input[684]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[260] from Q5
vmul.u32 Q2, Q0, r7
// input[208]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -44)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[684] from Q7
// input[516]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * 12)]
vadd.s32 Q6, Q2, Q1
// input[108]: Load as Q7
vldrw.u32 Q7, [r0, #(4 * 108)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r14,#(32)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r11,#(-288)]
vadd.s32 Q3, Q3, Q4
// Release input[208] from Q4
vstrw.u32 Q3, [r14,#(-176)]
// input[516]: Already loaded as Q5
// input[108]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[516] from Q5
vmul.u32 Q2, Q0, r7
// input[464]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -40)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[108] from Q7
// input[132]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * -120)]
vadd.s32 Q6, Q2, Q1
// input[364]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * 112)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r12,#(48)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r0,#(432)]
vadd.s32 Q3, Q3, Q4
// Release input[464] from Q4
vstrw.u32 Q3, [r12,#(-160)]
// input[132]: Already loaded as Q5
// input[364]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[132] from Q5
vmul.u32 Q2, Q0, r7
// input[720]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -36)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[364] from Q7
// input[388]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * -116)]
vadd.s32 Q6, Q2, Q1
// input[620]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * 116)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r14,#(-480)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r14,#(448)]
vadd.s32 Q3, Q3, Q4
// Release input[720] from Q4
vstrw.u32 Q3, [r11,#(-144)]
// input[388]: Already loaded as Q5
// input[620]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[388] from Q5
vmul.u32 Q2, Q0, r7
// input[48]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 48)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[620] from Q7
// input[644]: Load as Q5
vldrw.u32 Q5, [r11, #(4 * -112)]
vadd.s32 Q6, Q2, Q1
// input[236]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * -16)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r12,#(-464)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r12,#(464)]
vadd.s32 Q3, Q3, Q4
// Release input[48] from Q4
vstrw.u32 Q3, [r0,#(192)]
// input[644]: Already loaded as Q5
// input[236]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[644] from Q5
vmul.u32 Q2, Q0, r7
// input[304]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 52)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[236] from Q7
// input[68]: Load as Q5
vldrw.u32 Q5, [r0, #(4 * 68)]
vadd.s32 Q6, Q2, Q1
// input[492]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * -12)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r11,#(-448)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r14,#(-64)]
vadd.s32 Q3, Q3, Q4
// Release input[304] from Q4
vstrw.u32 Q3, [r14,#(208)]
// input[68]: Already loaded as Q5
// input[492]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[68] from Q5
vmul.u32 Q2, Q0, r7
// input[560]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 56)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[492] from Q7
// input[324]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * 72)]
vadd.s32 Q6, Q2, Q1
// input[748]: Load as Q7
vldrw.u32 Q7, [r11, #(4 * -8)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r0,#(272)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r12,#(-48)]
vadd.s32 Q3, Q3, Q4
// Release input[560] from Q4
vstrw.u32 Q3, [r12,#(224)]
// input[324]: Already loaded as Q5
// input[748]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[324] from Q5
vmul.u32 Q2, Q0, r7
// input[176]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -76)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[748] from Q7
// input[580]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * 76)]
vadd.s32 Q6, Q2, Q1
// input[28]: Load as Q7
vldrw.u32 Q7, [r0, #(4 * 28)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r14,#(288)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r11,#(-32)]
vadd.s32 Q3, Q3, Q4
// Release input[176] from Q4
vstrw.u32 Q3, [r14,#(-304)]
// input[580]: Already loaded as Q5
// input[28]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[580] from Q5
vmul.u32 Q2, Q0, r7
// input[432]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -72)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[28] from Q7
// input[196]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * -56)]
vadd.s32 Q6, Q2, Q1
// input[284]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * 32)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r12,#(304)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r0,#(112)]
vadd.s32 Q3, Q3, Q4
// Release input[432] from Q4
vstrw.u32 Q3, [r12,#(-288)]
// input[196]: Already loaded as Q5
// input[284]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[196] from Q5
vmul.u32 Q2, Q0, r7
// input[688]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -68)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[284] from Q7
// input[452]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * -52)]
vadd.s32 Q6, Q2, Q1
// input[540]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * 36)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r14,#(-224)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r14,#(128)]
vadd.s32 Q3, Q3, Q4
// Release input[688] from Q4
vstrw.u32 Q3, [r11,#(-272)]
// input[452]: Already loaded as Q5
// input[540]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[452] from Q5
vmul.u32 Q2, Q0, r7
// input[112]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 112)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[540] from Q7
// input[708]: Load as Q5
vldrw.u32 Q5, [r11, #(4 * -48)]
vadd.s32 Q6, Q2, Q1
// input[156]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * -96)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r12,#(-208)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r12,#(144)]
vadd.s32 Q3, Q3, Q4
// Release input[112] from Q4
vstrw.u32 Q3, [r0,#(448)]
// input[708]: Already loaded as Q5
// input[156]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[708] from Q5
vmul.u32 Q2, Q0, r7
// input[368]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 116)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[156] from Q7
// input[36]: Load as Q5
vldrw.u32 Q5, [r0, #(4 * 36)]
vadd.s32 Q6, Q2, Q1
// input[412]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * -92)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r11,#(-192)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r14,#(-384)]
vadd.s32 Q3, Q3, Q4
// Release input[368] from Q4
vstrw.u32 Q3, [r14,#(464)]
// input[36]: Already loaded as Q5
// input[412]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[36] from Q5
vmul.u32 Q2, Q0, r7
// input[624]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 120)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[412] from Q7
// input[292]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * 40)]
vadd.s32 Q6, Q2, Q1
// input[668]: Load as Q7
vldrw.u32 Q7, [r11, #(4 * -88)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r0,#(144)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r12,#(-368)]
vadd.s32 Q3, Q3, Q4
// Release input[624] from Q4
vstrw.u32 Q3, [r12,#(480)]
// input[292]: Already loaded as Q5
// input[668]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[292] from Q5
vmul.u32 Q2, Q0, r7
// input[240]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -12)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[668] from Q7
// input[548]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * 44)]
vadd.s32 Q6, Q2, Q1
// input[92]: Load as Q7
vldrw.u32 Q7, [r0, #(4 * 92)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r14,#(160)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r11,#(-352)]
vadd.s32 Q3, Q3, Q4
// Release input[240] from Q4
vstrw.u32 Q3, [r14,#(-48)]
// input[548]: Already loaded as Q5
// input[92]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[548] from Q5
vmul.u32 Q2, Q0, r7
// input[496]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -8)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[92] from Q7
// input[164]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * -88)]
vadd.s32 Q6, Q2, Q1
// input[348]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * 96)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r12,#(176)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r0,#(368)]
vadd.s32 Q3, Q3, Q4
// Release input[496] from Q4
vstrw.u32 Q3, [r12,#(-32)]
// input[164]: Already loaded as Q5
// input[348]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[164] from Q5
vmul.u32 Q2, Q0, r7
// input[752]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -4)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[348] from Q7
// input[420]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * -84)]
vadd.s32 Q6, Q2, Q1
// input[604]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * 100)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r14,#(-352)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r14,#(384)]
vadd.s32 Q3, Q3, Q4
// Release input[752] from Q4
vstrw.u32 Q3, [r11,#(-16)]
// input[420]: Already loaded as Q5
// input[604]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[420] from Q5
vmul.u32 Q2, Q0, r7
// input[8]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 8)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[604] from Q7
// input[676]: Load as Q5
vldrw.u32 Q5, [r11, #(4 * -80)]
vadd.s32 Q6, Q2, Q1
// input[220]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * -32)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r12,#(-336)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r12,#(400)]
vadd.s32 Q3, Q3, Q4
// Release input[8] from Q4
vstrw.u32 Q3, [r0,#(32)]
// input[676]: Already loaded as Q5
// input[220]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[676] from Q5
vmul.u32 Q2, Q0, r7
// input[264]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 12)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[220] from Q7
// input[100]: Load as Q5
vldrw.u32 Q5, [r0, #(4 * 100)]
vadd.s32 Q6, Q2, Q1
// input[476]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * -28)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r11,#(-320)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r14,#(-128)]
vadd.s32 Q3, Q3, Q4
// Release input[264] from Q4
vstrw.u32 Q3, [r14,#(48)]
// input[100]: Already loaded as Q5
// input[476]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[100] from Q5
vmul.u32 Q2, Q0, r7
// input[520]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 16)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[476] from Q7
// input[356]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * 104)]
vadd.s32 Q6, Q2, Q1
// input[732]: Load as Q7
vldrw.u32 Q7, [r11, #(4 * -24)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r0,#(400)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r12,#(-112)]
vadd.s32 Q3, Q3, Q4
// Release input[520] from Q4
vstrw.u32 Q3, [r12,#(64)]
// input[356]: Already loaded as Q5
// input[732]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[356] from Q5
vmul.u32 Q2, Q0, r7
// input[136]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -116)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[732] from Q7
// input[612]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * 108)]
vadd.s32 Q6, Q2, Q1
// input[60]: Load as Q7
vldrw.u32 Q7, [r0, #(4 * 60)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r14,#(416)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r11,#(-96)]
vadd.s32 Q3, Q3, Q4
// Release input[136] from Q4
vstrw.u32 Q3, [r14,#(-464)]
// input[612]: Already loaded as Q5
// input[60]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[612] from Q5
vmul.u32 Q2, Q0, r7
// input[392]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -112)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[60] from Q7
// input[228]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * -24)]
vadd.s32 Q6, Q2, Q1
// input[316]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * 64)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r12,#(432)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r0,#(240)]
vadd.s32 Q3, Q3, Q4
// Release input[392] from Q4
vstrw.u32 Q3, [r12,#(-448)]
// input[228]: Already loaded as Q5
// input[316]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[228] from Q5
vmul.u32 Q2, Q0, r7
// input[648]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -108)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[316] from Q7
// input[484]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * -20)]
vadd.s32 Q6, Q2, Q1
// input[572]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * 68)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r14,#(-96)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r14,#(256)]
vadd.s32 Q3, Q3, Q4
// Release input[648] from Q4
vstrw.u32 Q3, [r11,#(-432)]
// input[484]: Already loaded as Q5
// input[572]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[484] from Q5
vmul.u32 Q2, Q0, r7
// input[72]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 72)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[572] from Q7
// input[740]: Load as Q5
vldrw.u32 Q5, [r11, #(4 * -16)]
vadd.s32 Q6, Q2, Q1
// input[188]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * -64)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r12,#(-80)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r12,#(272)]
vadd.s32 Q3, Q3, Q4
// Release input[72] from Q4
vstrw.u32 Q3, [r0,#(288)]
// input[740]: Already loaded as Q5
// input[188]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[740] from Q5
vmul.u32 Q2, Q0, r7
// input[328]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 76)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[188] from Q7
// input[20]: Load as Q5
vldrw.u32 Q5, [r0, #(4 * 20)]
vadd.s32 Q6, Q2, Q1
// input[444]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * -60)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r11,#(-64)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r14,#(-256)]
vadd.s32 Q3, Q3, Q4
// Release input[328] from Q4
vstrw.u32 Q3, [r14,#(304)]
// input[20]: Already loaded as Q5
// input[444]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[20] from Q5
vmul.u32 Q2, Q0, r7
// input[584]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 80)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[444] from Q7
// input[276]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * 24)]
vadd.s32 Q6, Q2, Q1
// input[700]: Load as Q7
vldrw.u32 Q7, [r11, #(4 * -56)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r0,#(80)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r12,#(-240)]
vadd.s32 Q3, Q3, Q4
// Release input[584] from Q4
vstrw.u32 Q3, [r12,#(320)]
// input[276]: Already loaded as Q5
// input[700]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[276] from Q5
vmul.u32 Q2, Q0, r7
// input[200]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -52)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[700] from Q7
// input[532]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * 28)]
vadd.s32 Q6, Q2, Q1
// input[124]: Load as Q7
vldrw.u32 Q7, [r0, #(4 * 124)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r14,#(96)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r11,#(-224)]
vadd.s32 Q3, Q3, Q4
// Release input[200] from Q4
vstrw.u32 Q3, [r14,#(-208)]
// input[532]: Already loaded as Q5
// input[124]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[532] from Q5
vmul.u32 Q2, Q0, r7
// input[456]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -48)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[124] from Q7
// input[148]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * -104)]
vadd.s32 Q6, Q2, Q1
// input[380]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * -124)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r12,#(112)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r0,#(496)]
vadd.s32 Q3, Q3, Q4
// Release input[456] from Q4
vstrw.u32 Q3, [r12,#(-192)]
// input[148]: Already loaded as Q5
// input[380]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[148] from Q5
vmul.u32 Q2, Q0, r7
// input[712]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -44)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[380] from Q7
// input[404]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * -100)]
vadd.s32 Q6, Q2, Q1
// input[636]: Load as Q7
vldrw.u32 Q7, [r11, #(4 * -120)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r14,#(-416)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r12,#(-496)]
vadd.s32 Q3, Q3, Q4
// Release input[712] from Q4
vstrw.u32 Q3, [r11,#(-176)]
// input[404]: Already loaded as Q5
// input[636]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[404] from Q5
vmul.u32 Q2, Q0, r7
// input[40]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 40)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[636] from Q7
// input[660]: Load as Q5
vldrw.u32 Q5, [r11, #(4 * -96)]
vadd.s32 Q6, Q2, Q1
// input[252]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * 0)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r12,#(-400)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r11,#(-480)]
vadd.s32 Q3, Q3, Q4
// Release input[40] from Q4
vstrw.u32 Q3, [r0,#(160)]
// input[660]: Already loaded as Q5
// input[252]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[660] from Q5
vmul.u32 Q2, Q0, r7
// input[296]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 44)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[252] from Q7
// input[84]: Load as Q5
vldrw.u32 Q5, [r0, #(4 * 84)]
vadd.s32 Q6, Q2, Q1
// input[508]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * 4)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r11,#(-384)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r14,#(0)]
vadd.s32 Q3, Q3, Q4
// Release input[296] from Q4
vstrw.u32 Q3, [r14,#(176)]
// input[84]: Already loaded as Q5
// input[508]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[84] from Q5
vmul.u32 Q2, Q0, r7
// input[552]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 48)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[508] from Q7
// input[340]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * 88)]
vadd.s32 Q6, Q2, Q1
// input[764]: Load as Q7
vldrw.u32 Q7, [r11, #(4 * 8)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r0,#(336)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r12,#(16)]
vadd.s32 Q3, Q3, Q4
// Release input[552] from Q4
vstrw.u32 Q3, [r12,#(192)]
// input[340]: Already loaded as Q5
// input[764]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[340] from Q5
vmul.u32 Q2, Q0, r7
// input[168]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -84)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[764] from Q7
vadd.s32 Q5, Q2, Q1
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q5, [r14,#(352)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r11,#(32)]
vadd.s32 Q3, Q3, Q4
// Release input[168] from Q4
vstrw.u32 Q3, [r14,#(-336)]
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[8]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 8)]
vqrdmulh.s32 Q1, Q0, r8
// input[592]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 88)]
vmul.u32 Q0, Q0, r7
// input[416]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -88)]
vqrdmlah.s32 Q1, Q0, r10
vqrdmulh.s32 Q4, Q2, r8
vsub.s32 Q0, Q3, Q1
vmul.u32 Q2, Q2, r7
vadd.s32 Q3, Q3, Q1
vqrdmlah.s32 Q4, Q2, r10
// input[0]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 0)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q2, Q1, Q4
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q4
vqrdmlah.s32 Q5, Q0, r10
// input[264]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 12)]
vqrdmulh.s32 Q6, Q3, r6
vsub.s32 Q0, Q2, Q5
vmul.u32 Q3, Q3, r5
vadd.s32 Q2, Q2, Q5
vstrw.u32 Q0, [r0,#(32)]
// Release input[8] from Q0
vqrdmlah.s32 Q6, Q3, r10
vstrw.u32 Q2, [r12,#(352)]
// Release input[592] from Q2
vsub.s32 Q3, Q1, Q6
vstrw.u32 Q3, [r12,#(-352)]
// Release input[416] from Q3
vadd.s32 Q1, Q1, Q6
// input[264]: Already loaded as Q4
vqrdmulh.s32 Q0, Q4, r8
// input[208]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -44)]
vmul.u32 Q4, Q4, r7
// input[672]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -84)]
vqrdmlah.s32 Q0, Q4, r10
vstrw.u32 Q1, [r0,#(0)]
// Release input[0] from Q1
vqrdmulh.s32 Q1, Q2, r8
vsub.s32 Q4, Q3, Q0
vmul.u32 Q2, Q2, r7
vadd.s32 Q3, Q3, Q0
vqrdmlah.s32 Q1, Q2, r10
// input[256]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 4)]
vqrdmulh.s32 Q5, Q4, r4
vsub.s32 Q2, Q0, Q1
vmul.u32 Q4, Q4, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q4, r10
// input[520]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 16)]
vqrdmulh.s32 Q6, Q3, r6
vsub.s32 Q4, Q2, Q5
vmul.u32 Q3, Q3, r5
vadd.s32 Q2, Q2, Q5
vstrw.u32 Q4, [r14,#(48)]
// Release input[264] from Q4
vqrdmlah.s32 Q6, Q3, r10
vstrw.u32 Q2, [r14,#(-176)]
// Release input[208] from Q2
vsub.s32 Q3, Q0, Q6
vstrw.u32 Q3, [r11,#(-336)]
// Release input[672] from Q3
vadd.s32 Q0, Q0, Q6
// input[520]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[464]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -40)]
vmul.u32 Q1, Q1, r7
// input[96]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 96)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r14,#(16)]
// Release input[256] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[512]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 8)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[136]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -116)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(64)]
// Release input[520] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-160)]
// Release input[464] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(384)]
// Release input[96] from Q4
vadd.s32 Q2, Q2, Q6
// input[136]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[720]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -36)]
vmul.u32 Q0, Q0, r7
// input[352]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 100)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(32)]
// Release input[512] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[128]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -124)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[392]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -112)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-464)]
// Release input[136] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r11,#(-144)]
// Release input[720] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(400)]
// Release input[352] from Q4
vadd.s32 Q1, Q1, Q6
// input[392]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[48]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 48)]
vmul.u32 Q2, Q2, r7
// input[608]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 104)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r14,#(-496)]
// Release input[128] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[384]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -120)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[648]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -108)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(-448)]
// Release input[392] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(192)]
// Release input[48] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(416)]
// Release input[608] from Q4
vadd.s32 Q0, Q0, Q6
// input[648]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[304]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 52)]
vmul.u32 Q1, Q1, r7
// input[224]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -28)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r12,#(-480)]
// Release input[384] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[640]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -116)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[72]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 72)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-432)]
// Release input[648] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(208)]
// Release input[304] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-112)]
// Release input[224] from Q4
vadd.s32 Q2, Q2, Q6
// input[72]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[560]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 56)]
vmul.u32 Q0, Q0, r7
// input[480]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -24)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r11,#(-464)]
// Release input[640] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[64]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 64)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[328]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 76)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r0,#(288)]
// Release input[72] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(224)]
// Release input[560] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(-96)]
// Release input[480] from Q4
vadd.s32 Q1, Q1, Q6
// input[328]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[176]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -76)]
vmul.u32 Q2, Q2, r7
// input[736]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -20)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r0,#(256)]
// Release input[64] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[320]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 68)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[584]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 80)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(304)]
// Release input[328] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(-304)]
// Release input[176] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-80)]
// Release input[736] from Q4
vadd.s32 Q0, Q0, Q6
// input[584]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[432]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -72)]
vmul.u32 Q1, Q1, r7
// input[16]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 16)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r14,#(272)]
// Release input[320] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[576]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 72)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[200]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -52)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(320)]
// Release input[584] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-288)]
// Release input[432] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(64)]
// Release input[16] from Q4
vadd.s32 Q2, Q2, Q6
// input[200]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[688]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -68)]
vmul.u32 Q0, Q0, r7
// input[272]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 20)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(288)]
// Release input[576] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[192]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -60)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[456]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -48)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-208)]
// Release input[200] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r11,#(-272)]
// Release input[688] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(80)]
// Release input[272] from Q4
vadd.s32 Q1, Q1, Q6
// input[456]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[112]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 112)]
vmul.u32 Q2, Q2, r7
// input[528]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 24)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r14,#(-240)]
// Release input[192] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[448]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -56)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[712]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -44)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(-192)]
// Release input[456] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(448)]
// Release input[112] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(96)]
// Release input[528] from Q4
vadd.s32 Q0, Q0, Q6
// input[712]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[368]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 116)]
vmul.u32 Q1, Q1, r7
// input[144]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -108)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r12,#(-224)]
// Release input[448] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[704]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -52)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[40]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 40)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-176)]
// Release input[712] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(464)]
// Release input[368] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-432)]
// Release input[144] from Q4
vadd.s32 Q2, Q2, Q6
// input[40]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[624]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 120)]
vmul.u32 Q0, Q0, r7
// input[400]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -104)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r11,#(-208)]
// Release input[704] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[32]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 32)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[296]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 44)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r0,#(160)]
// Release input[40] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(480)]
// Release input[624] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(-416)]
// Release input[400] from Q4
vadd.s32 Q1, Q1, Q6
// input[296]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[240]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -12)]
vmul.u32 Q2, Q2, r7
// input[656]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -100)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r0,#(128)]
// Release input[32] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[288]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 36)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[552]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 48)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(176)]
// Release input[296] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(-48)]
// Release input[240] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-400)]
// Release input[656] from Q4
vadd.s32 Q0, Q0, Q6
// input[552]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[496]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -8)]
vmul.u32 Q1, Q1, r7
// input[80]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 80)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r14,#(144)]
// Release input[288] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[544]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 40)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[168]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -84)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(192)]
// Release input[552] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-32)]
// Release input[496] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(320)]
// Release input[80] from Q4
vadd.s32 Q2, Q2, Q6
// input[168]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[752]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -4)]
vmul.u32 Q0, Q0, r7
// input[336]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 84)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(160)]
// Release input[544] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[160]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -92)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[420]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -84)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-336)]
// Release input[168] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r11,#(-16)]
// Release input[752] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(336)]
// Release input[336] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[420]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[4]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 4)]
vmul.u32 Q2, Q2, r7
// input[600]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 96)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r14,#(-368)]
// Release input[160] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[424]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -80)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[676]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -80)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(-336)]
// Release input[420] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(16)]
// Release input[4] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(384)]
// Release input[600] from Q4
vadd.s32 Q0, Q0, Q6
// input[676]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[260]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 8)]
vmul.u32 Q1, Q1, r7
// input[216]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -36)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r12,#(-320)]
// Release input[424] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[680]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -76)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[100]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 100)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-320)]
// Release input[676] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(32)]
// Release input[260] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-144)]
// Release input[216] from Q4
vadd.s32 Q2, Q2, Q6
// input[100]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[516]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 12)]
vmul.u32 Q0, Q0, r7
// input[472]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -32)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r11,#(-304)]
// Release input[680] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[104]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 104)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[356]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 104)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r0,#(400)]
// Release input[100] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(48)]
// Release input[516] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(-128)]
// Release input[472] from Q4
vadd.s32 Q1, Q1, Q6
// input[356]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[132]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -120)]
vmul.u32 Q2, Q2, r7
// input[728]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -28)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r0,#(416)]
// Release input[104] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[360]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 108)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[612]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 108)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(416)]
// Release input[356] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(-480)]
// Release input[132] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-112)]
// Release input[728] from Q4
vadd.s32 Q0, Q0, Q6
// input[612]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[388]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -116)]
vmul.u32 Q1, Q1, r7
// input[56]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 56)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r14,#(432)]
// Release input[360] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[616]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 112)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[228]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -24)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(432)]
// Release input[612] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-464)]
// Release input[388] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(224)]
// Release input[56] from Q4
vadd.s32 Q2, Q2, Q6
// input[228]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[644]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -112)]
vmul.u32 Q0, Q0, r7
// input[312]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 60)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(448)]
// Release input[616] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[232]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -20)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[484]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -20)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-96)]
// Release input[228] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r11,#(-448)]
// Release input[644] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(240)]
// Release input[312] from Q4
vadd.s32 Q1, Q1, Q6
// input[484]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[68]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 68)]
vmul.u32 Q2, Q2, r7
// input[568]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 64)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r14,#(-80)]
// Release input[232] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[488]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -16)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[740]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -16)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(-80)]
// Release input[484] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(272)]
// Release input[68] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(256)]
// Release input[568] from Q4
vadd.s32 Q0, Q0, Q6
// input[740]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[324]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 72)]
vmul.u32 Q1, Q1, r7
// input[184]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -68)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r12,#(-64)]
// Release input[488] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[744]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -12)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[20]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 20)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-64)]
// Release input[740] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(288)]
// Release input[324] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-272)]
// Release input[184] from Q4
vadd.s32 Q2, Q2, Q6
// input[20]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[580]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 76)]
vmul.u32 Q0, Q0, r7
// input[440]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -64)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r11,#(-48)]
// Release input[744] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[24]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 24)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[276]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 24)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r0,#(80)]
// Release input[20] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(304)]
// Release input[580] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(-256)]
// Release input[440] from Q4
vadd.s32 Q1, Q1, Q6
// input[276]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[196]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -56)]
vmul.u32 Q2, Q2, r7
// input[696]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -60)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r0,#(96)]
// Release input[24] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[280]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 28)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[532]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 28)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(96)]
// Release input[276] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(-224)]
// Release input[196] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-240)]
// Release input[696] from Q4
vadd.s32 Q0, Q0, Q6
// input[532]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[452]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -52)]
vmul.u32 Q1, Q1, r7
// input[120]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 120)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r14,#(112)]
// Release input[280] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[536]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 32)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[148]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -104)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(112)]
// Release input[532] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-208)]
// Release input[452] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(480)]
// Release input[120] from Q4
vadd.s32 Q2, Q2, Q6
// input[148]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[708]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -48)]
vmul.u32 Q0, Q0, r7
// input[376]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 124)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(128)]
// Release input[536] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[152]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -100)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[404]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -100)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-416)]
// Release input[148] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r11,#(-192)]
// Release input[708] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(496)]
// Release input[376] from Q4
vadd.s32 Q1, Q1, Q6
// input[404]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[36]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 36)]
vmul.u32 Q2, Q2, r7
// input[632]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -124)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r14,#(-400)]
// Release input[152] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[408]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -96)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[660]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -96)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(-400)]
// Release input[404] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(144)]
// Release input[36] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-496)]
// Release input[632] from Q4
vadd.s32 Q0, Q0, Q6
// input[660]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[292]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 40)]
vmul.u32 Q1, Q1, r7
// input[248]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -4)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r12,#(-384)]
// Release input[408] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[664]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -92)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[84]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 84)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-384)]
// Release input[660] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(160)]
// Release input[292] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-16)]
// Release input[248] from Q4
vadd.s32 Q2, Q2, Q6
// input[84]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[548]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 44)]
vmul.u32 Q0, Q0, r7
// input[504]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 0)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r11,#(-368)]
// Release input[664] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[88]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 88)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[340]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 88)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r0,#(336)]
// Release input[84] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(176)]
// Release input[548] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(0)]
// Release input[504] from Q4
vadd.s32 Q1, Q1, Q6
// input[340]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[164]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -88)]
vmul.u32 Q2, Q2, r7
// input[760]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * 4)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r0,#(352)]
// Release input[88] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[344]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 92)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[604]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 100)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(352)]
// Release input[340] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(-352)]
// Release input[164] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(16)]
// Release input[760] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[604]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[428]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -76)]
vmul.u32 Q1, Q1, r7
// input[12]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 12)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r14,#(368)]
// Release input[344] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[596]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 92)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[220]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -32)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(400)]
// Release input[604] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-304)]
// Release input[428] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(48)]
// Release input[12] from Q4
vadd.s32 Q2, Q2, Q6
// input[220]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[684]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -72)]
vmul.u32 Q0, Q0, r7
// input[268]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 16)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(368)]
// Release input[596] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[212]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -40)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[476]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -28)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-128)]
// Release input[220] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r11,#(-288)]
// Release input[684] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(64)]
// Release input[268] from Q4
vadd.s32 Q1, Q1, Q6
// input[476]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[108]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 108)]
vmul.u32 Q2, Q2, r7
// input[524]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 20)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r14,#(-160)]
// Release input[212] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[468]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -36)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[732]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -24)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(-112)]
// Release input[476] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(432)]
// Release input[108] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(80)]
// Release input[524] from Q4
vadd.s32 Q0, Q0, Q6
// input[732]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[364]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 112)]
vmul.u32 Q1, Q1, r7
// input[140]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -112)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r12,#(-144)]
// Release input[468] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[724]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -32)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[60]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 60)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-96)]
// Release input[732] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(448)]
// Release input[364] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-448)]
// Release input[140] from Q4
vadd.s32 Q2, Q2, Q6
// input[60]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[620]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 116)]
vmul.u32 Q0, Q0, r7
// input[396]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -108)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r11,#(-128)]
// Release input[724] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[52]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 52)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[316]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 64)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r0,#(240)]
// Release input[60] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(464)]
// Release input[620] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(-432)]
// Release input[396] from Q4
vadd.s32 Q1, Q1, Q6
// input[316]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[236]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -16)]
vmul.u32 Q2, Q2, r7
// input[652]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -104)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r0,#(208)]
// Release input[52] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[308]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 56)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[572]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 68)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(256)]
// Release input[316] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(-64)]
// Release input[236] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-416)]
// Release input[652] from Q4
vadd.s32 Q0, Q0, Q6
// input[572]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[492]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -12)]
vmul.u32 Q1, Q1, r7
// input[76]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 76)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r14,#(224)]
// Release input[308] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[564]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 60)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[188]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -64)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(272)]
// Release input[572] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-48)]
// Release input[492] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(304)]
// Release input[76] from Q4
vadd.s32 Q2, Q2, Q6
// input[188]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[748]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -8)]
vmul.u32 Q0, Q0, r7
// input[332]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 80)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(240)]
// Release input[564] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[180]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -72)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[444]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -60)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-256)]
// Release input[188] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r11,#(-32)]
// Release input[748] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(320)]
// Release input[332] from Q4
vadd.s32 Q1, Q1, Q6
// input[444]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[28]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 28)]
vmul.u32 Q2, Q2, r7
// input[588]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 84)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r14,#(-288)]
// Release input[180] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[436]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -68)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[700]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -56)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(-240)]
// Release input[444] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(112)]
// Release input[28] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(336)]
// Release input[588] from Q4
vadd.s32 Q0, Q0, Q6
// input[700]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[284]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 32)]
vmul.u32 Q1, Q1, r7
// input[204]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -48)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r12,#(-272)]
// Release input[436] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[692]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -64)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[124]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 124)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-224)]
// Release input[700] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(128)]
// Release input[284] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-192)]
// Release input[204] from Q4
vadd.s32 Q2, Q2, Q6
// input[124]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[540]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 36)]
vmul.u32 Q0, Q0, r7
// input[460]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -44)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r11,#(-256)]
// Release input[692] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[116]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 116)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[380]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -124)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r0,#(496)]
// Release input[124] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(144)]
// Release input[540] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(-176)]
// Release input[460] from Q4
vadd.s32 Q1, Q1, Q6
// input[380]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[156]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -96)]
vmul.u32 Q2, Q2, r7
// input[716]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -40)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r0,#(464)]
// Release input[116] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[372]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 120)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[636]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -120)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(-496)]
// Release input[380] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(-384)]
// Release input[156] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-160)]
// Release input[716] from Q4
vadd.s32 Q0, Q0, Q6
// input[636]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[412]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -92)]
vmul.u32 Q1, Q1, r7
// input[44]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 44)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r14,#(480)]
// Release input[372] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[628]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 124)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[252]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 0)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-480)]
// Release input[636] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-368)]
// Release input[412] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(176)]
// Release input[44] from Q4
vadd.s32 Q2, Q2, Q6
// input[252]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[668]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -88)]
vmul.u32 Q0, Q0, r7
// input[300]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 48)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(496)]
// Release input[628] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[244]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -8)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[508]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 4)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(0)]
// Release input[252] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r11,#(-352)]
// Release input[668] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(192)]
// Release input[300] from Q4
vadd.s32 Q1, Q1, Q6
// input[508]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[92]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 92)]
vmul.u32 Q2, Q2, r7
// input[556]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 52)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r14,#(-32)]
// Release input[244] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[500]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -4)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[764]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * 8)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(16)]
// Release input[508] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(368)]
// Release input[92] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(208)]
// Release input[556] from Q4
vadd.s32 Q0, Q0, Q6
// input[764]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[348]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 96)]
vmul.u32 Q1, Q1, r7
// input[172]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -80)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r12,#(-16)]
// Release input[500] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[756]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * 0)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[32]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 32)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(32)]
// Release input[764] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(384)]
// Release input[348] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-320)]
// Release input[172] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[32]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[576]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 72)]
vmul.u32 Q0, Q0, r7
// input[384]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -120)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r11,#(0)]
// Release input[756] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[0]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 0)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[288]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 36)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r0,#(128)]
// Release input[32] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(288)]
// Release input[576] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(-480)]
// Release input[384] from Q4
vadd.s32 Q1, Q1, Q6
// input[288]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[192]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -60)]
vmul.u32 Q2, Q2, r7
// input[640]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -116)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r0,#(0)]
// Release input[0] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[256]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 4)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[544]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 40)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(144)]
// Release input[288] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(-240)]
// Release input[192] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-464)]
// Release input[640] from Q4
vadd.s32 Q0, Q0, Q6
// input[544]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[448]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -56)]
vmul.u32 Q1, Q1, r7
// input[64]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 64)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r14,#(16)]
// Release input[256] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[512]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 8)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[160]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -92)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(160)]
// Release input[544] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-224)]
// Release input[448] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(256)]
// Release input[64] from Q4
vadd.s32 Q2, Q2, Q6
// input[160]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[704]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -52)]
vmul.u32 Q0, Q0, r7
// input[320]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 68)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(32)]
// Release input[512] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[128]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -124)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[400]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -104)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-368)]
// Release input[160] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r11,#(-208)]
// Release input[704] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(272)]
// Release input[320] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[400]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[16]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 16)]
vmul.u32 Q2, Q2, r7
// input[608]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 104)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r14,#(-496)]
// Release input[128] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[416]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -88)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[656]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -100)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(-416)]
// Release input[400] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(64)]
// Release input[16] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(416)]
// Release input[608] from Q4
vadd.s32 Q0, Q0, Q6
// input[656]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[272]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 20)]
vmul.u32 Q1, Q1, r7
// input[224]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -28)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r12,#(-352)]
// Release input[416] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[672]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -84)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[80]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 80)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-400)]
// Release input[656] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(80)]
// Release input[272] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-112)]
// Release input[224] from Q4
vadd.s32 Q2, Q2, Q6
// input[80]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[528]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 24)]
vmul.u32 Q0, Q0, r7
// input[480]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -24)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r11,#(-336)]
// Release input[672] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[96]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 96)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[336]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 84)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r0,#(320)]
// Release input[80] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(96)]
// Release input[528] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(-96)]
// Release input[480] from Q4
vadd.s32 Q1, Q1, Q6
// input[336]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[144]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -108)]
vmul.u32 Q2, Q2, r7
// input[736]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -20)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r0,#(384)]
// Release input[96] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[352]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 100)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[624]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 120)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(336)]
// Release input[336] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(-432)]
// Release input[144] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-80)]
// Release input[736] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[624]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[432]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -72)]
vmul.u32 Q1, Q1, r7
// input[48]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 48)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r14,#(400)]
// Release input[352] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[592]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 88)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[240]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -12)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(480)]
// Release input[624] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-288)]
// Release input[432] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(192)]
// Release input[48] from Q4
vadd.s32 Q2, Q2, Q6
// input[240]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[688]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -68)]
vmul.u32 Q0, Q0, r7
// input[304]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 52)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(352)]
// Release input[592] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[208]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -44)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[496]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -8)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-48)]
// Release input[240] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r11,#(-272)]
// Release input[688] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(208)]
// Release input[304] from Q4
vadd.s32 Q1, Q1, Q6
// input[496]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[112]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 112)]
vmul.u32 Q2, Q2, r7
// input[560]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 56)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r14,#(-176)]
// Release input[208] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[464]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -40)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[752]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -4)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(-32)]
// Release input[496] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(448)]
// Release input[112] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(224)]
// Release input[560] from Q4
vadd.s32 Q0, Q0, Q6
// input[752]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[368]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 116)]
vmul.u32 Q1, Q1, r7
// input[176]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -76)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r12,#(-160)]
// Release input[464] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[720]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -36)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[40]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 40)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-16)]
// Release input[752] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(464)]
// Release input[368] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-304)]
// Release input[176] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[40]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[584]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 80)]
vmul.u32 Q0, Q0, r7
// input[392]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -112)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r11,#(-144)]
// Release input[720] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[8]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 8)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[296]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 44)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r0,#(160)]
// Release input[40] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(320)]
// Release input[584] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(-448)]
// Release input[392] from Q4
vadd.s32 Q1, Q1, Q6
// input[296]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[200]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -52)]
vmul.u32 Q2, Q2, r7
// input[648]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -108)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r0,#(32)]
// Release input[8] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[264]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 12)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[552]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 48)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(176)]
// Release input[296] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(-208)]
// Release input[200] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-432)]
// Release input[648] from Q4
vadd.s32 Q0, Q0, Q6
// input[552]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[456]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -48)]
vmul.u32 Q1, Q1, r7
// input[72]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 72)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r14,#(48)]
// Release input[264] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[520]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 16)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[168]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -84)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(192)]
// Release input[552] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-192)]
// Release input[456] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(288)]
// Release input[72] from Q4
vadd.s32 Q2, Q2, Q6
// input[168]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[712]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -44)]
vmul.u32 Q0, Q0, r7
// input[328]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 76)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(64)]
// Release input[520] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[136]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -116)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[408]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -96)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-336)]
// Release input[168] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r11,#(-176)]
// Release input[712] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(304)]
// Release input[328] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[408]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[24]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 24)]
vmul.u32 Q2, Q2, r7
// input[616]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 112)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r14,#(-464)]
// Release input[136] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[424]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -80)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[664]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -92)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(-384)]
// Release input[408] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(96)]
// Release input[24] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(448)]
// Release input[616] from Q4
vadd.s32 Q0, Q0, Q6
// input[664]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[280]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 28)]
vmul.u32 Q1, Q1, r7
// input[232]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -20)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r12,#(-320)]
// Release input[424] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[680]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -76)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[88]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 88)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-368)]
// Release input[664] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(112)]
// Release input[280] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-80)]
// Release input[232] from Q4
vadd.s32 Q2, Q2, Q6
// input[88]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[536]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 32)]
vmul.u32 Q0, Q0, r7
// input[488]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -16)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r11,#(-304)]
// Release input[680] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[104]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 104)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[344]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 92)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r0,#(352)]
// Release input[88] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(128)]
// Release input[536] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(-64)]
// Release input[488] from Q4
vadd.s32 Q1, Q1, Q6
// input[344]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[152]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -100)]
vmul.u32 Q2, Q2, r7
// input[744]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -12)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r0,#(416)]
// Release input[104] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[360]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 108)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[632]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -124)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(368)]
// Release input[344] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(-400)]
// Release input[152] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-48)]
// Release input[744] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[632]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[440]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -64)]
vmul.u32 Q1, Q1, r7
// input[56]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 56)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r14,#(432)]
// Release input[360] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[600]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 96)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[248]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -4)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-496)]
// Release input[632] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-256)]
// Release input[440] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(224)]
// Release input[56] from Q4
vadd.s32 Q2, Q2, Q6
// input[248]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[696]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -60)]
vmul.u32 Q0, Q0, r7
// input[312]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 60)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(384)]
// Release input[600] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[216]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -36)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[504]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 0)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-16)]
// Release input[248] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r11,#(-240)]
// Release input[696] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(240)]
// Release input[312] from Q4
vadd.s32 Q1, Q1, Q6
// input[504]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[120]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 120)]
vmul.u32 Q2, Q2, r7
// input[568]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 64)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r14,#(-144)]
// Release input[216] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[472]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -32)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[760]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * 4)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(0)]
// Release input[504] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(480)]
// Release input[120] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(256)]
// Release input[568] from Q4
vadd.s32 Q0, Q0, Q6
// input[760]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[376]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 124)]
vmul.u32 Q1, Q1, r7
// input[184]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -68)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r12,#(-128)]
// Release input[472] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[728]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -28)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[36]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 36)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(16)]
// Release input[760] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(496)]
// Release input[376] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-272)]
// Release input[184] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[36]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[580]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 76)]
vmul.u32 Q0, Q0, r7
// input[388]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -116)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r11,#(-112)]
// Release input[728] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[4]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 4)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[292]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 40)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r0,#(144)]
// Release input[36] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(304)]
// Release input[580] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(-464)]
// Release input[388] from Q4
vadd.s32 Q1, Q1, Q6
// input[292]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[196]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -56)]
vmul.u32 Q2, Q2, r7
// input[644]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -112)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r0,#(16)]
// Release input[4] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[260]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 8)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[548]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 44)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(160)]
// Release input[292] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(-224)]
// Release input[196] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-448)]
// Release input[644] from Q4
vadd.s32 Q0, Q0, Q6
// input[548]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[452]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -52)]
vmul.u32 Q1, Q1, r7
// input[68]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 68)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r14,#(32)]
// Release input[260] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[516]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 12)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[164]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -88)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(176)]
// Release input[548] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-208)]
// Release input[452] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(272)]
// Release input[68] from Q4
vadd.s32 Q2, Q2, Q6
// input[164]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[708]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -48)]
vmul.u32 Q0, Q0, r7
// input[324]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 72)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(48)]
// Release input[516] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[132]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -120)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[404]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -100)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-352)]
// Release input[164] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r11,#(-192)]
// Release input[708] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(288)]
// Release input[324] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[404]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[20]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 20)]
vmul.u32 Q2, Q2, r7
// input[612]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 108)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r14,#(-480)]
// Release input[132] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[420]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -84)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[660]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -96)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(-400)]
// Release input[404] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(80)]
// Release input[20] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(432)]
// Release input[612] from Q4
vadd.s32 Q0, Q0, Q6
// input[660]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[276]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 24)]
vmul.u32 Q1, Q1, r7
// input[228]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -24)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r12,#(-336)]
// Release input[420] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[676]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -80)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[84]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 84)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-384)]
// Release input[660] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(96)]
// Release input[276] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-96)]
// Release input[228] from Q4
vadd.s32 Q2, Q2, Q6
// input[84]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[532]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 28)]
vmul.u32 Q0, Q0, r7
// input[484]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -20)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r11,#(-320)]
// Release input[676] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[100]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 100)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[340]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 88)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r0,#(336)]
// Release input[84] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(112)]
// Release input[532] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(-80)]
// Release input[484] from Q4
vadd.s32 Q1, Q1, Q6
// input[340]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[148]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -104)]
vmul.u32 Q2, Q2, r7
// input[740]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -16)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r0,#(400)]
// Release input[100] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[356]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 104)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[628]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 124)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(352)]
// Release input[340] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(-416)]
// Release input[148] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-64)]
// Release input[740] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[628]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[436]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -68)]
vmul.u32 Q1, Q1, r7
// input[52]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 52)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r14,#(416)]
// Release input[356] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[596]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 92)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[244]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -8)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(496)]
// Release input[628] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-272)]
// Release input[436] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(208)]
// Release input[52] from Q4
vadd.s32 Q2, Q2, Q6
// input[244]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[692]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -64)]
vmul.u32 Q0, Q0, r7
// input[308]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 56)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(368)]
// Release input[596] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[212]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -40)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[500]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -4)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-32)]
// Release input[244] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r11,#(-256)]
// Release input[692] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(224)]
// Release input[308] from Q4
vadd.s32 Q1, Q1, Q6
// input[500]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[116]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 116)]
vmul.u32 Q2, Q2, r7
// input[564]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 60)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r14,#(-160)]
// Release input[212] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[468]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -36)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[756]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * 0)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(-16)]
// Release input[500] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(464)]
// Release input[116] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(240)]
// Release input[564] from Q4
vadd.s32 Q0, Q0, Q6
// input[756]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[372]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 120)]
vmul.u32 Q1, Q1, r7
// input[180]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -72)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r12,#(-144)]
// Release input[468] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[724]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -32)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[44]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 44)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(0)]
// Release input[756] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(480)]
// Release input[372] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-288)]
// Release input[180] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[44]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[588]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 84)]
vmul.u32 Q0, Q0, r7
// input[396]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -108)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r11,#(-128)]
// Release input[724] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[12]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 12)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[300]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 48)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r0,#(176)]
// Release input[44] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(336)]
// Release input[588] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(-432)]
// Release input[396] from Q4
vadd.s32 Q1, Q1, Q6
// input[300]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[204]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -48)]
vmul.u32 Q2, Q2, r7
// input[652]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -104)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r0,#(48)]
// Release input[12] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[268]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 16)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[556]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 52)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(192)]
// Release input[300] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(-192)]
// Release input[204] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-416)]
// Release input[652] from Q4
vadd.s32 Q0, Q0, Q6
// input[556]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[460]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -44)]
vmul.u32 Q1, Q1, r7
// input[76]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 76)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r14,#(64)]
// Release input[268] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[524]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 20)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[172]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -80)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(208)]
// Release input[556] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-176)]
// Release input[460] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(304)]
// Release input[76] from Q4
vadd.s32 Q2, Q2, Q6
// input[172]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[716]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -40)]
vmul.u32 Q0, Q0, r7
// input[332]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 80)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(80)]
// Release input[524] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[140]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -112)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[412]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -92)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-320)]
// Release input[172] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r11,#(-160)]
// Release input[716] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(320)]
// Release input[332] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[412]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[28]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 28)]
vmul.u32 Q2, Q2, r7
// input[620]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 116)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r14,#(-448)]
// Release input[140] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[428]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -76)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[668]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -88)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(-368)]
// Release input[412] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(112)]
// Release input[28] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(464)]
// Release input[620] from Q4
vadd.s32 Q0, Q0, Q6
// input[668]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[284]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 32)]
vmul.u32 Q1, Q1, r7
// input[236]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -16)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r12,#(-304)]
// Release input[428] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[684]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -72)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[92]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 92)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-352)]
// Release input[668] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(128)]
// Release input[284] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-64)]
// Release input[236] from Q4
vadd.s32 Q2, Q2, Q6
// input[92]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[540]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 36)]
vmul.u32 Q0, Q0, r7
// input[492]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -12)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r11,#(-288)]
// Release input[684] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[108]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 108)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[348]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 96)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r0,#(368)]
// Release input[92] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(144)]
// Release input[540] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(-48)]
// Release input[492] from Q4
vadd.s32 Q1, Q1, Q6
// input[348]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[156]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -96)]
vmul.u32 Q2, Q2, r7
// input[748]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -8)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r0,#(432)]
// Release input[108] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[364]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 112)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[636]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -120)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(384)]
// Release input[348] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(-384)]
// Release input[156] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-32)]
// Release input[748] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[636]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[444]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -60)]
vmul.u32 Q1, Q1, r7
// input[60]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 60)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r14,#(448)]
// Release input[364] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[604]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 100)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[252]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 0)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-480)]
// Release input[636] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-240)]
// Release input[444] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(240)]
// Release input[60] from Q4
vadd.s32 Q2, Q2, Q6
// input[252]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[700]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -56)]
vmul.u32 Q0, Q0, r7
// input[316]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 64)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(400)]
// Release input[604] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[220]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -32)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[508]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 4)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(0)]
// Release input[252] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r11,#(-224)]
// Release input[700] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(256)]
// Release input[316] from Q4
vadd.s32 Q1, Q1, Q6
// input[508]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[124]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 124)]
vmul.u32 Q2, Q2, r7
// input[572]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 68)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r14,#(-128)]
// Release input[220] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[476]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -28)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[764]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * 8)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(16)]
// Release input[508] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(496)]
// Release input[124] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(272)]
// Release input[572] from Q4
vadd.s32 Q0, Q0, Q6
// input[764]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[380]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -124)]
vmul.u32 Q1, Q1, r7
// input[188]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -64)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r12,#(-112)]
// Release input[476] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[732]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -24)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[128]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -124)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(32)]
// Release input[764] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-496)]
// Release input[380] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-256)]
// Release input[188] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[128]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[512]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 8)]
vmul.u32 Q0, Q0, r7
// input[256]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 4)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r11,#(-96)]
// Release input[732] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[0]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 0)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[320]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 68)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-496)]
// Release input[128] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(32)]
// Release input[512] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(16)]
// Release input[256] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[320]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[64]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 64)]
vmul.u32 Q2, Q2, r7
// input[640]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -116)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r0,#(0)]
// Release input[0] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[384]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -120)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[704]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -52)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(272)]
// Release input[320] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(256)]
// Release input[64] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-464)]
// Release input[640] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[704]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[448]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -56)]
vmul.u32 Q1, Q1, r7
// input[192]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -60)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r12,#(-480)]
// Release input[384] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[576]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 72)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[160]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -92)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-208)]
// Release input[704] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-224)]
// Release input[448] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-240)]
// Release input[192] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[160]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[544]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 40)]
vmul.u32 Q0, Q0, r7
// input[288]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 36)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(288)]
// Release input[576] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[32]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 32)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[352]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 100)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-368)]
// Release input[160] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(160)]
// Release input[544] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(144)]
// Release input[288] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[352]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[96]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 96)]
vmul.u32 Q2, Q2, r7
// input[672]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -84)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r0,#(128)]
// Release input[32] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[416]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -88)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[736]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -20)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(400)]
// Release input[352] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(384)]
// Release input[96] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-336)]
// Release input[672] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[736]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[480]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -24)]
vmul.u32 Q1, Q1, r7
// input[224]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -28)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r12,#(-352)]
// Release input[416] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[608]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 104)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[144]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -108)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-80)]
// Release input[736] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-96)]
// Release input[480] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-112)]
// Release input[224] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[144]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[528]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 24)]
vmul.u32 Q0, Q0, r7
// input[272]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 20)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(416)]
// Release input[608] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[16]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 16)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[336]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 84)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-432)]
// Release input[144] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(96)]
// Release input[528] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(80)]
// Release input[272] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[336]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[80]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 80)]
vmul.u32 Q2, Q2, r7
// input[656]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -100)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r0,#(64)]
// Release input[16] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[400]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -104)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[720]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -36)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(336)]
// Release input[336] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(320)]
// Release input[80] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-400)]
// Release input[656] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[720]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[464]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -40)]
vmul.u32 Q1, Q1, r7
// input[208]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -44)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r12,#(-416)]
// Release input[400] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[592]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 88)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[176]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -76)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-144)]
// Release input[720] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-160)]
// Release input[464] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-176)]
// Release input[208] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[176]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[560]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 56)]
vmul.u32 Q0, Q0, r7
// input[304]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 52)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(352)]
// Release input[592] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[48]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 48)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[368]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 116)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-304)]
// Release input[176] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(224)]
// Release input[560] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(208)]
// Release input[304] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[368]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[112]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 112)]
vmul.u32 Q2, Q2, r7
// input[688]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -68)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r0,#(192)]
// Release input[48] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[432]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -72)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[752]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -4)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(464)]
// Release input[368] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(448)]
// Release input[112] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-272)]
// Release input[688] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[752]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[496]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -8)]
vmul.u32 Q1, Q1, r7
// input[240]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -12)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r12,#(-288)]
// Release input[432] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[624]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 120)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[136]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -116)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-16)]
// Release input[752] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-32)]
// Release input[496] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-48)]
// Release input[240] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[136]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[520]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 16)]
vmul.u32 Q0, Q0, r7
// input[264]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 12)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(480)]
// Release input[624] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[8]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 8)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[328]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 76)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-464)]
// Release input[136] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(64)]
// Release input[520] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(48)]
// Release input[264] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[328]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[72]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 72)]
vmul.u32 Q2, Q2, r7
// input[648]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -108)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r0,#(32)]
// Release input[8] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[392]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -112)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[712]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -44)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(304)]
// Release input[328] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(288)]
// Release input[72] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-432)]
// Release input[648] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[712]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[456]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -48)]
vmul.u32 Q1, Q1, r7
// input[200]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -52)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r12,#(-448)]
// Release input[392] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[584]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 80)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[168]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -84)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-176)]
// Release input[712] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-192)]
// Release input[456] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-208)]
// Release input[200] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[168]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[552]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 48)]
vmul.u32 Q0, Q0, r7
// input[296]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 44)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(320)]
// Release input[584] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[40]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 40)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[360]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 108)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-336)]
// Release input[168] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(192)]
// Release input[552] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(176)]
// Release input[296] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[360]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[104]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 104)]
vmul.u32 Q2, Q2, r7
// input[680]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -76)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r0,#(160)]
// Release input[40] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[424]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -80)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[744]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -12)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(432)]
// Release input[360] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(416)]
// Release input[104] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-304)]
// Release input[680] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[744]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[488]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -16)]
vmul.u32 Q1, Q1, r7
// input[232]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -20)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r12,#(-320)]
// Release input[424] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[616]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 112)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[152]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -100)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-48)]
// Release input[744] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-64)]
// Release input[488] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-80)]
// Release input[232] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[152]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[536]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 32)]
vmul.u32 Q0, Q0, r7
// input[280]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 28)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(448)]
// Release input[616] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[24]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 24)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[344]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 92)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-400)]
// Release input[152] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(128)]
// Release input[536] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(112)]
// Release input[280] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[344]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[88]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 88)]
vmul.u32 Q2, Q2, r7
// input[664]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -92)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r0,#(96)]
// Release input[24] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[408]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -96)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[728]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -28)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(368)]
// Release input[344] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(352)]
// Release input[88] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-368)]
// Release input[664] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[728]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[472]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -32)]
vmul.u32 Q1, Q1, r7
// input[216]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -36)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r12,#(-384)]
// Release input[408] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[600]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 96)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[184]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -68)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-112)]
// Release input[728] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-128)]
// Release input[472] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-144)]
// Release input[216] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[184]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[568]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 64)]
vmul.u32 Q0, Q0, r7
// input[312]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 60)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(384)]
// Release input[600] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[56]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 56)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[376]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 124)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-272)]
// Release input[184] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(256)]
// Release input[568] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(240)]
// Release input[312] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[376]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[120]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 120)]
vmul.u32 Q2, Q2, r7
// input[696]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -60)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r0,#(224)]
// Release input[56] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[440]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -64)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[760]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * 4)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(496)]
// Release input[376] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(480)]
// Release input[120] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-240)]
// Release input[696] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[760]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[504]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 0)]
vmul.u32 Q1, Q1, r7
// input[248]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -4)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r12,#(-256)]
// Release input[440] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[632]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -124)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[132]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -120)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(16)]
// Release input[760] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(0)]
// Release input[504] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-16)]
// Release input[248] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[132]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[516]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 12)]
vmul.u32 Q0, Q0, r7
// input[260]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 8)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r11,#(-496)]
// Release input[632] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[4]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 4)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[324]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 72)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-480)]
// Release input[132] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(48)]
// Release input[516] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(32)]
// Release input[260] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[324]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[68]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 68)]
vmul.u32 Q2, Q2, r7
// input[644]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -112)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r0,#(16)]
// Release input[4] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[388]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -116)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[708]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -48)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(288)]
// Release input[324] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(272)]
// Release input[68] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-448)]
// Release input[644] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[708]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[452]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -52)]
vmul.u32 Q1, Q1, r7
// input[196]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -56)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r12,#(-464)]
// Release input[388] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[580]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 76)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[164]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -88)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-192)]
// Release input[708] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-208)]
// Release input[452] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-224)]
// Release input[196] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[164]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[548]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 44)]
vmul.u32 Q0, Q0, r7
// input[292]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 40)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(304)]
// Release input[580] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[36]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 36)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[356]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 104)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-352)]
// Release input[164] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(176)]
// Release input[548] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(160)]
// Release input[292] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[356]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[100]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 100)]
vmul.u32 Q2, Q2, r7
// input[676]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -80)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r0,#(144)]
// Release input[36] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[420]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -84)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[740]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -16)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(416)]
// Release input[356] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(400)]
// Release input[100] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-320)]
// Release input[676] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[740]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[484]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -20)]
vmul.u32 Q1, Q1, r7
// input[228]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -24)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r12,#(-336)]
// Release input[420] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[612]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 108)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[148]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -104)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-64)]
// Release input[740] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-80)]
// Release input[484] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-96)]
// Release input[228] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[148]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[532]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 28)]
vmul.u32 Q0, Q0, r7
// input[276]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 24)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(432)]
// Release input[612] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[20]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 20)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[340]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 88)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-416)]
// Release input[148] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(112)]
// Release input[532] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(96)]
// Release input[276] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[340]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[84]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 84)]
vmul.u32 Q2, Q2, r7
// input[660]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -96)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r0,#(80)]
// Release input[20] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[404]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -100)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[724]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -32)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(352)]
// Release input[340] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(336)]
// Release input[84] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-384)]
// Release input[660] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[724]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[468]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -36)]
vmul.u32 Q1, Q1, r7
// input[212]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -40)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r12,#(-400)]
// Release input[404] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[596]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 92)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[180]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -72)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-128)]
// Release input[724] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-144)]
// Release input[468] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-160)]
// Release input[212] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[180]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[564]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 60)]
vmul.u32 Q0, Q0, r7
// input[308]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 56)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(368)]
// Release input[596] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[52]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 52)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[372]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 120)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-288)]
// Release input[180] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(240)]
// Release input[564] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(224)]
// Release input[308] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[372]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[116]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 116)]
vmul.u32 Q2, Q2, r7
// input[692]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -64)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r0,#(208)]
// Release input[52] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[436]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -68)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[756]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * 0)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(480)]
// Release input[372] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(464)]
// Release input[116] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-256)]
// Release input[692] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[756]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[500]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -4)]
vmul.u32 Q1, Q1, r7
// input[244]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -8)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r12,#(-272)]
// Release input[436] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[628]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 124)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[140]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -112)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(0)]
// Release input[756] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-16)]
// Release input[500] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-32)]
// Release input[244] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[140]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[524]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 20)]
vmul.u32 Q0, Q0, r7
// input[268]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 16)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(496)]
// Release input[628] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[12]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 12)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[332]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 80)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-448)]
// Release input[140] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(80)]
// Release input[524] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(64)]
// Release input[268] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[332]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[76]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 76)]
vmul.u32 Q2, Q2, r7
// input[652]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -104)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r0,#(48)]
// Release input[12] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[396]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -108)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[716]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -40)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(320)]
// Release input[332] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(304)]
// Release input[76] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-416)]
// Release input[652] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[716]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[460]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -44)]
vmul.u32 Q1, Q1, r7
// input[204]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -48)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r12,#(-432)]
// Release input[396] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[588]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 84)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[172]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -80)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-160)]
// Release input[716] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-176)]
// Release input[460] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-192)]
// Release input[204] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[172]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[556]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 52)]
vmul.u32 Q0, Q0, r7
// input[300]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 48)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(336)]
// Release input[588] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[44]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 44)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[364]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 112)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-320)]
// Release input[172] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(208)]
// Release input[556] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(192)]
// Release input[300] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[364]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[108]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 108)]
vmul.u32 Q2, Q2, r7
// input[684]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -72)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r0,#(176)]
// Release input[44] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[428]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -76)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[748]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -8)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(448)]
// Release input[364] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(432)]
// Release input[108] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-288)]
// Release input[684] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[748]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[492]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -12)]
vmul.u32 Q1, Q1, r7
// input[236]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -16)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r12,#(-304)]
// Release input[428] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[620]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 116)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[156]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -96)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-32)]
// Release input[748] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-48)]
// Release input[492] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-64)]
// Release input[236] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[156]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[540]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 36)]
vmul.u32 Q0, Q0, r7
// input[284]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 32)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(464)]
// Release input[620] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[28]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 28)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[348]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 96)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-384)]
// Release input[156] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(144)]
// Release input[540] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(128)]
// Release input[284] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[348]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[92]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 92)]
vmul.u32 Q2, Q2, r7
// input[668]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -88)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r0,#(112)]
// Release input[28] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[412]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -92)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[732]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -24)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(384)]
// Release input[348] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(368)]
// Release input[92] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-352)]
// Release input[668] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[732]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[476]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -28)]
vmul.u32 Q1, Q1, r7
// input[220]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -32)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r12,#(-368)]
// Release input[412] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[604]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 100)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[188]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -64)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-96)]
// Release input[732] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-112)]
// Release input[476] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-128)]
// Release input[220] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[188]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[572]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 68)]
vmul.u32 Q0, Q0, r7
// input[316]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 64)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(400)]
// Release input[604] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[60]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 60)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[380]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -124)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-256)]
// Release input[188] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(272)]
// Release input[572] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(256)]
// Release input[316] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[380]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[124]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 124)]
vmul.u32 Q2, Q2, r7
// input[700]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -56)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r0,#(240)]
// Release input[60] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[444]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -60)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[764]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * 8)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(-496)]
// Release input[380] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(496)]
// Release input[124] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-224)]
// Release input[700] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[764]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[508]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 4)]
vmul.u32 Q1, Q1, r7
// input[252]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 0)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r12,#(-240)]
// Release input[444] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[636]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -120)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
vqrdmulh.s32 Q0, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(32)]
// Release input[764] from Q1
vqrdmlah.s32 Q0, Q4, r10
vstrw.u32 Q3, [r12,#(16)]
// Release input[508] from Q3
vsub.s32 Q4, Q2, Q0
vstrw.u32 Q4, [r14,#(0)]
// Release input[252] from Q4
vadd.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r11,#(-480)]
// Release input[636] from Q2
.equ modulus_inv, 3919317503
movw r8, #:lower16:modulus_inv
movt r8, #:upper16:modulus_inv
// Restore MVE vector registers
vpop {d8-d15}
// Restore GPRs
pop {r4-r11,lr}
bx lr

// Line count:        7467
// Instruction count: 5655