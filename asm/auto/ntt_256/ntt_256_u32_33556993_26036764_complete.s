
///
/// Copyright (c) 2021 Arm Limited
/// SPDX-License-Identifier: MIT
///
/// Permission is hereby granted, free of charge, to any person obtaining a copy
/// of this software and associated documentation files (the "Software"), to deal
/// in the Software without restriction, including without limitation the rights
/// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
/// copies of the Software, and to permit persons to whom the Software is
/// furnished to do so, subject to the following conditions:
///
/// The above copyright notice and this permission notice shall be included in all
/// copies or substantial portions of the Software.
///
/// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
/// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
/// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
/// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
/// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
/// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
/// SOFTWARE.
///



///
/// This assembly code has been auto-generated.
/// Don't modify it directly.
///

.data
roots:
.word   33393089 // zeta^  0 * 2^31 = 26036764^  0 * 2^31 = 1 * 2^31
.word 2147483711 // zeta^  0 * f(q^(-1) mod 2^32) * 2^31 = 26036764^  0 * 375649793 * 2^31
.word   33393089 // zeta^  0 * 2^31 = 26036764^  0 * 2^31 = 1 * 2^31
.word 2147483711 // zeta^  0 * f(q^(-1) mod 2^32) * 2^31 = 26036764^  0 * 375649793 * 2^31
.word   29095681 // zeta^ 64 * 2^31 = 26036764^ 64 * 2^31 = 17702291 * 2^31
.word 3280343807 // zeta^ 64 * f(q^(-1) mod 2^32) * 2^31 = 26036764^ 64 * 375649793 * 2^31
.word   33393089 // zeta^  0 * 2^31 = 26036764^  0 * 2^31 = 1 * 2^31
.word 2147483711 // zeta^  0 * f(q^(-1) mod 2^32) * 2^31 = 26036764^  0 * 375649793 * 2^31
.word   33393089 // zeta^  0 * 2^31 = 26036764^  0 * 2^31 = 1 * 2^31
.word 2147483711 // zeta^  0 * f(q^(-1) mod 2^32) * 2^31 = 26036764^  0 * 375649793 * 2^31
.word   29095681 // zeta^ 64 * 2^31 = 26036764^ 64 * 2^31 = 17702291 * 2^31
.word 3280343807 // zeta^ 64 * f(q^(-1) mod 2^32) * 2^31 = 26036764^ 64 * 375649793 * 2^31
.word   29095681 // zeta^ 64 * 2^31 = 26036764^ 64 * 2^31 = 17702291 * 2^31
.word 3280343807 // zeta^ 64 * f(q^(-1) mod 2^32) * 2^31 = 26036764^ 64 * 375649793 * 2^31
.word   14476917 // zeta^ 32 * 2^31 = 26036764^ 32 * 2^31 = 3260327 * 2^31
.word 2356128651 // zeta^ 32 * f(q^(-1) mod 2^32) * 2^31 = 26036764^ 32 * 375649793 * 2^31
.word   43317805 // zeta^ 96 * 2^31 = 26036764^ 96 * 2^31 = 14579576 * 2^31
.word  933021651 // zeta^ 96 * f(q^(-1) mod 2^32) * 2^31 = 26036764^ 96 * 375649793 * 2^31
.word   14476917 // zeta^ 32 * 2^31 = 26036764^ 32 * 2^31 = 3260327 * 2^31
.word 2356128651 // zeta^ 32 * f(q^(-1) mod 2^32) * 2^31 = 26036764^ 32 * 375649793 * 2^31
.word   18598075 // zeta^ 16 * 2^31 = 26036764^ 16 * 2^31 = 6733847 * 2^31
.word 2578416965 // zeta^ 16 * f(q^(-1) mod 2^32) * 2^31 = 26036764^ 16 * 375649793 * 2^31
.word    4885007 // zeta^ 80 * 2^31 = 26036764^ 80 * 2^31 = 12909577 * 2^31
.word 2973633521 // zeta^ 80 * f(q^(-1) mod 2^32) * 2^31 = 26036764^ 80 * 375649793 * 2^31
.word   43317805 // zeta^ 96 * 2^31 = 26036764^ 96 * 2^31 = 14579576 * 2^31
.word  933021651 // zeta^ 96 * f(q^(-1) mod 2^32) * 2^31 = 26036764^ 96 * 375649793 * 2^31
.word   64683161 // zeta^ 48 * 2^31 = 26036764^ 48 * 2^31 = 14745691 * 2^31
.word 3091135847 // zeta^ 48 * f(q^(-1) mod 2^32) * 2^31 = 26036764^ 48 * 375649793 * 2^31
.word   34427601 // zeta^112 * 2^31 = 26036764^112 * 2^31 = 13512548 * 2^31
.word  864737071 // zeta^112 * f(q^(-1) mod 2^32) * 2^31 = 26036764^112 * 375649793 * 2^31
.word   33393089 // zeta^  0 * 2^31 = 26036764^  0 * 2^31 = 1 * 2^31
.word 2147483711 // zeta^  0 * f(q^(-1) mod 2^32) * 2^31 = 26036764^  0 * 375649793 * 2^31
.word   33393089 // zeta^  0 * 2^31 = 26036764^  0 * 2^31 = 1 * 2^31
.word 2147483711 // zeta^  0 * f(q^(-1) mod 2^32) * 2^31 = 26036764^  0 * 375649793 * 2^31
.word   29095681 // zeta^ 64 * 2^31 = 26036764^ 64 * 2^31 = 17702291 * 2^31
.word 3280343807 // zeta^ 64 * f(q^(-1) mod 2^32) * 2^31 = 26036764^ 64 * 375649793 * 2^31
.word   29095681 // zeta^ 64 * 2^31 = 26036764^ 64 * 2^31 = 17702291 * 2^31
.word 3280343807 // zeta^ 64 * f(q^(-1) mod 2^32) * 2^31 = 26036764^ 64 * 375649793 * 2^31
.word   14476917 // zeta^ 32 * 2^31 = 26036764^ 32 * 2^31 = 3260327 * 2^31
.word 2356128651 // zeta^ 32 * f(q^(-1) mod 2^32) * 2^31 = 26036764^ 32 * 375649793 * 2^31
.word   43317805 // zeta^ 96 * 2^31 = 26036764^ 96 * 2^31 = 14579576 * 2^31
.word  933021651 // zeta^ 96 * f(q^(-1) mod 2^32) * 2^31 = 26036764^ 96 * 375649793 * 2^31
.word   14476917 // zeta^ 32 * 2^31 = 26036764^ 32 * 2^31 = 3260327 * 2^31
.word 2356128651 // zeta^ 32 * f(q^(-1) mod 2^32) * 2^31 = 26036764^ 32 * 375649793 * 2^31
.word   18598075 // zeta^ 16 * 2^31 = 26036764^ 16 * 2^31 = 6733847 * 2^31
.word 2578416965 // zeta^ 16 * f(q^(-1) mod 2^32) * 2^31 = 26036764^ 16 * 375649793 * 2^31
.word    4885007 // zeta^ 80 * 2^31 = 26036764^ 80 * 2^31 = 12909577 * 2^31
.word 2973633521 // zeta^ 80 * f(q^(-1) mod 2^32) * 2^31 = 26036764^ 80 * 375649793 * 2^31
.word   43317805 // zeta^ 96 * 2^31 = 26036764^ 96 * 2^31 = 14579576 * 2^31
.word  933021651 // zeta^ 96 * f(q^(-1) mod 2^32) * 2^31 = 26036764^ 96 * 375649793 * 2^31
.word   64683161 // zeta^ 48 * 2^31 = 26036764^ 48 * 2^31 = 14745691 * 2^31
.word 3091135847 // zeta^ 48 * f(q^(-1) mod 2^32) * 2^31 = 26036764^ 48 * 375649793 * 2^31
.word   34427601 // zeta^112 * 2^31 = 26036764^112 * 2^31 = 13512548 * 2^31
.word  864737071 // zeta^112 * f(q^(-1) mod 2^32) * 2^31 = 26036764^112 * 375649793 * 2^31
.word   18598075 // zeta^ 16 * 2^31 = 26036764^ 16 * 2^31 = 6733847 * 2^31
.word 2578416965 // zeta^ 16 * f(q^(-1) mod 2^32) * 2^31 = 26036764^ 16 * 375649793 * 2^31
.word   39999747 // zeta^  8 * 2^31 = 26036764^  8 * 2^31 = 20428075 * 2^31
.word 3454780669 // zeta^  8 * f(q^(-1) mod 2^32) * 2^31 = 26036764^  8 * 375649793 * 2^31
.word   45317587 // zeta^ 72 * 2^31 = 26036764^ 72 * 2^31 = 14626653 * 2^31
.word 3083517997 // zeta^ 72 * f(q^(-1) mod 2^32) * 2^31 = 26036764^ 72 * 375649793 * 2^31
.word    4885007 // zeta^ 80 * 2^31 = 26036764^ 80 * 2^31 = 12909577 * 2^31
.word 2973633521 // zeta^ 80 * f(q^(-1) mod 2^32) * 2^31 = 26036764^ 80 * 375649793 * 2^31
.word   48811299 // zeta^ 40 * 2^31 = 26036764^ 40 * 2^31 = 29737761 * 2^31
.word 4050555101 // zeta^ 40 * f(q^(-1) mod 2^32) * 2^31 = 26036764^ 40 * 375649793 * 2^31
.word   54571669 // zeta^104 * 2^31 = 26036764^104 * 2^31 = 30285189 * 2^31
.word 4085587819 // zeta^104 * f(q^(-1) mod 2^32) * 2^31 = 26036764^104 * 375649793 * 2^31
.word   64683161 // zeta^ 48 * 2^31 = 26036764^ 48 * 2^31 = 14745691 * 2^31
.word 3091135847 // zeta^ 48 * f(q^(-1) mod 2^32) * 2^31 = 26036764^ 48 * 375649793 * 2^31
.word   59281651 // zeta^ 24 * 2^31 = 26036764^ 24 * 2^31 = 21289485 * 2^31
.word 3509906701 // zeta^ 24 * f(q^(-1) mod 2^32) * 2^31 = 26036764^ 24 * 375649793 * 2^31
.word   40500013 // zeta^ 88 * 2^31 = 26036764^ 88 * 2^31 = 9914896 * 2^31
.word  634504915 // zeta^ 88 * f(q^(-1) mod 2^32) * 2^31 = 26036764^ 88 * 375649793 * 2^31
.word   34427601 // zeta^112 * 2^31 = 26036764^112 * 2^31 = 13512548 * 2^31
.word  864737071 // zeta^112 * f(q^(-1) mod 2^32) * 2^31 = 26036764^112 * 375649793 * 2^31
.word   25917637 // zeta^ 56 * 2^31 = 26036764^ 56 * 2^31 = 22603682 * 2^31
.word 1446525243 // zeta^ 56 * f(q^(-1) mod 2^32) * 2^31 = 26036764^ 56 * 375649793 * 2^31
.word    8356523 // zeta^120 * 2^31 = 26036764^120 * 2^31 = 16204162 * 2^31
.word 1036987221 // zeta^120 * f(q^(-1) mod 2^32) * 2^31 = 26036764^120 * 375649793 * 2^31
.word   39999747 // zeta^  8 * 2^31 = 26036764^  8 * 2^31 = 20428075 * 2^31
.word 3454780669 // zeta^  8 * f(q^(-1) mod 2^32) * 2^31 = 26036764^  8 * 375649793 * 2^31
.word   31719253 // zeta^  4 * 2^31 = 26036764^  4 * 2^31 = 23825509 * 2^31
.word 3672199851 // zeta^  4 * f(q^(-1) mod 2^32) * 2^31 = 26036764^  4 * 375649793 * 2^31
.word   54842419 // zeta^ 68 * 2^31 = 26036764^ 68 * 2^31 = 27028662 * 2^31
.word 1729702349 // zeta^ 68 * f(q^(-1) mod 2^32) * 2^31 = 26036764^ 68 * 375649793 * 2^31
.word   45317587 // zeta^ 72 * 2^31 = 26036764^ 72 * 2^31 = 14626653 * 2^31
.word 3083517997 // zeta^ 72 * f(q^(-1) mod 2^32) * 2^31 = 26036764^ 72 * 375649793 * 2^31
.word    1316163 // zeta^ 36 * 2^31 = 26036764^ 36 * 2^31 = 14833295 * 2^31
.word 3096742077 // zeta^ 36 * f(q^(-1) mod 2^32) * 2^31 = 26036764^ 36 * 375649793 * 2^31
.word   10391631 // zeta^100 * 2^31 = 26036764^100 * 2^31 = 2138810 * 2^31
.word  136873393 // zeta^100 * f(q^(-1) mod 2^32) * 2^31 = 26036764^100 * 375649793 * 2^31
.word   48811299 // zeta^ 40 * 2^31 = 26036764^ 40 * 2^31 = 29737761 * 2^31
.word 4050555101 // zeta^ 40 * f(q^(-1) mod 2^32) * 2^31 = 26036764^ 40 * 375649793 * 2^31
.word   54335767 // zeta^ 20 * 2^31 = 26036764^ 20 * 2^31 = 6490403 * 2^31
.word 2562837737 // zeta^ 20 * f(q^(-1) mod 2^32) * 2^31 = 26036764^ 20 * 375649793 * 2^31
.word   46002083 // zeta^ 84 * 2^31 = 26036764^ 84 * 2^31 = 19648405 * 2^31
.word 3404885597 // zeta^ 84 * f(q^(-1) mod 2^32) * 2^31 = 26036764^ 84 * 375649793 * 2^31
.word   54571669 // zeta^104 * 2^31 = 26036764^104 * 2^31 = 30285189 * 2^31
.word 4085587819 // zeta^104 * f(q^(-1) mod 2^32) * 2^31 = 26036764^104 * 375649793 * 2^31
.word   35733845 // zeta^ 52 * 2^31 = 26036764^ 52 * 2^31 = 31254932 * 2^31
.word 2000162987 // zeta^ 52 * f(q^(-1) mod 2^32) * 2^31 = 26036764^ 52 * 375649793 * 2^31
.word   61099389 // zeta^116 * 2^31 = 26036764^116 * 2^31 = 26362414 * 2^31
.word 1687065731 // zeta^116 * f(q^(-1) mod 2^32) * 2^31 = 26036764^116 * 375649793 * 2^31
.word   59281651 // zeta^ 24 * 2^31 = 26036764^ 24 * 2^31 = 21289485 * 2^31
.word 3509906701 // zeta^ 24 * f(q^(-1) mod 2^32) * 2^31 = 26036764^ 24 * 375649793 * 2^31
.word   26241327 // zeta^ 12 * 2^31 = 26036764^ 12 * 2^31 = 572895 * 2^31
.word 2184146129 // zeta^ 12 * f(q^(-1) mod 2^32) * 2^31 = 26036764^ 12 * 375649793 * 2^31
.word    5033605 // zeta^ 76 * 2^31 = 26036764^ 76 * 2^31 = 26691971 * 2^31
.word 3855639419 // zeta^ 76 * f(q^(-1) mod 2^32) * 2^31 = 26036764^ 76 * 375649793 * 2^31
.word   40500013 // zeta^ 88 * 2^31 = 26036764^ 88 * 2^31 = 9914896 * 2^31
.word  634504915 // zeta^ 88 * f(q^(-1) mod 2^32) * 2^31 = 26036764^ 88 * 375649793 * 2^31
.word    8316793 // zeta^ 44 * 2^31 = 26036764^ 44 * 2^31 = 9249292 * 2^31
.word  591909511 // zeta^ 44 * f(q^(-1) mod 2^32) * 2^31 = 26036764^ 44 * 375649793 * 2^31
.word   16634213 // zeta^108 * 2^31 = 26036764^108 * 2^31 = 29292862 * 2^31
.word 1874600091 // zeta^108 * f(q^(-1) mod 2^32) * 2^31 = 26036764^108 * 375649793 * 2^31
.word   25917637 // zeta^ 56 * 2^31 = 26036764^ 56 * 2^31 = 22603682 * 2^31
.word 1446525243 // zeta^ 56 * f(q^(-1) mod 2^32) * 2^31 = 26036764^ 56 * 375649793 * 2^31
.word   63329695 // zeta^ 28 * 2^31 = 26036764^ 28 * 2^31 = 8247799 * 2^31
.word 2675302497 // zeta^ 28 * f(q^(-1) mod 2^32) * 2^31 = 26036764^ 28 * 375649793 * 2^31
.word    9983051 // zeta^ 92 * 2^31 = 26036764^ 92 * 2^31 = 5086187 * 2^31
.word 2472974773 // zeta^ 92 * f(q^(-1) mod 2^32) * 2^31 = 26036764^ 92 * 375649793 * 2^31
.word    8356523 // zeta^120 * 2^31 = 26036764^120 * 2^31 = 16204162 * 2^31
.word 1036987221 // zeta^120 * f(q^(-1) mod 2^32) * 2^31 = 26036764^120 * 375649793 * 2^31
.word    7721125 // zeta^ 60 * 2^31 = 26036764^ 60 * 2^31 = 28113639 * 2^31
.word 3946619227 // zeta^ 60 * f(q^(-1) mod 2^32) * 2^31 = 26036764^ 60 * 375649793 * 2^31
.word    9383201 // zeta^124 * 2^31 = 26036764^124 * 2^31 = 8471290 * 2^31
.word  542121183 // zeta^124 * f(q^(-1) mod 2^32) * 2^31 = 26036764^124 * 375649793 * 2^31
.word   33393089 // zeta^  0 * 2^31 = 26036764^  0 * 2^31
.word   29095681 // zeta^ 64 * 2^31 = 26036764^ 64 * 2^31
.word   14476917 // zeta^ 32 * 2^31 = 26036764^ 32 * 2^31
.word   43317805 // zeta^ 96 * 2^31 = 26036764^ 96 * 2^31
.word 2147483711 // zeta^  0 * (q^(-1) mod 2^32) * 2^31 = 26036764^  0 * 375649793 * 2^31
.word 3280343807 // zeta^ 64 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 64 * 375649793 * 2^31
.word 2356128651 // zeta^ 32 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 32 * 375649793 * 2^31
.word  933021651 // zeta^ 96 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 96 * 375649793 * 2^31
.word   33393089 // zeta^  0 * 2^31 = 26036764^  0 * 2^31
.word   14476917 // zeta^ 32 * 2^31 = 26036764^ 32 * 2^31
.word   18598075 // zeta^ 16 * 2^31 = 26036764^ 16 * 2^31
.word   64683161 // zeta^ 48 * 2^31 = 26036764^ 48 * 2^31
.word 2147483711 // zeta^  0 * (q^(-1) mod 2^32) * 2^31 = 26036764^  0 * 375649793 * 2^31
.word 2356128651 // zeta^ 32 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 32 * 375649793 * 2^31
.word 2578416965 // zeta^ 16 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 16 * 375649793 * 2^31
.word 3091135847 // zeta^ 48 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 48 * 375649793 * 2^31
.word   29095681 // zeta^ 64 * 2^31 = 26036764^ 64 * 2^31
.word   43317805 // zeta^ 96 * 2^31 = 26036764^ 96 * 2^31
.word    4885007 // zeta^ 80 * 2^31 = 26036764^ 80 * 2^31
.word   34427601 // zeta^112 * 2^31 = 26036764^112 * 2^31
.word   18598075 // zeta^ 16 * 2^31 = 26036764^ 16 * 2^31
.word    4885007 // zeta^ 80 * 2^31 = 26036764^ 80 * 2^31
.word   64683161 // zeta^ 48 * 2^31 = 26036764^ 48 * 2^31
.word   34427601 // zeta^112 * 2^31 = 26036764^112 * 2^31
.word 2578416965 // zeta^ 16 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 16 * 375649793 * 2^31
.word 2973633521 // zeta^ 80 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 80 * 375649793 * 2^31
.word 3091135847 // zeta^ 48 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 48 * 375649793 * 2^31
.word  864737071 // zeta^112 * (q^(-1) mod 2^32) * 2^31 = 26036764^112 * 375649793 * 2^31
.word   39999747 // zeta^  8 * 2^31 = 26036764^  8 * 2^31
.word   48811299 // zeta^ 40 * 2^31 = 26036764^ 40 * 2^31
.word   59281651 // zeta^ 24 * 2^31 = 26036764^ 24 * 2^31
.word   25917637 // zeta^ 56 * 2^31 = 26036764^ 56 * 2^31
.word 3454780669 // zeta^  8 * (q^(-1) mod 2^32) * 2^31 = 26036764^  8 * 375649793 * 2^31
.word 4050555101 // zeta^ 40 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 40 * 375649793 * 2^31
.word 3509906701 // zeta^ 24 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 24 * 375649793 * 2^31
.word 1446525243 // zeta^ 56 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 56 * 375649793 * 2^31
.word   45317587 // zeta^ 72 * 2^31 = 26036764^ 72 * 2^31
.word   54571669 // zeta^104 * 2^31 = 26036764^104 * 2^31
.word   40500013 // zeta^ 88 * 2^31 = 26036764^ 88 * 2^31
.word    8356523 // zeta^120 * 2^31 = 26036764^120 * 2^31
.word   39999747 // zeta^  8 * 2^31 = 26036764^  8 * 2^31
.word   45317587 // zeta^ 72 * 2^31 = 26036764^ 72 * 2^31
.word   48811299 // zeta^ 40 * 2^31 = 26036764^ 40 * 2^31
.word   54571669 // zeta^104 * 2^31 = 26036764^104 * 2^31
.word 3454780669 // zeta^  8 * (q^(-1) mod 2^32) * 2^31 = 26036764^  8 * 375649793 * 2^31
.word 3083517997 // zeta^ 72 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 72 * 375649793 * 2^31
.word 4050555101 // zeta^ 40 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 40 * 375649793 * 2^31
.word 4085587819 // zeta^104 * (q^(-1) mod 2^32) * 2^31 = 26036764^104 * 375649793 * 2^31
.word   31719253 // zeta^  4 * 2^31 = 26036764^  4 * 2^31
.word    1316163 // zeta^ 36 * 2^31 = 26036764^ 36 * 2^31
.word   54335767 // zeta^ 20 * 2^31 = 26036764^ 20 * 2^31
.word   35733845 // zeta^ 52 * 2^31 = 26036764^ 52 * 2^31
.word 3672199851 // zeta^  4 * (q^(-1) mod 2^32) * 2^31 = 26036764^  4 * 375649793 * 2^31
.word 3096742077 // zeta^ 36 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 36 * 375649793 * 2^31
.word 2562837737 // zeta^ 20 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 20 * 375649793 * 2^31
.word 2000162987 // zeta^ 52 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 52 * 375649793 * 2^31
.word   54842419 // zeta^ 68 * 2^31 = 26036764^ 68 * 2^31
.word   10391631 // zeta^100 * 2^31 = 26036764^100 * 2^31
.word   46002083 // zeta^ 84 * 2^31 = 26036764^ 84 * 2^31
.word   61099389 // zeta^116 * 2^31 = 26036764^116 * 2^31
.word   59281651 // zeta^ 24 * 2^31 = 26036764^ 24 * 2^31
.word   40500013 // zeta^ 88 * 2^31 = 26036764^ 88 * 2^31
.word   25917637 // zeta^ 56 * 2^31 = 26036764^ 56 * 2^31
.word    8356523 // zeta^120 * 2^31 = 26036764^120 * 2^31
.word 3509906701 // zeta^ 24 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 24 * 375649793 * 2^31
.word  634504915 // zeta^ 88 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 88 * 375649793 * 2^31
.word 1446525243 // zeta^ 56 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 56 * 375649793 * 2^31
.word 1036987221 // zeta^120 * (q^(-1) mod 2^32) * 2^31 = 26036764^120 * 375649793 * 2^31
.word   26241327 // zeta^ 12 * 2^31 = 26036764^ 12 * 2^31
.word    8316793 // zeta^ 44 * 2^31 = 26036764^ 44 * 2^31
.word   63329695 // zeta^ 28 * 2^31 = 26036764^ 28 * 2^31
.word    7721125 // zeta^ 60 * 2^31 = 26036764^ 60 * 2^31
.word 2184146129 // zeta^ 12 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 12 * 375649793 * 2^31
.word  591909511 // zeta^ 44 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 44 * 375649793 * 2^31
.word 2675302497 // zeta^ 28 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 28 * 375649793 * 2^31
.word 3946619227 // zeta^ 60 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 60 * 375649793 * 2^31
.word    5033605 // zeta^ 76 * 2^31 = 26036764^ 76 * 2^31
.word   16634213 // zeta^108 * 2^31 = 26036764^108 * 2^31
.word    9983051 // zeta^ 92 * 2^31 = 26036764^ 92 * 2^31
.word    9383201 // zeta^124 * 2^31 = 26036764^124 * 2^31
.word   31719253 // zeta^  4 * 2^31 = 26036764^  4 * 2^31
.word   54842419 // zeta^ 68 * 2^31 = 26036764^ 68 * 2^31
.word    1316163 // zeta^ 36 * 2^31 = 26036764^ 36 * 2^31
.word   10391631 // zeta^100 * 2^31 = 26036764^100 * 2^31
.word 3672199851 // zeta^  4 * (q^(-1) mod 2^32) * 2^31 = 26036764^  4 * 375649793 * 2^31
.word 1729702349 // zeta^ 68 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 68 * 375649793 * 2^31
.word 3096742077 // zeta^ 36 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 36 * 375649793 * 2^31
.word  136873393 // zeta^100 * (q^(-1) mod 2^32) * 2^31 = 26036764^100 * 375649793 * 2^31
.word    5075563 // zeta^  2 * 2^31 = 26036764^  2 * 2^31
.word   35131011 // zeta^ 34 * 2^31 = 26036764^ 34 * 2^31
.word   65968403 // zeta^ 18 * 2^31 = 26036764^ 18 * 2^31
.word   52363231 // zeta^ 50 * 2^31 = 26036764^ 50 * 2^31
.word  576633749 // zeta^  2 * (q^(-1) mod 2^32) * 2^31 = 26036764^  2 * 375649793 * 2^31
.word   21827453 // zeta^ 34 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 34 * 375649793 * 2^31
.word 3768591597 // zeta^ 18 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 18 * 375649793 * 2^31
.word  365147681 // zeta^ 50 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 50 * 375649793 * 2^31
.word   43115375 // zeta^ 66 * 2^31 = 26036764^ 66 * 2^31
.word   44664611 // zeta^ 98 * 2^31 = 26036764^ 98 * 2^31
.word   53949037 // zeta^ 82 * 2^31 = 26036764^ 82 * 2^31
.word   39928117 // zeta^114 * 2^31 = 26036764^114 * 2^31
.word   54335767 // zeta^ 20 * 2^31 = 26036764^ 20 * 2^31
.word   46002083 // zeta^ 84 * 2^31 = 26036764^ 84 * 2^31
.word   35733845 // zeta^ 52 * 2^31 = 26036764^ 52 * 2^31
.word   61099389 // zeta^116 * 2^31 = 26036764^116 * 2^31
.word 2562837737 // zeta^ 20 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 20 * 375649793 * 2^31
.word 3404885597 // zeta^ 84 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 84 * 375649793 * 2^31
.word 2000162987 // zeta^ 52 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 52 * 375649793 * 2^31
.word 1687065731 // zeta^116 * (q^(-1) mod 2^32) * 2^31 = 26036764^116 * 375649793 * 2^31
.word   54457727 // zeta^ 10 * 2^31 = 26036764^ 10 * 2^31
.word   14847715 // zeta^ 42 * 2^31 = 26036764^ 42 * 2^31
.word   54563587 // zeta^ 26 * 2^31 = 26036764^ 26 * 2^31
.word   52947923 // zeta^ 58 * 2^31 = 26036764^ 58 * 2^31
.word 2730229889 // zeta^ 10 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 10 * 375649793 * 2^31
.word 2248560413 // zeta^ 42 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 42 * 375649793 * 2^31
.word 3545336573 // zeta^ 26 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 26 * 375649793 * 2^31
.word 1268929069 // zeta^ 58 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 58 * 375649793 * 2^31
.word   27596809 // zeta^ 74 * 2^31 = 26036764^ 74 * 2^31
.word    1129279 // zeta^106 * 2^31 = 26036764^106 * 2^31
.word   35404977 // zeta^ 90 * 2^31 = 26036764^ 90 * 2^31
.word   41822583 // zeta^122 * 2^31 = 26036764^122 * 2^31
.word   26241327 // zeta^ 12 * 2^31 = 26036764^ 12 * 2^31
.word    5033605 // zeta^ 76 * 2^31 = 26036764^ 76 * 2^31
.word    8316793 // zeta^ 44 * 2^31 = 26036764^ 44 * 2^31
.word   16634213 // zeta^108 * 2^31 = 26036764^108 * 2^31
.word 2184146129 // zeta^ 12 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 12 * 375649793 * 2^31
.word 3855639419 // zeta^ 76 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 76 * 375649793 * 2^31
.word  591909511 // zeta^ 44 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 44 * 375649793 * 2^31
.word 1874600091 // zeta^108 * (q^(-1) mod 2^32) * 2^31 = 26036764^108 * 375649793 * 2^31
.word   12770159 // zeta^  6 * 2^31 = 26036764^  6 * 2^31
.word   61827033 // zeta^ 38 * 2^31 = 26036764^ 38 * 2^31
.word   19091691 // zeta^ 22 * 2^31 = 26036764^ 22 * 2^31
.word   20871313 // zeta^ 54 * 2^31 = 26036764^ 54 * 2^31
.word 1517517457 // zeta^  6 * (q^(-1) mod 2^32) * 2^31 = 26036764^  6 * 375649793 * 2^31
.word 2677740071 // zeta^ 38 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 38 * 375649793 * 2^31
.word 2453265685 // zeta^ 22 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 22 * 375649793 * 2^31
.word 3771937135 // zeta^ 54 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 54 * 375649793 * 2^31
.word   24980679 // zeta^ 70 * 2^31 = 26036764^ 70 * 2^31
.word   11221523 // zeta^102 * 2^31 = 26036764^102 * 2^31
.word   32210035 // zeta^ 86 * 2^31 = 26036764^ 86 * 2^31
.word   46581651 // zeta^118 * 2^31 = 26036764^118 * 2^31
.word   63329695 // zeta^ 28 * 2^31 = 26036764^ 28 * 2^31
.word    9983051 // zeta^ 92 * 2^31 = 26036764^ 92 * 2^31
.word    7721125 // zeta^ 60 * 2^31 = 26036764^ 60 * 2^31
.word    9383201 // zeta^124 * 2^31 = 26036764^124 * 2^31
.word 2675302497 // zeta^ 28 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 28 * 375649793 * 2^31
.word 2472974773 // zeta^ 92 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 92 * 375649793 * 2^31
.word 3946619227 // zeta^ 60 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 60 * 375649793 * 2^31
.word  542121183 // zeta^124 * (q^(-1) mod 2^32) * 2^31 = 26036764^124 * 375649793 * 2^31
.word   51221435 // zeta^ 14 * 2^31 = 26036764^ 14 * 2^31
.word   37083207 // zeta^ 46 * 2^31 = 26036764^ 46 * 2^31
.word    8896309 // zeta^ 30 * 2^31 = 26036764^ 30 * 2^31
.word   23761465 // zeta^ 62 * 2^31 = 26036764^ 62 * 2^31
.word 3182148165 // zeta^ 14 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 14 * 375649793 * 2^31
.word 2189487545 // zeta^ 46 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 46 * 375649793 * 2^31
.word  238834379 // zeta^ 30 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 30 * 375649793 * 2^31
.word  604481479 // zeta^ 62 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 62 * 375649793 * 2^31
.word   18467171 // zeta^ 78 * 2^31 = 26036764^ 78 * 2^31
.word   52674527 // zeta^110 * 2^31 = 26036764^110 * 2^31
.word    2061353 // zeta^ 94 * 2^31 = 26036764^ 94 * 2^31
.word   24512363 // zeta^126 * 2^31 = 26036764^126 * 2^31
.word    5075563 // zeta^  2 * 2^31 = 26036764^  2 * 2^31
.word   43115375 // zeta^ 66 * 2^31 = 26036764^ 66 * 2^31
.word   35131011 // zeta^ 34 * 2^31 = 26036764^ 34 * 2^31
.word   44664611 // zeta^ 98 * 2^31 = 26036764^ 98 * 2^31
.word  576633749 // zeta^  2 * (q^(-1) mod 2^32) * 2^31 = 26036764^  2 * 375649793 * 2^31
.word 1324642961 // zeta^ 66 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 66 * 375649793 * 2^31
.word   21827453 // zeta^ 34 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 34 * 375649793 * 2^31
.word 3505510109 // zeta^ 98 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 98 * 375649793 * 2^31
.word   13704133 // zeta^  1 * 2^31 = 26036764^  1 * 2^31
.word   26703739 // zeta^ 33 * 2^31 = 26036764^ 33 * 2^31
.word    5481609 // zeta^ 17 * 2^31 = 26036764^ 17 * 2^31
.word   54494203 // zeta^ 49 * 2^31 = 26036764^ 49 * 2^31
.word 1666225723 // zeta^  1 * (q^(-1) mod 2^32) * 2^31 = 26036764^  1 * 375649793 * 2^31
.word 2869384837 // zeta^ 33 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 33 * 375649793 * 2^31
.word  949335415 // zeta^ 17 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 17 * 375649793 * 2^31
.word 1474054661 // zeta^ 49 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 49 * 375649793 * 2^31
.word   41177999 // zeta^ 65 * 2^31 = 26036764^ 65 * 2^31
.word   65289035 // zeta^ 97 * 2^31 = 26036764^ 97 * 2^31
.word   12552175 // zeta^ 81 * 2^31 = 26036764^ 81 * 2^31
.word   32704019 // zeta^113 * 2^31 = 26036764^113 * 2^31
.word   65968403 // zeta^ 18 * 2^31 = 26036764^ 18 * 2^31
.word   53949037 // zeta^ 82 * 2^31 = 26036764^ 82 * 2^31
.word   52363231 // zeta^ 50 * 2^31 = 26036764^ 50 * 2^31
.word   39928117 // zeta^114 * 2^31 = 26036764^114 * 2^31
.word 3768591597 // zeta^ 18 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 18 * 375649793 * 2^31
.word  338497427 // zeta^ 82 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 82 * 375649793 * 2^31
.word  365147681 // zeta^ 50 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 50 * 375649793 * 2^31
.word 3279343819 // zeta^114 * (q^(-1) mod 2^32) * 2^31 = 26036764^114 * 375649793 * 2^31
.word   43973433 // zeta^  9 * 2^31 = 26036764^  9 * 2^31
.word   14937153 // zeta^ 41 * 2^31 = 26036764^ 41 * 2^31
.word   40841465 // zeta^ 25 * 2^31 = 26036764^ 25 * 2^31
.word   33845545 // zeta^ 57 * 2^31 = 26036764^ 57 * 2^31
.word  720191175 // zeta^  9 * (q^(-1) mod 2^32) * 2^31 = 26036764^  9 * 375649793 * 2^31
.word  116563391 // zeta^ 41 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 41 * 375649793 * 2^31
.word 3459680519 // zeta^ 25 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 25 * 375649793 * 2^31
.word 1885546711 // zeta^ 57 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 57 * 375649793 * 2^31
.word   14453865 // zeta^ 73 * 2^31 = 26036764^ 73 * 2^31
.word   39701997 // zeta^105 * 2^31 = 26036764^105 * 2^31
.word    3577749 // zeta^ 89 * 2^31 = 26036764^ 89 * 2^31
.word   19555165 // zeta^121 * 2^31 = 26036764^121 * 2^31
.word   54457727 // zeta^ 10 * 2^31 = 26036764^ 10 * 2^31
.word   27596809 // zeta^ 74 * 2^31 = 26036764^ 74 * 2^31
.word   14847715 // zeta^ 42 * 2^31 = 26036764^ 42 * 2^31
.word    1129279 // zeta^106 * 2^31 = 26036764^106 * 2^31
.word 2730229889 // zeta^ 10 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 10 * 375649793 * 2^31
.word 1204240887 // zeta^ 74 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 74 * 375649793 * 2^31
.word 2248560413 // zeta^ 42 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 42 * 375649793 * 2^31
.word  497236673 // zeta^106 * (q^(-1) mod 2^32) * 2^31 = 26036764^106 * 375649793 * 2^31
.word   12974361 // zeta^  5 * 2^31 = 26036764^  5 * 2^31
.word   56379967 // zeta^ 37 * 2^31 = 26036764^ 37 * 2^31
.word   52771617 // zeta^ 21 * 2^31 = 26036764^ 21 * 2^31
.word   51483005 // zeta^ 53 * 2^31 = 26036764^ 53 * 2^31
.word 1194393831 // zeta^  5 * (q^(-1) mod 2^32) * 2^31 = 26036764^  5 * 375649793 * 2^31
.word  753806273 // zeta^ 37 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 37 * 375649793 * 2^31
.word 2185629407 // zeta^ 21 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 21 * 375649793 * 2^31
.word  432623747 // zeta^ 53 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 53 * 375649793 * 2^31
.word   41807515 // zeta^ 69 * 2^31 = 26036764^ 69 * 2^31
.word   13380915 // zeta^101 * 2^31 = 26036764^101 * 2^31
.word   23396495 // zeta^ 85 * 2^31 = 26036764^ 85 * 2^31
.word   11487943 // zeta^117 * 2^31 = 26036764^117 * 2^31
.word   54563587 // zeta^ 26 * 2^31 = 26036764^ 26 * 2^31
.word   35404977 // zeta^ 90 * 2^31 = 26036764^ 90 * 2^31
.word   52947923 // zeta^ 58 * 2^31 = 26036764^ 58 * 2^31
.word   41822583 // zeta^122 * 2^31 = 26036764^122 * 2^31
.word 3545336573 // zeta^ 26 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 26 * 375649793 * 2^31
.word  756985167 // zeta^ 90 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 90 * 375649793 * 2^31
.word 1268929069 // zeta^ 58 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 58 * 375649793 * 2^31
.word 2124709001 // zeta^122 * (q^(-1) mod 2^32) * 2^31 = 26036764^122 * 375649793 * 2^31
.word   35192755 // zeta^ 13 * 2^31 = 26036764^ 13 * 2^31
.word    6787663 // zeta^ 45 * 2^31 = 26036764^ 45 * 2^31
.word   55869129 // zeta^ 29 * 2^31 = 26036764^ 29 * 2^31
.word   43560065 // zeta^ 61 * 2^31 = 26036764^ 61 * 2^31
.word 3019374157 // zeta^ 13 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 13 * 375649793 * 2^31
.word  443777969 // zeta^ 45 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 45 * 375649793 * 2^31
.word 2098944823 // zeta^ 29 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 29 * 375649793 * 2^31
.word 2076204415 // zeta^ 61 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 61 * 375649793 * 2^31
.word   36544119 // zeta^ 77 * 2^31 = 26036764^ 77 * 2^31
.word   63484749 // zeta^109 * 2^31 = 26036764^109 * 2^31
.word   16038683 // zeta^ 93 * 2^31 = 26036764^ 93 * 2^31
.word   25949329 // zeta^125 * 2^31 = 26036764^125 * 2^31
.word   12770159 // zeta^  6 * 2^31 = 26036764^  6 * 2^31
.word   24980679 // zeta^ 70 * 2^31 = 26036764^ 70 * 2^31
.word   61827033 // zeta^ 38 * 2^31 = 26036764^ 38 * 2^31
.word   11221523 // zeta^102 * 2^31 = 26036764^102 * 2^31
.word 1517517457 // zeta^  6 * (q^(-1) mod 2^32) * 2^31 = 26036764^  6 * 375649793 * 2^31
.word 1250335033 // zeta^ 70 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 70 * 375649793 * 2^31
.word 2677740071 // zeta^ 38 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 38 * 375649793 * 2^31
.word 1580041197 // zeta^102 * (q^(-1) mod 2^32) * 2^31 = 26036764^102 * 375649793 * 2^31
.word    5623923 // zeta^  3 * 2^31 = 26036764^  3 * 2^31
.word   18571677 // zeta^ 35 * 2^31 = 26036764^ 35 * 2^31
.word   26799603 // zeta^ 19 * 2^31 = 26036764^ 19 * 2^31
.word   39332725 // zeta^ 51 * 2^31 = 26036764^ 51 * 2^31
.word  182627725 // zeta^  3 * (q^(-1) mod 2^32) * 2^31 = 26036764^  3 * 375649793 * 2^31
.word 1902166115 // zeta^ 35 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 35 * 375649793 * 2^31
.word  583438349 // zeta^ 19 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 19 * 375649793 * 2^31
.word 1738958475 // zeta^ 51 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 51 * 375649793 * 2^31
.word   38701067 // zeta^ 67 * 2^31 = 26036764^ 67 * 2^31
.word   14491707 // zeta^ 99 * 2^31 = 26036764^ 99 * 2^31
.word   33463463 // zeta^ 83 * 2^31 = 26036764^ 83 * 2^31
.word   61125067 // zeta^115 * 2^31 = 26036764^115 * 2^31
.word   19091691 // zeta^ 22 * 2^31 = 26036764^ 22 * 2^31
.word   32210035 // zeta^ 86 * 2^31 = 26036764^ 86 * 2^31
.word   20871313 // zeta^ 54 * 2^31 = 26036764^ 54 * 2^31
.word   46581651 // zeta^118 * 2^31 = 26036764^118 * 2^31
.word 2453265685 // zeta^ 22 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 22 * 375649793 * 2^31
.word 2986672525 // zeta^ 86 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 86 * 375649793 * 2^31
.word 3771937135 // zeta^ 54 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 54 * 375649793 * 2^31
.word  697890413 // zeta^118 * (q^(-1) mod 2^32) * 2^31 = 26036764^118 * 375649793 * 2^31
.word   65375453 // zeta^ 11 * 2^31 = 26036764^ 11 * 2^31
.word   59835311 // zeta^ 43 * 2^31 = 26036764^ 43 * 2^31
.word   12921459 // zeta^ 27 * 2^31 = 26036764^ 27 * 2^31
.word   61505033 // zeta^ 59 * 2^31 = 26036764^ 59 * 2^31
.word 4014413091 // zeta^ 11 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 11 * 375649793 * 2^31
.word  741855825 // zeta^ 43 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 43 * 375649793 * 2^31
.word 1006064525 // zeta^ 27 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 27 * 375649793 * 2^31
.word 2747128823 // zeta^ 59 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 59 * 375649793 * 2^31
.word   40797001 // zeta^ 75 * 2^31 = 26036764^ 75 * 2^31
.word   32875577 // zeta^107 * 2^31 = 26036764^107 * 2^31
.word   63769677 // zeta^ 91 * 2^31 = 26036764^ 91 * 2^31
.word   65692461 // zeta^123 * 2^31 = 26036764^123 * 2^31
.word   51221435 // zeta^ 14 * 2^31 = 26036764^ 14 * 2^31
.word   18467171 // zeta^ 78 * 2^31 = 26036764^ 78 * 2^31
.word   37083207 // zeta^ 46 * 2^31 = 26036764^ 46 * 2^31
.word   52674527 // zeta^110 * 2^31 = 26036764^110 * 2^31
.word 3182148165 // zeta^ 14 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 14 * 375649793 * 2^31
.word 3558347933 // zeta^ 78 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 78 * 375649793 * 2^31
.word 2189487545 // zeta^ 46 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 46 * 375649793 * 2^31
.word 1161754145 // zeta^110 * (q^(-1) mod 2^32) * 2^31 = 26036764^110 * 375649793 * 2^31
.word   23458751 // zeta^  7 * 2^31 = 26036764^  7 * 2^31
.word   33711991 // zeta^ 39 * 2^31 = 26036764^ 39 * 2^31
.word   41803191 // zeta^ 23 * 2^31 = 26036764^ 23 * 2^31
.word    9664027 // zeta^ 55 * 2^31 = 26036764^ 55 * 2^31
.word 1501790785 // zeta^  7 * (q^(-1) mod 2^32) * 2^31 = 26036764^  7 * 375649793 * 2^31
.word 1905016457 // zeta^ 39 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 39 * 375649793 * 2^31
.word 2460960841 // zeta^ 23 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 23 * 375649793 * 2^31
.word 1300076517 // zeta^ 55 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 55 * 375649793 * 2^31
.word    9406759 // zeta^ 71 * 2^31 = 26036764^ 71 * 2^31
.word   32167773 // zeta^103 * 2^31 = 26036764^103 * 2^31
.word   19377381 // zeta^ 87 * 2^31 = 26036764^ 87 * 2^31
.word   55794235 // zeta^119 * 2^31 = 26036764^119 * 2^31
.word    8896309 // zeta^ 30 * 2^31 = 26036764^ 30 * 2^31
.word    2061353 // zeta^ 94 * 2^31 = 26036764^ 94 * 2^31
.word   23761465 // zeta^ 62 * 2^31 = 26036764^ 62 * 2^31
.word   24512363 // zeta^126 * 2^31 = 26036764^126 * 2^31
.word  238834379 // zeta^ 30 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 30 * 375649793 * 2^31
.word 1415980503 // zeta^ 94 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 94 * 375649793 * 2^31
.word  604481479 // zeta^ 62 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 62 * 375649793 * 2^31
.word 2198349461 // zeta^126 * (q^(-1) mod 2^32) * 2^31 = 26036764^126 * 375649793 * 2^31
.word   43355169 // zeta^ 15 * 2^31 = 26036764^ 15 * 2^31
.word   40694335 // zeta^ 47 * 2^31 = 26036764^ 47 * 2^31
.word   27553395 // zeta^ 31 * 2^31 = 26036764^ 31 * 2^31
.word     689375 // zeta^ 63 * 2^31 = 26036764^ 63 * 2^31
.word 1107279327 // zeta^ 15 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 15 * 375649793 * 2^31
.word  879592385 // zeta^ 47 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 47 * 375649793 * 2^31
.word 1673531277 // zeta^ 31 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 31 * 375649793 * 2^31
.word 1477062945 // zeta^ 63 * (q^(-1) mod 2^32) * 2^31 = 26036764^ 63 * 375649793 * 2^31
.word    5591977 // zeta^ 79 * 2^31 = 26036764^ 79 * 2^31
.word   25071607 // zeta^111 * 2^31 = 26036764^111 * 2^31
.word    7648471 // zeta^ 95 * 2^31 = 26036764^ 95 * 2^31
.word   46555773 // zeta^127 * 2^31 = 26036764^127 * 2^31
.text
.align 4
roots_addr: .word roots
.syntax unified
.type ntt_256_u32_33556993_26036764, %function
.global ntt_256_u32_33556993_26036764
ntt_256_u32_33556993_26036764:
// Save GPRs
push {r4-r11,lr}
// Save MVE vector registers
vpush {d8-d15}
// Use r14 as marker for r0 + 1008
add r14, r0, #1008
.equ modulus, 33556993
movw r12, #:lower16:modulus
movt r12, #:upper16:modulus
ldr r11, roots_addr
ldrd r10, r9, [r11], #+8
ldrd r8, r7, [r11], #+8
ldrd r6, r5, [r11], #+8
// input[192]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -60)]
vqrdmulh.s32 Q1, Q0, r10
// input[128]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -124)]
vmul.u32 Q0, Q0, r9
// input[64]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 64)]
vqrdmlah.s32 Q1, Q0, r12
vqrdmulh.s32 Q4, Q2, r10
vsub.s32 Q0, Q3, Q1
vmul.u32 Q2, Q2, r9
vadd.s32 Q3, Q3, Q1
vqrdmlah.s32 Q4, Q2, r12
// input[0]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 0)]
vqrdmulh.s32 Q5, Q0, r6
vsub.s32 Q2, Q1, Q4
vmul.u32 Q0, Q0, r5
vadd.s32 Q1, Q1, Q4
vqrdmlah.s32 Q5, Q0, r12
// input[196]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -56)]
vqrdmulh.s32 Q6, Q3, r8
vsub.s32 Q0, Q2, Q5
vmul.u32 Q3, Q3, r7
vadd.s32 Q2, Q2, Q5
vstrw.u32 Q0, [r14,#(-240)]
// Release input[192] from Q0
vqrdmlah.s32 Q6, Q3, r12
vstrw.u32 Q2, [r14,#(-496)]
// Release input[128] from Q2
vsub.s32 Q3, Q1, Q6
vstrw.u32 Q3, [r0,#(256)]
// Release input[64] from Q3
vadd.s32 Q1, Q1, Q6
// input[196]: Already loaded as Q4
vqrdmulh.s32 Q0, Q4, r10
// input[132]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -120)]
vmul.u32 Q4, Q4, r9
// input[68]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 68)]
vqrdmlah.s32 Q0, Q4, r12
vstrw.u32 Q1, [r0,#(0)]
// Release input[0] from Q1
vqrdmulh.s32 Q1, Q2, r10
vsub.s32 Q4, Q3, Q0
vmul.u32 Q2, Q2, r9
vadd.s32 Q3, Q3, Q0
vqrdmlah.s32 Q1, Q2, r12
// input[4]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 4)]
vqrdmulh.s32 Q5, Q4, r6
vsub.s32 Q2, Q0, Q1
vmul.u32 Q4, Q4, r5
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q4, r12
// input[200]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -52)]
vqrdmulh.s32 Q6, Q3, r8
vsub.s32 Q4, Q2, Q5
vmul.u32 Q3, Q3, r7
vadd.s32 Q2, Q2, Q5
vstrw.u32 Q4, [r14,#(-224)]
// Release input[196] from Q4
vqrdmlah.s32 Q6, Q3, r12
vstrw.u32 Q2, [r14,#(-480)]
// Release input[132] from Q2
vsub.s32 Q3, Q0, Q6
vstrw.u32 Q3, [r0,#(272)]
// Release input[68] from Q3
vadd.s32 Q0, Q0, Q6
// input[200]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r10
// input[136]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -116)]
vmul.u32 Q1, Q1, r9
// input[72]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 72)]
vqrdmlah.s32 Q2, Q1, r12
vstrw.u32 Q0, [r0,#(16)]
// Release input[4] from Q0
vqrdmulh.s32 Q0, Q3, r10
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r12
// input[8]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 8)]
vqrdmulh.s32 Q5, Q1, r6
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r5
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r12
// input[204]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -48)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(-208)]
// Release input[200] from Q1
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r14,#(-464)]
// Release input[136] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(288)]
// Release input[72] from Q4
vadd.s32 Q2, Q2, Q6
// input[204]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r10
// input[140]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -112)]
vmul.u32 Q0, Q0, r9
// input[76]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 76)]
vqrdmlah.s32 Q1, Q0, r12
vstrw.u32 Q2, [r0,#(32)]
// Release input[8] from Q2
vqrdmulh.s32 Q2, Q3, r10
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r12
// input[12]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 12)]
vqrdmulh.s32 Q5, Q0, r6
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r5
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r12
// input[208]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -44)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-192)]
// Release input[204] from Q0
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r14,#(-448)]
// Release input[140] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r0,#(304)]
// Release input[76] from Q4
vadd.s32 Q1, Q1, Q6
// input[208]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r10
// input[144]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -108)]
vmul.u32 Q2, Q2, r9
// input[80]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 80)]
vqrdmlah.s32 Q0, Q2, r12
vstrw.u32 Q1, [r0,#(48)]
// Release input[12] from Q1
vqrdmulh.s32 Q1, Q3, r10
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r12
// input[16]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 16)]
vqrdmulh.s32 Q5, Q2, r6
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r5
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r12
// input[212]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -40)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(-176)]
// Release input[208] from Q2
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r14,#(-432)]
// Release input[144] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r0,#(320)]
// Release input[80] from Q4
vadd.s32 Q0, Q0, Q6
// input[212]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r10
// input[148]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -104)]
vmul.u32 Q1, Q1, r9
// input[84]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 84)]
vqrdmlah.s32 Q2, Q1, r12
vstrw.u32 Q0, [r0,#(64)]
// Release input[16] from Q0
vqrdmulh.s32 Q0, Q3, r10
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r12
// input[20]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 20)]
vqrdmulh.s32 Q5, Q1, r6
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r5
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r12
// input[216]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -36)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(-160)]
// Release input[212] from Q1
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r14,#(-416)]
// Release input[148] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(336)]
// Release input[84] from Q4
vadd.s32 Q2, Q2, Q6
// input[216]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r10
// input[152]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -100)]
vmul.u32 Q0, Q0, r9
// input[88]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 88)]
vqrdmlah.s32 Q1, Q0, r12
vstrw.u32 Q2, [r0,#(80)]
// Release input[20] from Q2
vqrdmulh.s32 Q2, Q3, r10
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r12
// input[24]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 24)]
vqrdmulh.s32 Q5, Q0, r6
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r5
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r12
// input[220]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -32)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-144)]
// Release input[216] from Q0
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r14,#(-400)]
// Release input[152] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r0,#(352)]
// Release input[88] from Q4
vadd.s32 Q1, Q1, Q6
// input[220]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r10
// input[156]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -96)]
vmul.u32 Q2, Q2, r9
// input[92]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 92)]
vqrdmlah.s32 Q0, Q2, r12
vstrw.u32 Q1, [r0,#(96)]
// Release input[24] from Q1
vqrdmulh.s32 Q1, Q3, r10
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r12
// input[28]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 28)]
vqrdmulh.s32 Q5, Q2, r6
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r5
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r12
// input[224]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -28)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(-128)]
// Release input[220] from Q2
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r14,#(-384)]
// Release input[156] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r0,#(368)]
// Release input[92] from Q4
vadd.s32 Q0, Q0, Q6
// input[224]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r10
// input[160]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -92)]
vmul.u32 Q1, Q1, r9
// input[96]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 96)]
vqrdmlah.s32 Q2, Q1, r12
vstrw.u32 Q0, [r0,#(112)]
// Release input[28] from Q0
vqrdmulh.s32 Q0, Q3, r10
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r12
// input[32]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 32)]
vqrdmulh.s32 Q5, Q1, r6
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r5
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r12
// input[228]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -24)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(-112)]
// Release input[224] from Q1
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r14,#(-368)]
// Release input[160] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(384)]
// Release input[96] from Q4
vadd.s32 Q2, Q2, Q6
// input[228]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r10
// input[164]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -88)]
vmul.u32 Q0, Q0, r9
// input[100]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 100)]
vqrdmlah.s32 Q1, Q0, r12
vstrw.u32 Q2, [r0,#(128)]
// Release input[32] from Q2
vqrdmulh.s32 Q2, Q3, r10
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r12
// input[36]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 36)]
vqrdmulh.s32 Q5, Q0, r6
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r5
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r12
// input[232]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -20)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-96)]
// Release input[228] from Q0
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r14,#(-352)]
// Release input[164] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r0,#(400)]
// Release input[100] from Q4
vadd.s32 Q1, Q1, Q6
// input[232]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r10
// input[168]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -84)]
vmul.u32 Q2, Q2, r9
// input[104]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 104)]
vqrdmlah.s32 Q0, Q2, r12
vstrw.u32 Q1, [r0,#(144)]
// Release input[36] from Q1
vqrdmulh.s32 Q1, Q3, r10
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r12
// input[40]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 40)]
vqrdmulh.s32 Q5, Q2, r6
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r5
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r12
// input[236]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -16)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(-80)]
// Release input[232] from Q2
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r14,#(-336)]
// Release input[168] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r0,#(416)]
// Release input[104] from Q4
vadd.s32 Q0, Q0, Q6
// input[236]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r10
// input[172]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -80)]
vmul.u32 Q1, Q1, r9
// input[108]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 108)]
vqrdmlah.s32 Q2, Q1, r12
vstrw.u32 Q0, [r0,#(160)]
// Release input[40] from Q0
vqrdmulh.s32 Q0, Q3, r10
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r12
// input[44]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 44)]
vqrdmulh.s32 Q5, Q1, r6
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r5
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r12
// input[240]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -12)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(-64)]
// Release input[236] from Q1
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r14,#(-320)]
// Release input[172] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(432)]
// Release input[108] from Q4
vadd.s32 Q2, Q2, Q6
// input[240]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r10
// input[176]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -76)]
vmul.u32 Q0, Q0, r9
// input[112]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 112)]
vqrdmlah.s32 Q1, Q0, r12
vstrw.u32 Q2, [r0,#(176)]
// Release input[44] from Q2
vqrdmulh.s32 Q2, Q3, r10
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r12
// input[48]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 48)]
vqrdmulh.s32 Q5, Q0, r6
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r5
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r12
// input[244]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -8)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-48)]
// Release input[240] from Q0
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r14,#(-304)]
// Release input[176] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r0,#(448)]
// Release input[112] from Q4
vadd.s32 Q1, Q1, Q6
// input[244]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r10
// input[180]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -72)]
vmul.u32 Q2, Q2, r9
// input[116]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 116)]
vqrdmlah.s32 Q0, Q2, r12
vstrw.u32 Q1, [r0,#(192)]
// Release input[48] from Q1
vqrdmulh.s32 Q1, Q3, r10
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r12
// input[52]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 52)]
vqrdmulh.s32 Q5, Q2, r6
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r5
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r12
// input[248]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -4)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(-32)]
// Release input[244] from Q2
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r14,#(-288)]
// Release input[180] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r0,#(464)]
// Release input[116] from Q4
vadd.s32 Q0, Q0, Q6
// input[248]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r10
// input[184]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -68)]
vmul.u32 Q1, Q1, r9
// input[120]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 120)]
vqrdmlah.s32 Q2, Q1, r12
vstrw.u32 Q0, [r0,#(208)]
// Release input[52] from Q0
vqrdmulh.s32 Q0, Q3, r10
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r12
// input[56]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 56)]
vqrdmulh.s32 Q5, Q1, r6
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r5
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r12
// input[252]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 0)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(-16)]
// Release input[248] from Q1
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r14,#(-272)]
// Release input[184] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(480)]
// Release input[120] from Q4
vadd.s32 Q2, Q2, Q6
// input[252]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r10
// input[188]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -64)]
vmul.u32 Q0, Q0, r9
// input[124]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 124)]
vqrdmlah.s32 Q1, Q0, r12
vstrw.u32 Q2, [r0,#(224)]
// Release input[56] from Q2
vqrdmulh.s32 Q2, Q3, r10
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r12
// input[60]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 60)]
vqrdmulh.s32 Q5, Q0, r6
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r5
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r12
// input[48]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 48)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(0)]
// Release input[252] from Q0
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r14,#(-256)]
// Release input[188] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r0,#(496)]
// Release input[124] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r10, r9, [r11], #+8
ldrd r8, r7, [r11], #+8
ldrd r6, r5, [r11], #+8
// input[48]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r10
// input[32]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 32)]
vmul.u32 Q2, Q2, r9
// input[16]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 16)]
vqrdmlah.s32 Q0, Q2, r12
vstrw.u32 Q1, [r0,#(240)]
// Release input[60] from Q1
vqrdmulh.s32 Q1, Q3, r10
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r12
// input[0]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 0)]
vqrdmulh.s32 Q5, Q2, r6
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r5
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r12
// input[52]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 52)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r0,#(192)]
// Release input[48] from Q2
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r0,#(128)]
// Release input[32] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r0,#(64)]
// Release input[16] from Q4
vadd.s32 Q0, Q0, Q6
// input[52]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r10
// input[36]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 36)]
vmul.u32 Q1, Q1, r9
// input[20]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 20)]
vqrdmlah.s32 Q2, Q1, r12
vstrw.u32 Q0, [r0,#(0)]
// Release input[0] from Q0
vqrdmulh.s32 Q0, Q3, r10
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r12
// input[4]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 4)]
vqrdmulh.s32 Q5, Q1, r6
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r5
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r12
// input[56]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 56)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r0,#(208)]
// Release input[52] from Q1
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r0,#(144)]
// Release input[36] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(80)]
// Release input[20] from Q4
vadd.s32 Q2, Q2, Q6
// input[56]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r10
// input[40]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 40)]
vmul.u32 Q0, Q0, r9
// input[24]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 24)]
vqrdmlah.s32 Q1, Q0, r12
vstrw.u32 Q2, [r0,#(16)]
// Release input[4] from Q2
vqrdmulh.s32 Q2, Q3, r10
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r12
// input[8]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 8)]
vqrdmulh.s32 Q5, Q0, r6
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r5
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r12
// input[60]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 60)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r0,#(224)]
// Release input[56] from Q0
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r0,#(160)]
// Release input[40] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r0,#(96)]
// Release input[24] from Q4
vadd.s32 Q1, Q1, Q6
// input[60]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r10
// input[44]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 44)]
vmul.u32 Q2, Q2, r9
// input[28]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 28)]
vqrdmlah.s32 Q0, Q2, r12
vstrw.u32 Q1, [r0,#(32)]
// Release input[8] from Q1
vqrdmulh.s32 Q1, Q3, r10
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r12
// input[12]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 12)]
vqrdmulh.s32 Q5, Q2, r6
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r5
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r12
// input[112]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 112)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r0,#(240)]
// Release input[60] from Q2
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r0,#(176)]
// Release input[44] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r0,#(112)]
// Release input[28] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r10, r9, [r11], #+8
ldrd r8, r7, [r11], #+8
ldrd r6, r5, [r11], #+8
// input[112]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r10
// input[96]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 96)]
vmul.u32 Q1, Q1, r9
// input[80]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 80)]
vqrdmlah.s32 Q2, Q1, r12
vstrw.u32 Q0, [r0,#(48)]
// Release input[12] from Q0
vqrdmulh.s32 Q0, Q3, r10
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r12
// input[64]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 64)]
vqrdmulh.s32 Q5, Q1, r6
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r5
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r12
// input[116]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 116)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r0,#(448)]
// Release input[112] from Q1
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r0,#(384)]
// Release input[96] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(320)]
// Release input[80] from Q4
vadd.s32 Q2, Q2, Q6
// input[116]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r10
// input[100]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 100)]
vmul.u32 Q0, Q0, r9
// input[84]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 84)]
vqrdmlah.s32 Q1, Q0, r12
vstrw.u32 Q2, [r0,#(256)]
// Release input[64] from Q2
vqrdmulh.s32 Q2, Q3, r10
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r12
// input[68]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 68)]
vqrdmulh.s32 Q5, Q0, r6
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r5
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r12
// input[120]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 120)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r0,#(464)]
// Release input[116] from Q0
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r0,#(400)]
// Release input[100] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r0,#(336)]
// Release input[84] from Q4
vadd.s32 Q1, Q1, Q6
// input[120]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r10
// input[104]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 104)]
vmul.u32 Q2, Q2, r9
// input[88]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 88)]
vqrdmlah.s32 Q0, Q2, r12
vstrw.u32 Q1, [r0,#(272)]
// Release input[68] from Q1
vqrdmulh.s32 Q1, Q3, r10
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r12
// input[72]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 72)]
vqrdmulh.s32 Q5, Q2, r6
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r5
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r12
// input[124]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 124)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r0,#(480)]
// Release input[120] from Q2
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r0,#(416)]
// Release input[104] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r0,#(352)]
// Release input[88] from Q4
vadd.s32 Q0, Q0, Q6
// input[124]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r10
// input[108]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 108)]
vmul.u32 Q1, Q1, r9
// input[92]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 92)]
vqrdmlah.s32 Q2, Q1, r12
vstrw.u32 Q0, [r0,#(288)]
// Release input[72] from Q0
vqrdmulh.s32 Q0, Q3, r10
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r12
// input[76]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 76)]
vqrdmulh.s32 Q5, Q1, r6
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r5
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r12
// input[176]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -76)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r0,#(496)]
// Release input[124] from Q1
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r0,#(432)]
// Release input[108] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(368)]
// Release input[92] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r10, r9, [r11], #+8
ldrd r8, r7, [r11], #+8
ldrd r6, r5, [r11], #+8
// input[176]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r10
// input[160]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -92)]
vmul.u32 Q0, Q0, r9
// input[144]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -108)]
vqrdmlah.s32 Q1, Q0, r12
vstrw.u32 Q2, [r0,#(304)]
// Release input[76] from Q2
vqrdmulh.s32 Q2, Q3, r10
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r12
// input[128]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -124)]
vqrdmulh.s32 Q5, Q0, r6
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r5
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r12
// input[180]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -72)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-304)]
// Release input[176] from Q0
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r14,#(-368)]
// Release input[160] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(-432)]
// Release input[144] from Q4
vadd.s32 Q1, Q1, Q6
// input[180]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r10
// input[164]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -88)]
vmul.u32 Q2, Q2, r9
// input[148]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -104)]
vqrdmlah.s32 Q0, Q2, r12
vstrw.u32 Q1, [r14,#(-496)]
// Release input[128] from Q1
vqrdmulh.s32 Q1, Q3, r10
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r12
// input[132]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -120)]
vqrdmulh.s32 Q5, Q2, r6
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r5
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r12
// input[184]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -68)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(-288)]
// Release input[180] from Q2
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r14,#(-352)]
// Release input[164] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(-416)]
// Release input[148] from Q4
vadd.s32 Q0, Q0, Q6
// input[184]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r10
// input[168]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -84)]
vmul.u32 Q1, Q1, r9
// input[152]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -100)]
vqrdmlah.s32 Q2, Q1, r12
vstrw.u32 Q0, [r14,#(-480)]
// Release input[132] from Q0
vqrdmulh.s32 Q0, Q3, r10
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r12
// input[136]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -116)]
vqrdmulh.s32 Q5, Q1, r6
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r5
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r12
// input[188]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -64)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(-272)]
// Release input[184] from Q1
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r14,#(-336)]
// Release input[168] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-400)]
// Release input[152] from Q4
vadd.s32 Q2, Q2, Q6
// input[188]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r10
// input[172]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -80)]
vmul.u32 Q0, Q0, r9
// input[156]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -96)]
vqrdmlah.s32 Q1, Q0, r12
vstrw.u32 Q2, [r14,#(-464)]
// Release input[136] from Q2
vqrdmulh.s32 Q2, Q3, r10
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r12
// input[140]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -112)]
vqrdmulh.s32 Q5, Q0, r6
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r5
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r12
// input[240]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -12)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-256)]
// Release input[188] from Q0
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r14,#(-320)]
// Release input[172] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(-384)]
// Release input[156] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r10, r9, [r11], #+8
ldrd r8, r7, [r11], #+8
ldrd r6, r5, [r11], #+8
// input[240]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r10
// input[224]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -28)]
vmul.u32 Q2, Q2, r9
// input[208]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -44)]
vqrdmlah.s32 Q0, Q2, r12
vstrw.u32 Q1, [r14,#(-448)]
// Release input[140] from Q1
vqrdmulh.s32 Q1, Q3, r10
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r12
// input[192]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -60)]
vqrdmulh.s32 Q5, Q2, r6
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r5
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r12
// input[244]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -8)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(-48)]
// Release input[240] from Q2
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r14,#(-112)]
// Release input[224] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(-176)]
// Release input[208] from Q4
vadd.s32 Q0, Q0, Q6
// input[244]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r10
// input[228]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -24)]
vmul.u32 Q1, Q1, r9
// input[212]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -40)]
vqrdmlah.s32 Q2, Q1, r12
vstrw.u32 Q0, [r14,#(-240)]
// Release input[192] from Q0
vqrdmulh.s32 Q0, Q3, r10
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r12
// input[196]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -56)]
vqrdmulh.s32 Q5, Q1, r6
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r5
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r12
// input[248]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -4)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(-32)]
// Release input[244] from Q1
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r14,#(-96)]
// Release input[228] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-160)]
// Release input[212] from Q4
vadd.s32 Q2, Q2, Q6
// input[248]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r10
// input[232]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -20)]
vmul.u32 Q0, Q0, r9
// input[216]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -36)]
vqrdmlah.s32 Q1, Q0, r12
vstrw.u32 Q2, [r14,#(-224)]
// Release input[196] from Q2
vqrdmulh.s32 Q2, Q3, r10
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r12
// input[200]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -52)]
vqrdmulh.s32 Q5, Q0, r6
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r5
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r12
// input[252]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 0)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-16)]
// Release input[248] from Q0
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r14,#(-80)]
// Release input[232] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(-144)]
// Release input[216] from Q4
vadd.s32 Q1, Q1, Q6
// input[252]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r10
// input[236]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -16)]
vmul.u32 Q2, Q2, r9
// input[220]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -32)]
vqrdmlah.s32 Q0, Q2, r12
vstrw.u32 Q1, [r14,#(-208)]
// Release input[200] from Q1
vqrdmulh.s32 Q1, Q3, r10
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r12
// input[204]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -48)]
vqrdmulh.s32 Q5, Q2, r6
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r5
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r12
// input[12]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 12)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(0)]
// Release input[252] from Q2
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r14,#(-64)]
// Release input[236] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(-128)]
// Release input[220] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r10, r9, [r11], #+8
ldrd r8, r7, [r11], #+8
ldrd r6, r5, [r11], #+8
// input[12]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r10
// input[8]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 8)]
vmul.u32 Q1, Q1, r9
// input[4]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 4)]
vqrdmlah.s32 Q2, Q1, r12
vstrw.u32 Q0, [r14,#(-192)]
// Release input[204] from Q0
vqrdmulh.s32 Q0, Q3, r10
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r12
// input[0]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 0)]
vqrdmulh.s32 Q5, Q1, r6
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r5
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r12
// input[28]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 28)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r0,#(48)]
// Release input[12] from Q1
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r0,#(32)]
// Release input[8] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(16)]
// Release input[4] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r10, r9, [r11], #+8
ldrd r8, r7, [r11], #+8
ldrd r6, r5, [r11], #+8
// input[28]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r10
// input[24]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 24)]
vmul.u32 Q0, Q0, r9
// input[20]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 20)]
vqrdmlah.s32 Q1, Q0, r12
vstrw.u32 Q2, [r0,#(0)]
// Release input[0] from Q2
vqrdmulh.s32 Q2, Q3, r10
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r12
// input[16]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 16)]
vqrdmulh.s32 Q5, Q0, r6
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r5
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r12
// input[44]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 44)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r0,#(112)]
// Release input[28] from Q0
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r0,#(96)]
// Release input[24] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r0,#(80)]
// Release input[20] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r10, r9, [r11], #+8
ldrd r8, r7, [r11], #+8
ldrd r6, r5, [r11], #+8
// input[44]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r10
// input[40]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 40)]
vmul.u32 Q2, Q2, r9
// input[36]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 36)]
vqrdmlah.s32 Q0, Q2, r12
vstrw.u32 Q1, [r0,#(64)]
// Release input[16] from Q1
vqrdmulh.s32 Q1, Q3, r10
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r12
// input[32]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 32)]
vqrdmulh.s32 Q5, Q2, r6
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r5
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r12
// input[60]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 60)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r0,#(176)]
// Release input[44] from Q2
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r0,#(160)]
// Release input[40] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r0,#(144)]
// Release input[36] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r10, r9, [r11], #+8
ldrd r8, r7, [r11], #+8
ldrd r6, r5, [r11], #+8
// input[60]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r10
// input[56]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 56)]
vmul.u32 Q1, Q1, r9
// input[52]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 52)]
vqrdmlah.s32 Q2, Q1, r12
vstrw.u32 Q0, [r0,#(128)]
// Release input[32] from Q0
vqrdmulh.s32 Q0, Q3, r10
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r12
// input[48]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 48)]
vqrdmulh.s32 Q5, Q1, r6
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r5
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r12
// input[76]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 76)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r0,#(240)]
// Release input[60] from Q1
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r0,#(224)]
// Release input[56] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(208)]
// Release input[52] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r10, r9, [r11], #+8
ldrd r8, r7, [r11], #+8
ldrd r6, r5, [r11], #+8
// input[76]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r10
// input[72]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 72)]
vmul.u32 Q0, Q0, r9
// input[68]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 68)]
vqrdmlah.s32 Q1, Q0, r12
vstrw.u32 Q2, [r0,#(192)]
// Release input[48] from Q2
vqrdmulh.s32 Q2, Q3, r10
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r12
// input[64]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 64)]
vqrdmulh.s32 Q5, Q0, r6
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r5
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r12
// input[92]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 92)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r0,#(304)]
// Release input[76] from Q0
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r0,#(288)]
// Release input[72] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r0,#(272)]
// Release input[68] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r10, r9, [r11], #+8
ldrd r8, r7, [r11], #+8
ldrd r6, r5, [r11], #+8
// input[92]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r10
// input[88]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 88)]
vmul.u32 Q2, Q2, r9
// input[84]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 84)]
vqrdmlah.s32 Q0, Q2, r12
vstrw.u32 Q1, [r0,#(256)]
// Release input[64] from Q1
vqrdmulh.s32 Q1, Q3, r10
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r12
// input[80]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 80)]
vqrdmulh.s32 Q5, Q2, r6
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r5
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r12
// input[108]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 108)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r0,#(368)]
// Release input[92] from Q2
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r0,#(352)]
// Release input[88] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r0,#(336)]
// Release input[84] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r10, r9, [r11], #+8
ldrd r8, r7, [r11], #+8
ldrd r6, r5, [r11], #+8
// input[108]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r10
// input[104]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 104)]
vmul.u32 Q1, Q1, r9
// input[100]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 100)]
vqrdmlah.s32 Q2, Q1, r12
vstrw.u32 Q0, [r0,#(320)]
// Release input[80] from Q0
vqrdmulh.s32 Q0, Q3, r10
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r12
// input[96]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 96)]
vqrdmulh.s32 Q5, Q1, r6
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r5
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r12
// input[124]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 124)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r0,#(432)]
// Release input[108] from Q1
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r0,#(416)]
// Release input[104] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(400)]
// Release input[100] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r10, r9, [r11], #+8
ldrd r8, r7, [r11], #+8
ldrd r6, r5, [r11], #+8
// input[124]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r10
// input[120]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 120)]
vmul.u32 Q0, Q0, r9
// input[116]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 116)]
vqrdmlah.s32 Q1, Q0, r12
vstrw.u32 Q2, [r0,#(384)]
// Release input[96] from Q2
vqrdmulh.s32 Q2, Q3, r10
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r12
// input[112]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 112)]
vqrdmulh.s32 Q5, Q0, r6
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r5
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r12
// input[140]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -112)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r0,#(496)]
// Release input[124] from Q0
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r0,#(480)]
// Release input[120] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r0,#(464)]
// Release input[116] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r10, r9, [r11], #+8
ldrd r8, r7, [r11], #+8
ldrd r6, r5, [r11], #+8
// input[140]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r10
// input[136]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -116)]
vmul.u32 Q2, Q2, r9
// input[132]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -120)]
vqrdmlah.s32 Q0, Q2, r12
vstrw.u32 Q1, [r0,#(448)]
// Release input[112] from Q1
vqrdmulh.s32 Q1, Q3, r10
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r12
// input[128]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -124)]
vqrdmulh.s32 Q5, Q2, r6
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r5
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r12
// input[156]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -96)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(-448)]
// Release input[140] from Q2
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r14,#(-464)]
// Release input[136] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(-480)]
// Release input[132] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r10, r9, [r11], #+8
ldrd r8, r7, [r11], #+8
ldrd r6, r5, [r11], #+8
// input[156]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r10
// input[152]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -100)]
vmul.u32 Q1, Q1, r9
// input[148]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -104)]
vqrdmlah.s32 Q2, Q1, r12
vstrw.u32 Q0, [r14,#(-496)]
// Release input[128] from Q0
vqrdmulh.s32 Q0, Q3, r10
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r12
// input[144]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -108)]
vqrdmulh.s32 Q5, Q1, r6
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r5
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r12
// input[172]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -80)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(-384)]
// Release input[156] from Q1
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r14,#(-400)]
// Release input[152] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-416)]
// Release input[148] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r10, r9, [r11], #+8
ldrd r8, r7, [r11], #+8
ldrd r6, r5, [r11], #+8
// input[172]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r10
// input[168]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -84)]
vmul.u32 Q0, Q0, r9
// input[164]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -88)]
vqrdmlah.s32 Q1, Q0, r12
vstrw.u32 Q2, [r14,#(-432)]
// Release input[144] from Q2
vqrdmulh.s32 Q2, Q3, r10
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r12
// input[160]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -92)]
vqrdmulh.s32 Q5, Q0, r6
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r5
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r12
// input[188]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -64)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-320)]
// Release input[172] from Q0
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r14,#(-336)]
// Release input[168] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(-352)]
// Release input[164] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r10, r9, [r11], #+8
ldrd r8, r7, [r11], #+8
ldrd r6, r5, [r11], #+8
// input[188]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r10
// input[184]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -68)]
vmul.u32 Q2, Q2, r9
// input[180]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -72)]
vqrdmlah.s32 Q0, Q2, r12
vstrw.u32 Q1, [r14,#(-368)]
// Release input[160] from Q1
vqrdmulh.s32 Q1, Q3, r10
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r12
// input[176]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -76)]
vqrdmulh.s32 Q5, Q2, r6
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r5
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r12
// input[204]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -48)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(-256)]
// Release input[188] from Q2
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r14,#(-272)]
// Release input[184] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(-288)]
// Release input[180] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r10, r9, [r11], #+8
ldrd r8, r7, [r11], #+8
ldrd r6, r5, [r11], #+8
// input[204]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r10
// input[200]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -52)]
vmul.u32 Q1, Q1, r9
// input[196]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -56)]
vqrdmlah.s32 Q2, Q1, r12
vstrw.u32 Q0, [r14,#(-304)]
// Release input[176] from Q0
vqrdmulh.s32 Q0, Q3, r10
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r12
// input[192]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -60)]
vqrdmulh.s32 Q5, Q1, r6
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r5
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r12
// input[220]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -32)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(-192)]
// Release input[204] from Q1
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r14,#(-208)]
// Release input[200] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-224)]
// Release input[196] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r10, r9, [r11], #+8
ldrd r8, r7, [r11], #+8
ldrd r6, r5, [r11], #+8
// input[220]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r10
// input[216]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -36)]
vmul.u32 Q0, Q0, r9
// input[212]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -40)]
vqrdmlah.s32 Q1, Q0, r12
vstrw.u32 Q2, [r14,#(-240)]
// Release input[192] from Q2
vqrdmulh.s32 Q2, Q3, r10
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r12
// input[208]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -44)]
vqrdmulh.s32 Q5, Q0, r6
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r5
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r12
// input[236]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -16)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-128)]
// Release input[220] from Q0
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r14,#(-144)]
// Release input[216] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(-160)]
// Release input[212] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r10, r9, [r11], #+8
ldrd r8, r7, [r11], #+8
ldrd r6, r5, [r11], #+8
// input[236]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r10
// input[232]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -20)]
vmul.u32 Q2, Q2, r9
// input[228]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -24)]
vqrdmlah.s32 Q0, Q2, r12
vstrw.u32 Q1, [r14,#(-176)]
// Release input[208] from Q1
vqrdmulh.s32 Q1, Q3, r10
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r12
// input[224]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -28)]
vqrdmulh.s32 Q5, Q2, r6
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r5
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r12
// input[252]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 0)]
vqrdmulh.s32 Q6, Q4, r8
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(-64)]
// Release input[236] from Q2
vqrdmlah.s32 Q6, Q4, r12
vstrw.u32 Q3, [r14,#(-80)]
// Release input[232] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(-96)]
// Release input[228] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r10, r9, [r11], #+8
ldrd r8, r7, [r11], #+8
ldrd r6, r5, [r11], #+8
// input[252]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r10
// input[248]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -4)]
vmul.u32 Q1, Q1, r9
// input[244]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -8)]
vqrdmlah.s32 Q2, Q1, r12
vstrw.u32 Q0, [r14,#(-112)]
// Release input[224] from Q0
vqrdmulh.s32 Q0, Q3, r10
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r9
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r12
// input[240]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -12)]
vqrdmulh.s32 Q5, Q1, r6
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r5
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r12
vqrdmulh.s32 Q0, Q4, r8
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r7
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(0)]
// Release input[252] from Q1
vqrdmlah.s32 Q0, Q4, r12
vstrw.u32 Q3, [r14,#(-16)]
// Release input[248] from Q3
vsub.s32 Q4, Q2, Q0
vstrw.u32 Q4, [r14,#(-32)]
// Release input[244] from Q4
vadd.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r14,#(-48)]
// Release input[240] from Q2
.equ modulus_inv, 3919317503
movw r10, #:lower16:modulus_inv
movt r10, #:upper16:modulus_inv
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vldrw.s32 Q5, [r11], #80
vqrdmulh.s32 Q4, Q3, Q5
vldrw.s32 Q6, [r11, #-64]
vmul.u32 Q3, Q3, Q6
vqrdmlah.s32 Q4, Q3, r12
vldrw.s32 Q3, [r11, #-48]
vqrdmulh.s32 Q5, Q2, Q5
vsub.s32 Q7, Q1, Q4
vmul.u32 Q2, Q2, Q6
vadd.s32 Q1, Q1, Q4
vqrdmlah.s32 Q5, Q2, r12
vldrw.s32 Q2, [r11, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q4, Q0, Q5
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q5
vqrdmlah.s32 Q3, Q1, r12
vldrw.s32 Q5, [r11, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q6, Q5, r10
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q5, Q7, Q5
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q7, Q7, Q6
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q5, Q7, r12
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q7, Q4, Q5
vstrw.s32 Q7, [r0, #-80]
vadd.s32 Q4, Q4, Q5
vldrw.s32 Q6, [r11], #80
vqrdmulh.s32 Q5, Q3, Q6
vldrw.s32 Q7, [r11, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q4, [r0, #-96]
vqrdmlah.s32 Q5, Q3, r12
vldrw.s32 Q3, [r11, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q4, Q1, Q5
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q5
vqrdmlah.s32 Q6, Q2, r12
vldrw.s32 Q2, [r11, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q5, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r12
vldrw.s32 Q6, [r11, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r10
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q4, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q4, Q4, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q4, r12
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q4, Q5, Q6
vstrw.s32 Q4, [r0, #-80]
vadd.s32 Q5, Q5, Q6
vldrw.s32 Q6, [r11], #80
vqrdmulh.s32 Q4, Q3, Q6
vldrw.s32 Q7, [r11, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q5, [r0, #-96]
vqrdmlah.s32 Q4, Q3, r12
vldrw.s32 Q3, [r11, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q5, Q1, Q4
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q4
vqrdmlah.s32 Q6, Q2, r12
vldrw.s32 Q2, [r11, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q4, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r12
vldrw.s32 Q6, [r11, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r10
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q5, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q5, Q5, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q5, r12
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q5, Q4, Q6
vstrw.s32 Q5, [r0, #-80]
vadd.s32 Q4, Q4, Q6
vldrw.s32 Q6, [r11], #80
vqrdmulh.s32 Q5, Q3, Q6
vldrw.s32 Q7, [r11, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q4, [r0, #-96]
vqrdmlah.s32 Q5, Q3, r12
vldrw.s32 Q3, [r11, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q4, Q1, Q5
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q5
vqrdmlah.s32 Q6, Q2, r12
vldrw.s32 Q2, [r11, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q5, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r12
vldrw.s32 Q6, [r11, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r10
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q4, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q4, Q4, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q4, r12
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q4, Q5, Q6
vstrw.s32 Q4, [r0, #-80]
vadd.s32 Q5, Q5, Q6
vldrw.s32 Q6, [r11], #80
vqrdmulh.s32 Q4, Q3, Q6
vldrw.s32 Q7, [r11, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q5, [r0, #-96]
vqrdmlah.s32 Q4, Q3, r12
vldrw.s32 Q3, [r11, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q5, Q1, Q4
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q4
vqrdmlah.s32 Q6, Q2, r12
vldrw.s32 Q2, [r11, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q4, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r12
vldrw.s32 Q6, [r11, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r10
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q5, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q5, Q5, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q5, r12
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q5, Q4, Q6
vstrw.s32 Q5, [r0, #-80]
vadd.s32 Q4, Q4, Q6
vldrw.s32 Q6, [r11], #80
vqrdmulh.s32 Q5, Q3, Q6
vldrw.s32 Q7, [r11, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q4, [r0, #-96]
vqrdmlah.s32 Q5, Q3, r12
vldrw.s32 Q3, [r11, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q4, Q1, Q5
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q5
vqrdmlah.s32 Q6, Q2, r12
vldrw.s32 Q2, [r11, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q5, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r12
vldrw.s32 Q6, [r11, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r10
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q4, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q4, Q4, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q4, r12
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q4, Q5, Q6
vstrw.s32 Q4, [r0, #-80]
vadd.s32 Q5, Q5, Q6
vldrw.s32 Q6, [r11], #80
vqrdmulh.s32 Q4, Q3, Q6
vldrw.s32 Q7, [r11, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q5, [r0, #-96]
vqrdmlah.s32 Q4, Q3, r12
vldrw.s32 Q3, [r11, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q5, Q1, Q4
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q4
vqrdmlah.s32 Q6, Q2, r12
vldrw.s32 Q2, [r11, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q4, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r12
vldrw.s32 Q6, [r11, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r10
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q5, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q5, Q5, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q5, r12
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q5, Q4, Q6
vstrw.s32 Q5, [r0, #-80]
vadd.s32 Q4, Q4, Q6
vldrw.s32 Q6, [r11], #80
vqrdmulh.s32 Q5, Q3, Q6
vldrw.s32 Q7, [r11, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q4, [r0, #-96]
vqrdmlah.s32 Q5, Q3, r12
vldrw.s32 Q3, [r11, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q4, Q1, Q5
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q5
vqrdmlah.s32 Q6, Q2, r12
vldrw.s32 Q2, [r11, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q5, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r12
vldrw.s32 Q6, [r11, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r10
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q4, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q4, Q4, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q4, r12
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q4, Q5, Q6
vstrw.s32 Q4, [r0, #-80]
vadd.s32 Q5, Q5, Q6
vldrw.s32 Q6, [r11], #80
vqrdmulh.s32 Q4, Q3, Q6
vldrw.s32 Q7, [r11, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q5, [r0, #-96]
vqrdmlah.s32 Q4, Q3, r12
vldrw.s32 Q3, [r11, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q5, Q1, Q4
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q4
vqrdmlah.s32 Q6, Q2, r12
vldrw.s32 Q2, [r11, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q4, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r12
vldrw.s32 Q6, [r11, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r10
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q5, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q5, Q5, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q5, r12
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q5, Q4, Q6
vstrw.s32 Q5, [r0, #-80]
vadd.s32 Q4, Q4, Q6
vldrw.s32 Q6, [r11], #80
vqrdmulh.s32 Q5, Q3, Q6
vldrw.s32 Q7, [r11, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q4, [r0, #-96]
vqrdmlah.s32 Q5, Q3, r12
vldrw.s32 Q3, [r11, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q4, Q1, Q5
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q5
vqrdmlah.s32 Q6, Q2, r12
vldrw.s32 Q2, [r11, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q5, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r12
vldrw.s32 Q6, [r11, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r10
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q4, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q4, Q4, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q4, r12
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q4, Q5, Q6
vstrw.s32 Q4, [r0, #-80]
vadd.s32 Q5, Q5, Q6
vldrw.s32 Q6, [r11], #80
vqrdmulh.s32 Q4, Q3, Q6
vldrw.s32 Q7, [r11, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q5, [r0, #-96]
vqrdmlah.s32 Q4, Q3, r12
vldrw.s32 Q3, [r11, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q5, Q1, Q4
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q4
vqrdmlah.s32 Q6, Q2, r12
vldrw.s32 Q2, [r11, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q4, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r12
vldrw.s32 Q6, [r11, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r10
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q5, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q5, Q5, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q5, r12
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q5, Q4, Q6
vstrw.s32 Q5, [r0, #-80]
vadd.s32 Q4, Q4, Q6
vldrw.s32 Q6, [r11], #80
vqrdmulh.s32 Q5, Q3, Q6
vldrw.s32 Q7, [r11, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q4, [r0, #-96]
vqrdmlah.s32 Q5, Q3, r12
vldrw.s32 Q3, [r11, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q4, Q1, Q5
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q5
vqrdmlah.s32 Q6, Q2, r12
vldrw.s32 Q2, [r11, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q5, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r12
vldrw.s32 Q6, [r11, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r10
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q4, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q4, Q4, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q4, r12
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q4, Q5, Q6
vstrw.s32 Q4, [r0, #-80]
vadd.s32 Q5, Q5, Q6
vldrw.s32 Q6, [r11], #80
vqrdmulh.s32 Q4, Q3, Q6
vldrw.s32 Q7, [r11, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q5, [r0, #-96]
vqrdmlah.s32 Q4, Q3, r12
vldrw.s32 Q3, [r11, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q5, Q1, Q4
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q4
vqrdmlah.s32 Q6, Q2, r12
vldrw.s32 Q2, [r11, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q4, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r12
vldrw.s32 Q6, [r11, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r10
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q5, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q5, Q5, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q5, r12
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q5, Q4, Q6
vstrw.s32 Q5, [r0, #-80]
vadd.s32 Q4, Q4, Q6
vldrw.s32 Q6, [r11], #80
vqrdmulh.s32 Q5, Q3, Q6
vldrw.s32 Q7, [r11, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q4, [r0, #-96]
vqrdmlah.s32 Q5, Q3, r12
vldrw.s32 Q3, [r11, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q4, Q1, Q5
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q5
vqrdmlah.s32 Q6, Q2, r12
vldrw.s32 Q2, [r11, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q5, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r12
vldrw.s32 Q6, [r11, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r10
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q4, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q4, Q4, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q4, r12
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q4, Q5, Q6
vstrw.s32 Q4, [r0, #-80]
vadd.s32 Q5, Q5, Q6
vldrw.s32 Q6, [r11], #80
vqrdmulh.s32 Q4, Q3, Q6
vldrw.s32 Q7, [r11, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q5, [r0, #-96]
vqrdmlah.s32 Q4, Q3, r12
vldrw.s32 Q3, [r11, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q5, Q1, Q4
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q4
vqrdmlah.s32 Q6, Q2, r12
vldrw.s32 Q2, [r11, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q4, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r12
vldrw.s32 Q6, [r11, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r10
vld41.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmulh.s32 Q6, Q5, Q6
vld40.s32 {Q0,Q1,Q2,Q3}, [r0]
vmul.u32 Q5, Q5, Q7
vld42.s32 {Q0,Q1,Q2,Q3}, [r0]
vqrdmlah.s32 Q6, Q5, r12
vld43.s32 {Q0,Q1,Q2,Q3}, [r0]!
vsub.s32 Q5, Q4, Q6
vstrw.s32 Q5, [r0, #-80]
vadd.s32 Q4, Q4, Q6
vldrw.s32 Q6, [r11], #80
vqrdmulh.s32 Q5, Q3, Q6
vldrw.s32 Q7, [r11, #-64]
vmul.u32 Q3, Q3, Q7
vstrw.s32 Q4, [r0, #-96]
vqrdmlah.s32 Q5, Q3, r12
vldrw.s32 Q3, [r11, #-48]
vqrdmulh.s32 Q6, Q2, Q6
vsub.s32 Q4, Q1, Q5
vmul.u32 Q2, Q2, Q7
vadd.s32 Q1, Q1, Q5
vqrdmlah.s32 Q6, Q2, r12
vldrw.s32 Q2, [r11, #-32]
vqrdmulh.s32 Q3, Q1, Q3
vsub.s32 Q5, Q0, Q6
vmul.u32 Q1, Q1, Q2
vadd.s32 Q0, Q0, Q6
vqrdmlah.s32 Q3, Q1, r12
vldrw.s32 Q6, [r11, #-16]
vsub.s32 Q1, Q0, Q3
vstrw.s32 Q1, [r0,#-48]
vadd.s32 Q0, Q0, Q3
vstrw.s32 Q0, [r0, #-64]
vmul.u32 Q7, Q6, r10
vqrdmulh.s32 Q6, Q4, Q6
vmul.u32 Q4, Q4, Q7
vqrdmlah.s32 Q6, Q4, r12
vsub.s32 Q4, Q5, Q6
vstrw.s32 Q4, [r0, #-16]
vadd.s32 Q5, Q5, Q6
vstrw.s32 Q5, [r0, #-32]
// Restore MVE vector registers
vpop {d8-d15}
// Restore GPRs
pop {r4-r11,lr}
bx lr

// Line count:        2857
// Instruction count: 2421