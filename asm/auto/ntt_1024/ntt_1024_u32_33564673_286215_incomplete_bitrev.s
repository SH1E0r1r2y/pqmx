
///
/// Copyright (c) 2021 Arm Limited
/// SPDX-License-Identifier: MIT
///
/// Permission is hereby granted, free of charge, to any person obtaining a copy
/// of this software and associated documentation files (the "Software"), to deal
/// in the Software without restriction, including without limitation the rights
/// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
/// copies of the Software, and to permit persons to whom the Software is
/// furnished to do so, subject to the following conditions:
///
/// The above copyright notice and this permission notice shall be included in all
/// copies or substantial portions of the Software.
///
/// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
/// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
/// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
/// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
/// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
/// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
/// SOFTWARE.
///



///
/// This assembly code has been auto-generated.
/// Don't modify it directly.
///

.data
roots:
.word   32909249 // zeta^  0 * 2^31 = 286215^  0 * 2^31 = 1 * 2^31
.word 2147483711 // zeta^  0 * f(q^(-1) mod 2^32) * 2^31 = 286215^  0 * 71292929 * 2^31
.word   32909249 // zeta^  0 * 2^31 = 286215^  0 * 2^31 = 1 * 2^31
.word 2147483711 // zeta^  0 * f(q^(-1) mod 2^32) * 2^31 = 286215^  0 * 71292929 * 2^31
.word   31671151 // zeta^768 * 2^31 = 286215^768 * 2^31 = 27506971 * 2^31
.word 3907392657 // zeta^768 * f(q^(-1) mod 2^32) * 2^31 = 286215^768 * 71292929 * 2^31
.word   32909249 // zeta^  0 * 2^31 = 286215^  0 * 2^31 = 1 * 2^31
.word 2147483711 // zeta^  0 * f(q^(-1) mod 2^32) * 2^31 = 286215^  0 * 71292929 * 2^31
.word   32909249 // zeta^  0 * 2^31 = 286215^  0 * 2^31 = 1 * 2^31
.word 2147483711 // zeta^  0 * f(q^(-1) mod 2^32) * 2^31 = 286215^  0 * 71292929 * 2^31
.word   31671151 // zeta^768 * 2^31 = 286215^768 * 2^31 = 27506971 * 2^31
.word 3907392657 // zeta^768 * f(q^(-1) mod 2^32) * 2^31 = 286215^768 * 71292929 * 2^31
.word   31671151 // zeta^768 * 2^31 = 286215^768 * 2^31 = 27506971 * 2^31
.word 3907392657 // zeta^768 * f(q^(-1) mod 2^32) * 2^31 = 286215^768 * 71292929 * 2^31
.word   63583873 // zeta^896 * 2^31 = 286215^896 * 2^31 = 29493997 * 2^31
.word 4034523519 // zeta^896 * f(q^(-1) mod 2^32) * 2^31 = 286215^896 * 71292929 * 2^31
.word   22359133 // zeta^640 * 2^31 = 286215^640 * 2^31 = 17398315 * 2^31
.word 3260636067 // zeta^640 * f(q^(-1) mod 2^32) * 2^31 = 286215^640 * 71292929 * 2^31
.word   63583873 // zeta^896 * 2^31 = 286215^896 * 2^31 = 29493997 * 2^31
.word 4034523519 // zeta^896 * f(q^(-1) mod 2^32) * 2^31 = 286215^896 * 71292929 * 2^31
.word   23685711 // zeta^960 * 2^31 = 286215^960 * 2^31 = 10344459 * 2^31
.word 2809327025 // zeta^960 * f(q^(-1) mod 2^32) * 2^31 = 286215^960 * 71292929 * 2^31
.word   43351377 // zeta^704 * 2^31 = 286215^704 * 2^31 = 16978151 * 2^31
.word 3233753775 // zeta^704 * f(q^(-1) mod 2^32) * 2^31 = 286215^704 * 71292929 * 2^31
.word   22359133 // zeta^640 * 2^31 = 286215^640 * 2^31 = 17398315 * 2^31
.word 3260636067 // zeta^640 * f(q^(-1) mod 2^32) * 2^31 = 286215^640 * 71292929 * 2^31
.word   50973647 // zeta^832 * 2^31 = 286215^832 * 2^31 = 22303942 * 2^31
.word 1427016753 // zeta^832 * f(q^(-1) mod 2^32) * 2^31 = 286215^832 * 71292929 * 2^31
.word   47020583 // zeta^576 * 2^31 = 286215^576 * 2^31 = 30033475 * 2^31
.word 4069039577 // zeta^576 * f(q^(-1) mod 2^32) * 2^31 = 286215^576 * 71292929 * 2^31
.word   32909249 // zeta^  0 * 2^31 = 286215^  0 * 2^31 = 1 * 2^31
.word 2147483711 // zeta^  0 * f(q^(-1) mod 2^32) * 2^31 = 286215^  0 * 71292929 * 2^31
.word   32909249 // zeta^  0 * 2^31 = 286215^  0 * 2^31 = 1 * 2^31
.word 2147483711 // zeta^  0 * f(q^(-1) mod 2^32) * 2^31 = 286215^  0 * 71292929 * 2^31
.word   31671151 // zeta^768 * 2^31 = 286215^768 * 2^31 = 27506971 * 2^31
.word 3907392657 // zeta^768 * f(q^(-1) mod 2^32) * 2^31 = 286215^768 * 71292929 * 2^31
.word   31671151 // zeta^768 * 2^31 = 286215^768 * 2^31 = 27506971 * 2^31
.word 3907392657 // zeta^768 * f(q^(-1) mod 2^32) * 2^31 = 286215^768 * 71292929 * 2^31
.word   63583873 // zeta^896 * 2^31 = 286215^896 * 2^31 = 29493997 * 2^31
.word 4034523519 // zeta^896 * f(q^(-1) mod 2^32) * 2^31 = 286215^896 * 71292929 * 2^31
.word   22359133 // zeta^640 * 2^31 = 286215^640 * 2^31 = 17398315 * 2^31
.word 3260636067 // zeta^640 * f(q^(-1) mod 2^32) * 2^31 = 286215^640 * 71292929 * 2^31
.word   63583873 // zeta^896 * 2^31 = 286215^896 * 2^31 = 29493997 * 2^31
.word 4034523519 // zeta^896 * f(q^(-1) mod 2^32) * 2^31 = 286215^896 * 71292929 * 2^31
.word   23685711 // zeta^960 * 2^31 = 286215^960 * 2^31 = 10344459 * 2^31
.word 2809327025 // zeta^960 * f(q^(-1) mod 2^32) * 2^31 = 286215^960 * 71292929 * 2^31
.word   43351377 // zeta^704 * 2^31 = 286215^704 * 2^31 = 16978151 * 2^31
.word 3233753775 // zeta^704 * f(q^(-1) mod 2^32) * 2^31 = 286215^704 * 71292929 * 2^31
.word   22359133 // zeta^640 * 2^31 = 286215^640 * 2^31 = 17398315 * 2^31
.word 3260636067 // zeta^640 * f(q^(-1) mod 2^32) * 2^31 = 286215^640 * 71292929 * 2^31
.word   50973647 // zeta^832 * 2^31 = 286215^832 * 2^31 = 22303942 * 2^31
.word 1427016753 // zeta^832 * f(q^(-1) mod 2^32) * 2^31 = 286215^832 * 71292929 * 2^31
.word   47020583 // zeta^576 * 2^31 = 286215^576 * 2^31 = 30033475 * 2^31
.word 4069039577 // zeta^576 * f(q^(-1) mod 2^32) * 2^31 = 286215^576 * 71292929 * 2^31
.word   23685711 // zeta^960 * 2^31 = 286215^960 * 2^31 = 10344459 * 2^31
.word 2809327025 // zeta^960 * f(q^(-1) mod 2^32) * 2^31 = 286215^960 * 71292929 * 2^31
.word   29829771 // zeta^992 * 2^31 = 286215^992 * 2^31 = 20484768 * 2^31
.word 1310625141 // zeta^992 * f(q^(-1) mod 2^32) * 2^31 = 286215^992 * 71292929 * 2^31
.word   17750767 // zeta^736 * 2^31 = 286215^736 * 2^31 = 23442917 * 2^31
.word 3647372561 // zeta^736 * f(q^(-1) mod 2^32) * 2^31 = 286215^736 * 71292929 * 2^31
.word   43351377 // zeta^704 * 2^31 = 286215^704 * 2^31 = 16978151 * 2^31
.word 3233753775 // zeta^704 * f(q^(-1) mod 2^32) * 2^31 = 286215^704 * 71292929 * 2^31
.word   20957653 // zeta^864 * 2^31 = 286215^864 * 2^31 = 11809804 * 2^31
.word  755596843 // zeta^864 * f(q^(-1) mod 2^32) * 2^31 = 286215^864 * 71292929 * 2^31
.word   37614505 // zeta^608 * 2^31 = 286215^608 * 2^31 = 7756560 * 2^31
.word  496268375 // zeta^608 * f(q^(-1) mod 2^32) * 2^31 = 286215^608 * 71292929 * 2^31
.word   50973647 // zeta^832 * 2^31 = 286215^832 * 2^31 = 22303942 * 2^31
.word 1427016753 // zeta^832 * f(q^(-1) mod 2^32) * 2^31 = 286215^832 * 71292929 * 2^31
.word   49624149 // zeta^928 * 2^31 = 286215^928 * 2^31 = 26214285 * 2^31
.word 3824685995 // zeta^928 * f(q^(-1) mod 2^32) * 2^31 = 286215^928 * 71292929 * 2^31
.word   26256991 // zeta^672 * 2^31 = 286215^672 * 2^31 = 1227325 * 2^31
.word 2226008481 // zeta^672 * f(q^(-1) mod 2^32) * 2^31 = 286215^672 * 71292929 * 2^31
.word   47020583 // zeta^576 * 2^31 = 286215^576 * 2^31 = 30033475 * 2^31
.word 4069039577 // zeta^576 * f(q^(-1) mod 2^32) * 2^31 = 286215^576 * 71292929 * 2^31
.word   16700807 // zeta^800 * 2^31 = 286215^800 * 2^31 = 21664476 * 2^31
.word 1386103417 // zeta^800 * f(q^(-1) mod 2^32) * 2^31 = 286215^800 * 71292929 * 2^31
.word   10816687 // zeta^544 * 2^31 = 286215^544 * 2^31 = 25589677 * 2^31
.word 3784723281 // zeta^544 * f(q^(-1) mod 2^32) * 2^31 = 286215^544 * 71292929 * 2^31
.word   29829771 // zeta^992 * 2^31 = 286215^992 * 2^31 = 20484768 * 2^31
.word 1310625141 // zeta^992 * f(q^(-1) mod 2^32) * 2^31 = 286215^992 * 71292929 * 2^31
.word   50801141 // zeta^1008 * 2^31 = 286215^1008 * 2^31 = 19477423 * 2^31
.word 3393658379 // zeta^1008 * f(q^(-1) mod 2^32) * 2^31 = 286215^1008 * 71292929 * 2^31
.word   34432613 // zeta^752 * 2^31 = 286215^752 * 2^31 = 27454015 * 2^31
.word 3904004507 // zeta^752 * f(q^(-1) mod 2^32) * 2^31 = 286215^752 * 71292929 * 2^31
.word   17750767 // zeta^736 * 2^31 = 286215^736 * 2^31 = 23442917 * 2^31
.word 3647372561 // zeta^736 * f(q^(-1) mod 2^32) * 2^31 = 286215^736 * 71292929 * 2^31
.word   19296927 // zeta^880 * 2^31 = 286215^880 * 2^31 = 24389287 * 2^31
.word 3707921761 // zeta^880 * f(q^(-1) mod 2^32) * 2^31 = 286215^880 * 71292929 * 2^31
.word   15646559 // zeta^624 * 2^31 = 286215^624 * 2^31 = 31786565 * 2^31
.word 4181203105 // zeta^624 * f(q^(-1) mod 2^32) * 2^31 = 286215^624 * 71292929 * 2^31
.word   20957653 // zeta^864 * 2^31 = 286215^864 * 2^31 = 11809804 * 2^31
.word  755596843 // zeta^864 * f(q^(-1) mod 2^32) * 2^31 = 286215^864 * 71292929 * 2^31
.word   49831615 // zeta^944 * 2^31 = 286215^944 * 2^31 = 8413164 * 2^31
.word  538278209 // zeta^944 * f(q^(-1) mod 2^32) * 2^31 = 286215^944 * 71292929 * 2^31
.word   54669671 // zeta^688 * 2^31 = 286215^688 * 2^31 = 24835380 * 2^31
.word 1588979353 // zeta^688 * f(q^(-1) mod 2^32) * 2^31 = 286215^688 * 71292929 * 2^31
.word   37614505 // zeta^608 * 2^31 = 286215^608 * 2^31 = 7756560 * 2^31
.word  496268375 // zeta^608 * f(q^(-1) mod 2^32) * 2^31 = 286215^608 * 71292929 * 2^31
.word   44135817 // zeta^816 * 2^31 = 286215^816 * 2^31 = 12975937 * 2^31
.word 2977690231 // zeta^816 * f(q^(-1) mod 2^32) * 2^31 = 286215^816 * 71292929 * 2^31
.word   24702057 // zeta^560 * 2^31 = 286215^560 * 2^31 = 9759120 * 2^31
.word  624393111 // zeta^560 * f(q^(-1) mod 2^32) * 2^31 = 286215^560 * 71292929 * 2^31
.word   49624149 // zeta^928 * 2^31 = 286215^928 * 2^31 = 26214285 * 2^31
.word 3824685995 // zeta^928 * f(q^(-1) mod 2^32) * 2^31 = 286215^928 * 71292929 * 2^31
.word   27214985 // zeta^976 * 2^31 = 286215^976 * 2^31 = 7037169 * 2^31
.word 2597725047 // zeta^976 * f(q^(-1) mod 2^32) * 2^31 = 286215^976 * 71292929 * 2^31
.word   40167763 // zeta^720 * 2^31 = 286215^720 * 2^31 = 8735396 * 2^31
.word  558894765 // zeta^720 * f(q^(-1) mod 2^32) * 2^31 = 286215^720 * 71292929 * 2^31
.word   26256991 // zeta^672 * 2^31 = 286215^672 * 2^31 = 1227325 * 2^31
.word 2226008481 // zeta^672 * f(q^(-1) mod 2^32) * 2^31 = 286215^672 * 71292929 * 2^31
.word    5600575 // zeta^848 * 2^31 = 286215^848 * 2^31 = 3732990 * 2^31
.word  238838465 // zeta^848 * f(q^(-1) mod 2^32) * 2^31 = 286215^848 * 71292929 * 2^31
.word   53619655 // zeta^592 * 2^31 = 286215^592 * 2^31 = 18327945 * 2^31
.word 3320114233 // zeta^592 * f(q^(-1) mod 2^32) * 2^31 = 286215^592 * 71292929 * 2^31
.word   16700807 // zeta^800 * 2^31 = 286215^800 * 2^31 = 21664476 * 2^31
.word 1386103417 // zeta^800 * f(q^(-1) mod 2^32) * 2^31 = 286215^800 * 71292929 * 2^31
.word   64695847 // zeta^912 * 2^31 = 286215^912 * 2^31 = 5665384 * 2^31
.word  362473945 // zeta^912 * f(q^(-1) mod 2^32) * 2^31 = 286215^912 * 71292929 * 2^31
.word   42330409 // zeta^656 * 2^31 = 286215^656 * 2^31 = 32426145 * 2^31
.word 4222123735 // zeta^656 * f(q^(-1) mod 2^32) * 2^31 = 286215^656 * 71292929 * 2^31
.word   10816687 // zeta^544 * 2^31 = 286215^544 * 2^31 = 25589677 * 2^31
.word 3784723281 // zeta^544 * f(q^(-1) mod 2^32) * 2^31 = 286215^544 * 71292929 * 2^31
.word   10468161 // zeta^784 * 2^31 = 286215^784 * 2^31 = 8491986 * 2^31
.word  543321279 // zeta^784 * f(q^(-1) mod 2^32) * 2^31 = 286215^784 * 71292929 * 2^31
.word   32014745 // zeta^528 * 2^31 = 286215^528 * 2^31 = 2121761 * 2^31
.word 2283234919 // zeta^528 * f(q^(-1) mod 2^32) * 2^31 = 286215^528 * 71292929 * 2^31
.word   32909249 // zeta^  0 * 2^31 = 286215^  0 * 2^31 = 1 * 2^31
.word 2147483711 // zeta^  0 * f(q^(-1) mod 2^32) * 2^31 = 286215^  0 * 71292929 * 2^31
.word   32909249 // zeta^  0 * 2^31 = 286215^  0 * 2^31 = 1 * 2^31
.word 2147483711 // zeta^  0 * f(q^(-1) mod 2^32) * 2^31 = 286215^  0 * 71292929 * 2^31
.word   31671151 // zeta^768 * 2^31 = 286215^768 * 2^31 = 27506971 * 2^31
.word 3907392657 // zeta^768 * f(q^(-1) mod 2^32) * 2^31 = 286215^768 * 71292929 * 2^31
.word   31671151 // zeta^768 * 2^31 = 286215^768 * 2^31 = 27506971 * 2^31
.word 3907392657 // zeta^768 * f(q^(-1) mod 2^32) * 2^31 = 286215^768 * 71292929 * 2^31
.word   63583873 // zeta^896 * 2^31 = 286215^896 * 2^31 = 29493997 * 2^31
.word 4034523519 // zeta^896 * f(q^(-1) mod 2^32) * 2^31 = 286215^896 * 71292929 * 2^31
.word   22359133 // zeta^640 * 2^31 = 286215^640 * 2^31 = 17398315 * 2^31
.word 3260636067 // zeta^640 * f(q^(-1) mod 2^32) * 2^31 = 286215^640 * 71292929 * 2^31
.word   63583873 // zeta^896 * 2^31 = 286215^896 * 2^31 = 29493997 * 2^31
.word 4034523519 // zeta^896 * f(q^(-1) mod 2^32) * 2^31 = 286215^896 * 71292929 * 2^31
.word   23685711 // zeta^960 * 2^31 = 286215^960 * 2^31 = 10344459 * 2^31
.word 2809327025 // zeta^960 * f(q^(-1) mod 2^32) * 2^31 = 286215^960 * 71292929 * 2^31
.word   43351377 // zeta^704 * 2^31 = 286215^704 * 2^31 = 16978151 * 2^31
.word 3233753775 // zeta^704 * f(q^(-1) mod 2^32) * 2^31 = 286215^704 * 71292929 * 2^31
.word   22359133 // zeta^640 * 2^31 = 286215^640 * 2^31 = 17398315 * 2^31
.word 3260636067 // zeta^640 * f(q^(-1) mod 2^32) * 2^31 = 286215^640 * 71292929 * 2^31
.word   50973647 // zeta^832 * 2^31 = 286215^832 * 2^31 = 22303942 * 2^31
.word 1427016753 // zeta^832 * f(q^(-1) mod 2^32) * 2^31 = 286215^832 * 71292929 * 2^31
.word   47020583 // zeta^576 * 2^31 = 286215^576 * 2^31 = 30033475 * 2^31
.word 4069039577 // zeta^576 * f(q^(-1) mod 2^32) * 2^31 = 286215^576 * 71292929 * 2^31
.word   23685711 // zeta^960 * 2^31 = 286215^960 * 2^31 = 10344459 * 2^31
.word 2809327025 // zeta^960 * f(q^(-1) mod 2^32) * 2^31 = 286215^960 * 71292929 * 2^31
.word   29829771 // zeta^992 * 2^31 = 286215^992 * 2^31 = 20484768 * 2^31
.word 1310625141 // zeta^992 * f(q^(-1) mod 2^32) * 2^31 = 286215^992 * 71292929 * 2^31
.word   17750767 // zeta^736 * 2^31 = 286215^736 * 2^31 = 23442917 * 2^31
.word 3647372561 // zeta^736 * f(q^(-1) mod 2^32) * 2^31 = 286215^736 * 71292929 * 2^31
.word   43351377 // zeta^704 * 2^31 = 286215^704 * 2^31 = 16978151 * 2^31
.word 3233753775 // zeta^704 * f(q^(-1) mod 2^32) * 2^31 = 286215^704 * 71292929 * 2^31
.word   20957653 // zeta^864 * 2^31 = 286215^864 * 2^31 = 11809804 * 2^31
.word  755596843 // zeta^864 * f(q^(-1) mod 2^32) * 2^31 = 286215^864 * 71292929 * 2^31
.word   37614505 // zeta^608 * 2^31 = 286215^608 * 2^31 = 7756560 * 2^31
.word  496268375 // zeta^608 * f(q^(-1) mod 2^32) * 2^31 = 286215^608 * 71292929 * 2^31
.word   50973647 // zeta^832 * 2^31 = 286215^832 * 2^31 = 22303942 * 2^31
.word 1427016753 // zeta^832 * f(q^(-1) mod 2^32) * 2^31 = 286215^832 * 71292929 * 2^31
.word   49624149 // zeta^928 * 2^31 = 286215^928 * 2^31 = 26214285 * 2^31
.word 3824685995 // zeta^928 * f(q^(-1) mod 2^32) * 2^31 = 286215^928 * 71292929 * 2^31
.word   26256991 // zeta^672 * 2^31 = 286215^672 * 2^31 = 1227325 * 2^31
.word 2226008481 // zeta^672 * f(q^(-1) mod 2^32) * 2^31 = 286215^672 * 71292929 * 2^31
.word   47020583 // zeta^576 * 2^31 = 286215^576 * 2^31 = 30033475 * 2^31
.word 4069039577 // zeta^576 * f(q^(-1) mod 2^32) * 2^31 = 286215^576 * 71292929 * 2^31
.word   16700807 // zeta^800 * 2^31 = 286215^800 * 2^31 = 21664476 * 2^31
.word 1386103417 // zeta^800 * f(q^(-1) mod 2^32) * 2^31 = 286215^800 * 71292929 * 2^31
.word   10816687 // zeta^544 * 2^31 = 286215^544 * 2^31 = 25589677 * 2^31
.word 3784723281 // zeta^544 * f(q^(-1) mod 2^32) * 2^31 = 286215^544 * 71292929 * 2^31
.word   29829771 // zeta^992 * 2^31 = 286215^992 * 2^31 = 20484768 * 2^31
.word 1310625141 // zeta^992 * f(q^(-1) mod 2^32) * 2^31 = 286215^992 * 71292929 * 2^31
.word   50801141 // zeta^1008 * 2^31 = 286215^1008 * 2^31 = 19477423 * 2^31
.word 3393658379 // zeta^1008 * f(q^(-1) mod 2^32) * 2^31 = 286215^1008 * 71292929 * 2^31
.word   34432613 // zeta^752 * 2^31 = 286215^752 * 2^31 = 27454015 * 2^31
.word 3904004507 // zeta^752 * f(q^(-1) mod 2^32) * 2^31 = 286215^752 * 71292929 * 2^31
.word   17750767 // zeta^736 * 2^31 = 286215^736 * 2^31 = 23442917 * 2^31
.word 3647372561 // zeta^736 * f(q^(-1) mod 2^32) * 2^31 = 286215^736 * 71292929 * 2^31
.word   19296927 // zeta^880 * 2^31 = 286215^880 * 2^31 = 24389287 * 2^31
.word 3707921761 // zeta^880 * f(q^(-1) mod 2^32) * 2^31 = 286215^880 * 71292929 * 2^31
.word   15646559 // zeta^624 * 2^31 = 286215^624 * 2^31 = 31786565 * 2^31
.word 4181203105 // zeta^624 * f(q^(-1) mod 2^32) * 2^31 = 286215^624 * 71292929 * 2^31
.word   20957653 // zeta^864 * 2^31 = 286215^864 * 2^31 = 11809804 * 2^31
.word  755596843 // zeta^864 * f(q^(-1) mod 2^32) * 2^31 = 286215^864 * 71292929 * 2^31
.word   49831615 // zeta^944 * 2^31 = 286215^944 * 2^31 = 8413164 * 2^31
.word  538278209 // zeta^944 * f(q^(-1) mod 2^32) * 2^31 = 286215^944 * 71292929 * 2^31
.word   54669671 // zeta^688 * 2^31 = 286215^688 * 2^31 = 24835380 * 2^31
.word 1588979353 // zeta^688 * f(q^(-1) mod 2^32) * 2^31 = 286215^688 * 71292929 * 2^31
.word   37614505 // zeta^608 * 2^31 = 286215^608 * 2^31 = 7756560 * 2^31
.word  496268375 // zeta^608 * f(q^(-1) mod 2^32) * 2^31 = 286215^608 * 71292929 * 2^31
.word   44135817 // zeta^816 * 2^31 = 286215^816 * 2^31 = 12975937 * 2^31
.word 2977690231 // zeta^816 * f(q^(-1) mod 2^32) * 2^31 = 286215^816 * 71292929 * 2^31
.word   24702057 // zeta^560 * 2^31 = 286215^560 * 2^31 = 9759120 * 2^31
.word  624393111 // zeta^560 * f(q^(-1) mod 2^32) * 2^31 = 286215^560 * 71292929 * 2^31
.word   49624149 // zeta^928 * 2^31 = 286215^928 * 2^31 = 26214285 * 2^31
.word 3824685995 // zeta^928 * f(q^(-1) mod 2^32) * 2^31 = 286215^928 * 71292929 * 2^31
.word   27214985 // zeta^976 * 2^31 = 286215^976 * 2^31 = 7037169 * 2^31
.word 2597725047 // zeta^976 * f(q^(-1) mod 2^32) * 2^31 = 286215^976 * 71292929 * 2^31
.word   40167763 // zeta^720 * 2^31 = 286215^720 * 2^31 = 8735396 * 2^31
.word  558894765 // zeta^720 * f(q^(-1) mod 2^32) * 2^31 = 286215^720 * 71292929 * 2^31
.word   26256991 // zeta^672 * 2^31 = 286215^672 * 2^31 = 1227325 * 2^31
.word 2226008481 // zeta^672 * f(q^(-1) mod 2^32) * 2^31 = 286215^672 * 71292929 * 2^31
.word    5600575 // zeta^848 * 2^31 = 286215^848 * 2^31 = 3732990 * 2^31
.word  238838465 // zeta^848 * f(q^(-1) mod 2^32) * 2^31 = 286215^848 * 71292929 * 2^31
.word   53619655 // zeta^592 * 2^31 = 286215^592 * 2^31 = 18327945 * 2^31
.word 3320114233 // zeta^592 * f(q^(-1) mod 2^32) * 2^31 = 286215^592 * 71292929 * 2^31
.word   16700807 // zeta^800 * 2^31 = 286215^800 * 2^31 = 21664476 * 2^31
.word 1386103417 // zeta^800 * f(q^(-1) mod 2^32) * 2^31 = 286215^800 * 71292929 * 2^31
.word   64695847 // zeta^912 * 2^31 = 286215^912 * 2^31 = 5665384 * 2^31
.word  362473945 // zeta^912 * f(q^(-1) mod 2^32) * 2^31 = 286215^912 * 71292929 * 2^31
.word   42330409 // zeta^656 * 2^31 = 286215^656 * 2^31 = 32426145 * 2^31
.word 4222123735 // zeta^656 * f(q^(-1) mod 2^32) * 2^31 = 286215^656 * 71292929 * 2^31
.word   10816687 // zeta^544 * 2^31 = 286215^544 * 2^31 = 25589677 * 2^31
.word 3784723281 // zeta^544 * f(q^(-1) mod 2^32) * 2^31 = 286215^544 * 71292929 * 2^31
.word   10468161 // zeta^784 * 2^31 = 286215^784 * 2^31 = 8491986 * 2^31
.word  543321279 // zeta^784 * f(q^(-1) mod 2^32) * 2^31 = 286215^784 * 71292929 * 2^31
.word   32014745 // zeta^528 * 2^31 = 286215^528 * 2^31 = 2121761 * 2^31
.word 2283234919 // zeta^528 * f(q^(-1) mod 2^32) * 2^31 = 286215^528 * 71292929 * 2^31
.word   50801141 // zeta^1008 * 2^31 = 286215^1008 * 2^31 = 19477423 * 2^31
.word 3393658379 // zeta^1008 * f(q^(-1) mod 2^32) * 2^31 = 286215^1008 * 71292929 * 2^31
.word   42676385 // zeta^1016 * 2^31 = 286215^1016 * 2^31 = 4406558 * 2^31
.word  281933663 // zeta^1016 * f(q^(-1) mod 2^32) * 2^31 = 286215^1016 * 71292929 * 2^31
.word   28237813 // zeta^760 * 2^31 = 286215^760 * 2^31 = 15781 * 2^31
.word 2148493323 // zeta^760 * f(q^(-1) mod 2^32) * 2^31 = 286215^760 * 71292929 * 2^31
.word   34432613 // zeta^752 * 2^31 = 286215^752 * 2^31 = 27454015 * 2^31
.word 3904004507 // zeta^752 * f(q^(-1) mod 2^32) * 2^31 = 286215^752 * 71292929 * 2^31
.word   49494049 // zeta^888 * 2^31 = 286215^888 * 2^31 = 29780798 * 2^31
.word 1905389535 // zeta^888 * f(q^(-1) mod 2^32) * 2^31 = 286215^888 * 71292929 * 2^31
.word   34765151 // zeta^632 * 2^31 = 286215^632 * 2^31 = 3446166 * 2^31
.word  220487329 // zeta^632 * f(q^(-1) mod 2^32) * 2^31 = 286215^632 * 71292929 * 2^31
.word   19296927 // zeta^880 * 2^31 = 286215^880 * 2^31 = 24389287 * 2^31
.word 3707921761 // zeta^880 * f(q^(-1) mod 2^32) * 2^31 = 286215^880 * 71292929 * 2^31
.word   54213995 // zeta^952 * 2^31 = 286215^952 * 2^31 = 14583628 * 2^31
.word  933067413 // zeta^952 * f(q^(-1) mod 2^32) * 2^31 = 286215^952 * 71292929 * 2^31
.word    8006763 // zeta^696 * 2^31 = 286215^696 * 2^31 = 20902680 * 2^31
.word 1337363349 // zeta^696 * f(q^(-1) mod 2^32) * 2^31 = 286215^696 * 71292929 * 2^31
.word   15646559 // zeta^624 * 2^31 = 286215^624 * 2^31 = 31786565 * 2^31
.word 4181203105 // zeta^624 * f(q^(-1) mod 2^32) * 2^31 = 286215^624 * 71292929 * 2^31
.word   15970361 // zeta^824 * 2^31 = 286215^824 * 2^31 = 8478458 * 2^31
.word  542455751 // zeta^824 * f(q^(-1) mod 2^32) * 2^31 = 286215^824 * 71292929 * 2^31
.word    4170189 // zeta^568 * 2^31 = 286215^568 * 2^31 = 19347624 * 2^31
.word 1237870131 // zeta^568 * f(q^(-1) mod 2^32) * 2^31 = 286215^568 * 71292929 * 2^31
.word   49831615 // zeta^944 * 2^31 = 286215^944 * 2^31 = 8413164 * 2^31
.word  538278209 // zeta^944 * f(q^(-1) mod 2^32) * 2^31 = 286215^944 * 71292929 * 2^31
.word    5906831 // zeta^984 * 2^31 = 286215^984 * 2^31 = 30717302 * 2^31
.word 1965307505 // zeta^984 * f(q^(-1) mod 2^32) * 2^31 = 286215^984 * 71292929 * 2^31
.word   32641999 // zeta^728 * 2^31 = 286215^728 * 2^31 = 8758145 * 2^31
.word 2707833905 // zeta^728 * f(q^(-1) mod 2^32) * 2^31 = 286215^728 * 71292929 * 2^31
.word   54669671 // zeta^688 * 2^31 = 286215^688 * 2^31 = 24835380 * 2^31
.word 1588979353 // zeta^688 * f(q^(-1) mod 2^32) * 2^31 = 286215^688 * 71292929 * 2^31
.word   30303273 // zeta^856 * 2^31 = 286215^856 * 2^31 = 4089071 * 2^31
.word 2409104343 // zeta^856 * f(q^(-1) mod 2^32) * 2^31 = 286215^856 * 71292929 * 2^31
.word   53563597 // zeta^600 * 2^31 = 286215^600 * 2^31 = 19452428 * 2^31
.word 1244575539 // zeta^600 * f(q^(-1) mod 2^32) * 2^31 = 286215^600 * 71292929 * 2^31
.word   44135817 // zeta^816 * 2^31 = 286215^816 * 2^31 = 12975937 * 2^31
.word 2977690231 // zeta^816 * f(q^(-1) mod 2^32) * 2^31 = 286215^816 * 71292929 * 2^31
.word   27877887 // zeta^920 * 2^31 = 286215^920 * 2^31 = 31965169 * 2^31
.word 4192630273 // zeta^920 * f(q^(-1) mod 2^32) * 2^31 = 286215^920 * 71292929 * 2^31
.word   54874279 // zeta^664 * 2^31 = 286215^664 * 2^31 = 3036860 * 2^31
.word  194299737 // zeta^664 * f(q^(-1) mod 2^32) * 2^31 = 286215^664 * 71292929 * 2^31
.word   24702057 // zeta^560 * 2^31 = 286215^560 * 2^31 = 9759120 * 2^31
.word  624393111 // zeta^560 * f(q^(-1) mod 2^32) * 2^31 = 286215^560 * 71292929 * 2^31
.word   11789331 // zeta^792 * 2^31 = 286215^792 * 2^31 = 19452799 * 2^31
.word 3392082925 // zeta^792 * f(q^(-1) mod 2^32) * 2^31 = 286215^792 * 71292929 * 2^31
.word    5622871 // zeta^536 * 2^31 = 286215^536 * 2^31 = 30901251 * 2^31
.word 4124560297 // zeta^536 * f(q^(-1) mod 2^32) * 2^31 = 286215^536 * 71292929 * 2^31
.word   27214985 // zeta^976 * 2^31 = 286215^976 * 2^31 = 7037169 * 2^31
.word 2597725047 // zeta^976 * f(q^(-1) mod 2^32) * 2^31 = 286215^976 * 71292929 * 2^31
.word   30990117 // zeta^1000 * 2^31 = 286215^1000 * 2^31 = 988369 * 2^31
.word 2210719963 // zeta^1000 * f(q^(-1) mod 2^32) * 2^31 = 286215^1000 * 71292929 * 2^31
.word   34156189 // zeta^744 * 2^31 = 286215^744 * 2^31 = 21501702 * 2^31
.word 1375689059 // zeta^744 * f(q^(-1) mod 2^32) * 2^31 = 286215^744 * 71292929 * 2^31
.word   40167763 // zeta^720 * 2^31 = 286215^720 * 2^31 = 8735396 * 2^31
.word  558894765 // zeta^720 * f(q^(-1) mod 2^32) * 2^31 = 286215^720 * 71292929 * 2^31
.word   50516355 // zeta^872 * 2^31 = 286215^872 * 2^31 = 255720 * 2^31
.word   16361085 // zeta^872 * f(q^(-1) mod 2^32) * 2^31 = 286215^872 * 71292929 * 2^31
.word   26091531 // zeta^616 * 2^31 = 286215^616 * 2^31 = 1232856 * 2^31
.word   78878709 // zeta^616 * f(q^(-1) mod 2^32) * 2^31 = 286215^616 * 71292929 * 2^31
.word    5600575 // zeta^848 * 2^31 = 286215^848 * 2^31 = 3732990 * 2^31
.word  238838465 // zeta^848 * f(q^(-1) mod 2^32) * 2^31 = 286215^848 * 71292929 * 2^31
.word    4276741 // zeta^936 * 2^31 = 286215^936 * 2^31 = 7554841 * 2^31
.word 2630845947 // zeta^936 * f(q^(-1) mod 2^32) * 2^31 = 286215^936 * 71292929 * 2^31
.word   39557271 // zeta^680 * 2^31 = 286215^680 * 2^31 = 19859369 * 2^31
.word 3418095465 // zeta^680 * f(q^(-1) mod 2^32) * 2^31 = 286215^680 * 71292929 * 2^31
.word   53619655 // zeta^592 * 2^31 = 286215^592 * 2^31 = 18327945 * 2^31
.word 3320114233 // zeta^592 * f(q^(-1) mod 2^32) * 2^31 = 286215^592 * 71292929 * 2^31
.word   64080051 // zeta^808 * 2^31 = 286215^808 * 2^31 = 19611677 * 2^31
.word 3402248013 // zeta^808 * f(q^(-1) mod 2^32) * 2^31 = 286215^808 * 71292929 * 2^31
.word   40363327 // zeta^552 * 2^31 = 286215^552 * 2^31 = 28756497 * 2^31
.word 3987337921 // zeta^552 * f(q^(-1) mod 2^32) * 2^31 = 286215^552 * 71292929 * 2^31
.word   64695847 // zeta^912 * 2^31 = 286215^912 * 2^31 = 5665384 * 2^31
.word  362473945 // zeta^912 * f(q^(-1) mod 2^32) * 2^31 = 286215^912 * 71292929 * 2^31
.word   14946375 // zeta^968 * 2^31 = 286215^968 * 2^31 = 30392408 * 2^31
.word 1944520633 // zeta^968 * f(q^(-1) mod 2^32) * 2^31 = 286215^968 * 71292929 * 2^31
.word   53251923 // zeta^712 * 2^31 = 286215^712 * 2^31 = 21625705 * 2^31
.word 3531106477 // zeta^712 * f(q^(-1) mod 2^32) * 2^31 = 286215^712 * 71292929 * 2^31
.word   42330409 // zeta^656 * 2^31 = 286215^656 * 2^31 = 32426145 * 2^31
.word 4222123735 // zeta^656 * f(q^(-1) mod 2^32) * 2^31 = 286215^656 * 71292929 * 2^31
.word   60760121 // zeta^840 * 2^31 = 286215^840 * 2^31 = 27051869 * 2^31
.word 3878275015 // zeta^840 * f(q^(-1) mod 2^32) * 2^31 = 286215^840 * 71292929 * 2^31
.word   40454739 // zeta^584 * 2^31 = 286215^584 * 2^31 = 4314075 * 2^31
.word 2423500205 // zeta^584 * f(q^(-1) mod 2^32) * 2^31 = 286215^584 * 71292929 * 2^31
.word   10468161 // zeta^784 * 2^31 = 286215^784 * 2^31 = 8491986 * 2^31
.word  543321279 // zeta^784 * f(q^(-1) mod 2^32) * 2^31 = 286215^784 * 71292929 * 2^31
.word   55066963 // zeta^904 * 2^31 = 286215^904 * 2^31 = 10010313 * 2^31
.word 2787948205 // zeta^904 * f(q^(-1) mod 2^32) * 2^31 = 286215^904 * 71292929 * 2^31
.word   62067539 // zeta^648 * 2^31 = 286215^648 * 2^31 = 22700705 * 2^31
.word 3599885485 // zeta^648 * f(q^(-1) mod 2^32) * 2^31 = 286215^648 * 71292929 * 2^31
.word   32014745 // zeta^528 * 2^31 = 286215^528 * 2^31 = 2121761 * 2^31
.word 2283234919 // zeta^528 * f(q^(-1) mod 2^32) * 2^31 = 286215^528 * 71292929 * 2^31
.word   57896497 // zeta^776 * 2^31 = 286215^776 * 2^31 = 14033313 * 2^31
.word 3045341647 // zeta^776 * f(q^(-1) mod 2^32) * 2^31 = 286215^776 * 71292929 * 2^31
.word   59857581 // zeta^520 * 2^31 = 286215^520 * 2^31 = 21856450 * 2^31
.word 1398386003 // zeta^520 * f(q^(-1) mod 2^32) * 2^31 = 286215^520 * 71292929 * 2^31
.word   42676385 // zeta^1016 * 2^31 = 286215^1016 * 2^31 = 4406558 * 2^31
.word  281933663 // zeta^1016 * f(q^(-1) mod 2^32) * 2^31 = 286215^1016 * 71292929 * 2^31
.word   46825465 // zeta^1020 * 2^31 = 286215^1020 * 2^31 = 16508237 * 2^31
.word 3203688455 // zeta^1020 * f(q^(-1) mod 2^32) * 2^31 = 286215^1020 * 71292929 * 2^31
.word   36459513 // zeta^764 * 2^31 = 286215^764 * 2^31 = 2280712 * 2^31
.word  145921031 // zeta^764 * f(q^(-1) mod 2^32) * 2^31 = 286215^764 * 71292929 * 2^31
.word   28237813 // zeta^760 * 2^31 = 286215^760 * 2^31 = 15781 * 2^31
.word 2148493323 // zeta^760 * f(q^(-1) mod 2^32) * 2^31 = 286215^760 * 71292929 * 2^31
.word   31181531 // zeta^892 * 2^31 = 286215^892 * 2^31 = 13396396 * 2^31
.word  857107749 // zeta^892 * f(q^(-1) mod 2^32) * 2^31 = 286215^892 * 71292929 * 2^31
.word   30379019 // zeta^636 * 2^31 = 286215^636 * 2^31 = 16079834 * 2^31
.word 1028795381 // zeta^636 * f(q^(-1) mod 2^32) * 2^31 = 286215^636 * 71292929 * 2^31
.word   49494049 // zeta^888 * 2^31 = 286215^888 * 2^31 = 29780798 * 2^31
.word 1905389535 // zeta^888 * f(q^(-1) mod 2^32) * 2^31 = 286215^888 * 71292929 * 2^31
.word   22115117 // zeta^956 * 2^31 = 286215^956 * 2^31 = 15059014 * 2^31
.word  963482835 // zeta^956 * f(q^(-1) mod 2^32) * 2^31 = 286215^956 * 71292929 * 2^31
.word   58687131 // zeta^700 * 2^31 = 286215^700 * 2^31 = 22429089 * 2^31
.word 3582507365 // zeta^700 * f(q^(-1) mod 2^32) * 2^31 = 286215^700 * 71292929 * 2^31
.word   34765151 // zeta^632 * 2^31 = 286215^632 * 2^31 = 3446166 * 2^31
.word  220487329 // zeta^632 * f(q^(-1) mod 2^32) * 2^31 = 286215^632 * 71292929 * 2^31
.word   31362151 // zeta^828 * 2^31 = 286215^828 * 2^31 = 3754664 * 2^31
.word  240225177 // zeta^828 * f(q^(-1) mod 2^32) * 2^31 = 286215^828 * 71292929 * 2^31
.word   29454233 // zeta^572 * 2^31 = 286215^572 * 2^31 = 28695573 * 2^31
.word 3983439975 // zeta^572 * f(q^(-1) mod 2^32) * 2^31 = 286215^572 * 71292929 * 2^31
.word   54213995 // zeta^952 * 2^31 = 286215^952 * 2^31 = 14583628 * 2^31
.word  933067413 // zeta^952 * f(q^(-1) mod 2^32) * 2^31 = 286215^952 * 71292929 * 2^31
.word   12244249 // zeta^988 * 2^31 = 286215^988 * 2^31 = 1656389 * 2^31
.word 2253460199 // zeta^988 * f(q^(-1) mod 2^32) * 2^31 = 286215^988 * 71292929 * 2^31
.word   41856427 // zeta^732 * 2^31 = 286215^732 * 2^31 = 13082561 * 2^31
.word 2984512085 // zeta^732 * f(q^(-1) mod 2^32) * 2^31 = 286215^732 * 71292929 * 2^31
.word    8006763 // zeta^696 * 2^31 = 286215^696 * 2^31 = 20902680 * 2^31
.word 1337363349 // zeta^696 * f(q^(-1) mod 2^32) * 2^31 = 286215^696 * 71292929 * 2^31
.word   61228467 // zeta^860 * 2^31 = 286215^860 * 2^31 = 16386641 * 2^31
.word 3195908685 // zeta^860 * f(q^(-1) mod 2^32) * 2^31 = 286215^860 * 71292929 * 2^31
.word   27503845 // zeta^604 * 2^31 = 286215^604 * 2^31 = 17864119 * 2^31
.word 3290438427 // zeta^604 * f(q^(-1) mod 2^32) * 2^31 = 286215^604 * 71292929 * 2^31
.word   15970361 // zeta^824 * 2^31 = 286215^824 * 2^31 = 8478458 * 2^31
.word  542455751 // zeta^824 * f(q^(-1) mod 2^32) * 2^31 = 286215^824 * 71292929 * 2^31
.word   11828069 // zeta^924 * 2^31 = 286215^924 * 2^31 = 18178781 * 2^31
.word 3310570651 // zeta^924 * f(q^(-1) mod 2^32) * 2^31 = 286215^924 * 71292929 * 2^31
.word   26556411 // zeta^668 * 2^31 = 286215^668 * 2^31 = 26330978 * 2^31
.word 1684668421 // zeta^668 * f(q^(-1) mod 2^32) * 2^31 = 286215^668 * 71292929 * 2^31
.word    4170189 // zeta^568 * 2^31 = 286215^568 * 2^31 = 19347624 * 2^31
.word 1237870131 // zeta^568 * f(q^(-1) mod 2^32) * 2^31 = 286215^568 * 71292929 * 2^31
.word   51861145 // zeta^796 * 2^31 = 286215^796 * 2^31 = 6343125 * 2^31
.word 2553319783 // zeta^796 * f(q^(-1) mod 2^32) * 2^31 = 286215^796 * 71292929 * 2^31
.word   36544089 // zeta^540 * 2^31 = 286215^540 * 2^31 = 9522304 * 2^31
.word  609241511 // zeta^540 * f(q^(-1) mod 2^32) * 2^31 = 286215^540 * 71292929 * 2^31
.word    5906831 // zeta^984 * 2^31 = 286215^984 * 2^31 = 30717302 * 2^31
.word 1965307505 // zeta^984 * f(q^(-1) mod 2^32) * 2^31 = 286215^984 * 71292929 * 2^31
.word   22546241 // zeta^1004 * 2^31 = 286215^1004 * 2^31 = 28199455 * 2^31
.word 3951698111 // zeta^1004 * f(q^(-1) mod 2^32) * 2^31 = 286215^1004 * 71292929 * 2^31
.word   38046867 // zeta^748 * 2^31 = 286215^748 * 2^31 = 17555098 * 2^31
.word 1123183469 // zeta^748 * f(q^(-1) mod 2^32) * 2^31 = 286215^748 * 71292929 * 2^31
.word   32641999 // zeta^728 * 2^31 = 286215^728 * 2^31 = 8758145 * 2^31
.word 2707833905 // zeta^728 * f(q^(-1) mod 2^32) * 2^31 = 286215^728 * 71292929 * 2^31
.word   27734805 // zeta^876 * 2^31 = 286215^876 * 2^31 = 1331690 * 2^31
.word   85202155 // zeta^876 * f(q^(-1) mod 2^32) * 2^31 = 286215^876 * 71292929 * 2^31
.word   28876291 // zeta^620 * 2^31 = 286215^620 * 2^31 = 19461786 * 2^31
.word 1245174269 // zeta^620 * f(q^(-1) mod 2^32) * 2^31 = 286215^620 * 71292929 * 2^31
.word   30303273 // zeta^856 * 2^31 = 286215^856 * 2^31 = 4089071 * 2^31
.word 2409104343 // zeta^856 * f(q^(-1) mod 2^32) * 2^31 = 286215^856 * 71292929 * 2^31
.word   37621937 // zeta^940 * 2^31 = 286215^940 * 2^31 = 16812647 * 2^31
.word 3223164751 // zeta^940 * f(q^(-1) mod 2^32) * 2^31 = 286215^940 * 71292929 * 2^31
.word    1992249 // zeta^684 * 2^31 = 286215^684 * 2^31 = 20349512 * 2^31
.word 1301971399 // zeta^684 * f(q^(-1) mod 2^32) * 2^31 = 286215^684 * 71292929 * 2^31
.word   53563597 // zeta^600 * 2^31 = 286215^600 * 2^31 = 19452428 * 2^31
.word 1244575539 // zeta^600 * f(q^(-1) mod 2^32) * 2^31 = 286215^600 * 71292929 * 2^31
.word   59370589 // zeta^812 * 2^31 = 286215^812 * 2^31 = 33077723 * 2^31
.word 4263812003 // zeta^812 * f(q^(-1) mod 2^32) * 2^31 = 286215^812 * 71292929 * 2^31
.word   62535263 // zeta^556 * 2^31 = 286215^556 * 2^31 = 266968 * 2^31
.word   17080737 // zeta^556 * f(q^(-1) mod 2^32) * 2^31 = 286215^556 * 71292929 * 2^31
.word   27877887 // zeta^920 * 2^31 = 286215^920 * 2^31 = 31965169 * 2^31
.word 4192630273 // zeta^920 * f(q^(-1) mod 2^32) * 2^31 = 286215^920 * 71292929 * 2^31
.word   17316887 // zeta^972 * 2^31 = 286215^972 * 2^31 = 26905985 * 2^31
.word 3868941289 // zeta^972 * f(q^(-1) mod 2^32) * 2^31 = 286215^972 * 71292929 * 2^31
.word   37759397 // zeta^716 * 2^31 = 286215^716 * 2^31 = 1837226 * 2^31
.word  117546587 // zeta^716 * f(q^(-1) mod 2^32) * 2^31 = 286215^716 * 71292929 * 2^31
.word   54874279 // zeta^664 * 2^31 = 286215^664 * 2^31 = 3036860 * 2^31
.word  194299737 // zeta^664 * f(q^(-1) mod 2^32) * 2^31 = 286215^664 * 71292929 * 2^31
.word   49424125 // zeta^844 * 2^31 = 286215^844 * 2^31 = 8363900 * 2^31
.word  535126275 // zeta^844 * f(q^(-1) mod 2^32) * 2^31 = 286215^844 * 71292929 * 2^31
.word   27346539 // zeta^588 * 2^31 = 286215^588 * 2^31 = 27959065 * 2^31
.word 3936317845 // zeta^588 * f(q^(-1) mod 2^32) * 2^31 = 286215^588 * 71292929 * 2^31
.word   11789331 // zeta^792 * 2^31 = 286215^792 * 2^31 = 19452799 * 2^31
.word 3392082925 // zeta^792 * f(q^(-1) mod 2^32) * 2^31 = 286215^792 * 71292929 * 2^31
.word   40459631 // zeta^908 * 2^31 = 286215^908 * 2^31 = 24239310 * 2^31
.word 1550842513 // zeta^908 * f(q^(-1) mod 2^32) * 2^31 = 286215^908 * 71292929 * 2^31
.word   43261973 // zeta^652 * 2^31 = 286215^652 * 2^31 = 19190655 * 2^31
.word 3375310827 // zeta^652 * f(q^(-1) mod 2^32) * 2^31 = 286215^652 * 71292929 * 2^31
.word    5622871 // zeta^536 * 2^31 = 286215^536 * 2^31 = 30901251 * 2^31
.word 4124560297 // zeta^536 * f(q^(-1) mod 2^32) * 2^31 = 286215^536 * 71292929 * 2^31
.word    8722395 // zeta^780 * 2^31 = 286215^780 * 2^31 = 27391270 * 2^31
.word 1752506405 // zeta^780 * f(q^(-1) mod 2^32) * 2^31 = 286215^780 * 71292929 * 2^31
.word    6423675 // zeta^524 * 2^31 = 286215^524 * 2^31 = 18242188 * 2^31
.word 1167143813 // zeta^524 * f(q^(-1) mod 2^32) * 2^31 = 286215^524 * 71292929 * 2^31
.word   30990117 // zeta^1000 * 2^31 = 286215^1000 * 2^31 = 988369 * 2^31
.word 2210719963 // zeta^1000 * f(q^(-1) mod 2^32) * 2^31 = 286215^1000 * 71292929 * 2^31
.word   65179259 // zeta^1012 * 2^31 = 286215^1012 * 2^31 = 22978057 * 2^31
.word 3617630597 // zeta^1012 * f(q^(-1) mod 2^32) * 2^31 = 286215^1012 * 71292929 * 2^31
.word   59951743 // zeta^756 * 2^31 = 286215^756 * 2^31 = 21060944 * 2^31
.word 1347489153 // zeta^756 * f(q^(-1) mod 2^32) * 2^31 = 286215^756 * 71292929 * 2^31
.word   34156189 // zeta^744 * 2^31 = 286215^744 * 2^31 = 21501702 * 2^31
.word 1375689059 // zeta^744 * f(q^(-1) mod 2^32) * 2^31 = 286215^744 * 71292929 * 2^31
.word   26490293 // zeta^884 * 2^31 = 286215^884 * 2^31 = 26632199 * 2^31
.word 3851424331 // zeta^884 * f(q^(-1) mod 2^32) * 2^31 = 286215^884 * 71292929 * 2^31
.word   17634531 // zeta^628 * 2^31 = 286215^628 * 2^31 = 18214722 * 2^31
.word 1165386525 // zeta^628 * f(q^(-1) mod 2^32) * 2^31 = 286215^628 * 71292929 * 2^31
.word   50516355 // zeta^872 * 2^31 = 286215^872 * 2^31 = 255720 * 2^31
.word   16361085 // zeta^872 * f(q^(-1) mod 2^32) * 2^31 = 286215^872 * 71292929 * 2^31
.word   41972451 // zeta^948 * 2^31 = 286215^948 * 2^31 = 19587949 * 2^31
.word 3400729885 // zeta^948 * f(q^(-1) mod 2^32) * 2^31 = 286215^948 * 71292929 * 2^31
.word   60320869 // zeta^692 * 2^31 = 286215^692 * 2^31 = 8415094 * 2^31
.word  538401691 // zeta^692 * f(q^(-1) mod 2^32) * 2^31 = 286215^692 * 71292929 * 2^31
.word   26091531 // zeta^616 * 2^31 = 286215^616 * 2^31 = 1232856 * 2^31
.word   78878709 // zeta^616 * f(q^(-1) mod 2^32) * 2^31 = 286215^616 * 71292929 * 2^31
.word   53470077 // zeta^820 * 2^31 = 286215^820 * 2^31 = 9730603 * 2^31
.word 2770052227 // zeta^820 * f(q^(-1) mod 2^32) * 2^31 = 286215^820 * 71292929 * 2^31
.word   48566219 // zeta^564 * 2^31 = 286215^564 * 2^31 = 10704739 * 2^31
.word 2832377909 // zeta^564 * f(q^(-1) mod 2^32) * 2^31 = 286215^564 * 71292929 * 2^31
.word    4276741 // zeta^936 * 2^31 = 286215^936 * 2^31 = 7554841 * 2^31
.word 2630845947 // zeta^936 * f(q^(-1) mod 2^32) * 2^31 = 286215^936 * 71292929 * 2^31
.word   16490153 // zeta^980 * 2^31 = 286215^980 * 2^31 = 408482 * 2^31
.word   26134871 // zeta^980 * f(q^(-1) mod 2^32) * 2^31 = 286215^980 * 71292929 * 2^31
.word   28235681 // zeta^724 * 2^31 = 286215^724 * 2^31 = 26159215 * 2^31
.word 3821162591 // zeta^724 * f(q^(-1) mod 2^32) * 2^31 = 286215^724 * 71292929 * 2^31
.word   39557271 // zeta^680 * 2^31 = 286215^680 * 2^31 = 19859369 * 2^31
.word 3418095465 // zeta^680 * f(q^(-1) mod 2^32) * 2^31 = 286215^680 * 71292929 * 2^31
.word   20173291 // zeta^852 * 2^31 = 286215^852 * 2^31 = 29591261 * 2^31
.word 4040746517 // zeta^852 * f(q^(-1) mod 2^32) * 2^31 = 286215^852 * 71292929 * 2^31
.word   53760749 // zeta^596 * 2^31 = 286215^596 * 2^31 = 15340829 * 2^31
.word 3128997139 // zeta^596 * f(q^(-1) mod 2^32) * 2^31 = 286215^596 * 71292929 * 2^31
.word   64080051 // zeta^808 * 2^31 = 286215^808 * 2^31 = 19611677 * 2^31
.word 3402248013 // zeta^808 * f(q^(-1) mod 2^32) * 2^31 = 286215^808 * 71292929 * 2^31
.word    1785087 // zeta^916 * 2^31 = 286215^916 * 2^31 = 1487922 * 2^31
.word   95197953 // zeta^916 * f(q^(-1) mod 2^32) * 2^31 = 286215^916 * 71292929 * 2^31
.word   39175009 // zeta^660 * 2^31 = 286215^660 * 2^31 = 2082830 * 2^31
.word  133260447 // zeta^660 * f(q^(-1) mod 2^32) * 2^31 = 286215^660 * 71292929 * 2^31
.word   40363327 // zeta^552 * 2^31 = 286215^552 * 2^31 = 28756497 * 2^31
.word 3987337921 // zeta^552 * f(q^(-1) mod 2^32) * 2^31 = 286215^552 * 71292929 * 2^31
.word    5942977 // zeta^788 * 2^31 = 286215^788 * 2^31 = 31126270 * 2^31
.word 1991473471 // zeta^788 * f(q^(-1) mod 2^32) * 2^31 = 286215^788 * 71292929 * 2^31
.word   46872159 // zeta^532 * 2^31 = 286215^532 * 2^31 = 11000739 * 2^31
.word 2851316129 // zeta^532 * f(q^(-1) mod 2^32) * 2^31 = 286215^532 * 71292929 * 2^31
.word   14946375 // zeta^968 * 2^31 = 286215^968 * 2^31 = 30392408 * 2^31
.word 1944520633 // zeta^968 * f(q^(-1) mod 2^32) * 2^31 = 286215^968 * 71292929 * 2^31
.word   54391843 // zeta^996 * 2^31 = 286215^996 * 2^31 = 5809404 * 2^31
.word  371688413 // zeta^996 * f(q^(-1) mod 2^32) * 2^31 = 286215^996 * 71292929 * 2^31
.word   16695421 // zeta^740 * 2^31 = 286215^740 * 2^31 = 15164721 * 2^31
.word 3117729667 // zeta^740 * f(q^(-1) mod 2^32) * 2^31 = 286215^740 * 71292929 * 2^31
.word   53251923 // zeta^712 * 2^31 = 286215^712 * 2^31 = 21625705 * 2^31
.word 3531106477 // zeta^712 * f(q^(-1) mod 2^32) * 2^31 = 286215^712 * 71292929 * 2^31
.word   44381723 // zeta^868 * 2^31 = 286215^868 * 2^31 = 23877757 * 2^31
.word 3675193829 // zeta^868 * f(q^(-1) mod 2^32) * 2^31 = 286215^868 * 71292929 * 2^31
.word   66751131 // zeta^612 * 2^31 = 286215^612 * 2^31 = 3914592 * 2^31
.word  250457445 // zeta^612 * f(q^(-1) mod 2^32) * 2^31 = 286215^612 * 71292929 * 2^31
.word   60760121 // zeta^840 * 2^31 = 286215^840 * 2^31 = 27051869 * 2^31
.word 3878275015 // zeta^840 * f(q^(-1) mod 2^32) * 2^31 = 286215^840 * 71292929 * 2^31
.word   43981805 // zeta^932 * 2^31 = 286215^932 * 2^31 = 11142392 * 2^31
.word  712895507 // zeta^932 * f(q^(-1) mod 2^32) * 2^31 = 286215^932 * 71292929 * 2^31
.word   19851773 // zeta^676 * 2^31 = 286215^676 * 2^31 = 25206915 * 2^31
.word 3760233987 // zeta^676 * f(q^(-1) mod 2^32) * 2^31 = 286215^676 * 71292929 * 2^31
.word   40454739 // zeta^584 * 2^31 = 286215^584 * 2^31 = 4314075 * 2^31
.word 2423500205 // zeta^584 * f(q^(-1) mod 2^32) * 2^31 = 286215^584 * 71292929 * 2^31
.word   66659489 // zeta^804 * 2^31 = 286215^804 * 2^31 = 16126790 * 2^31
.word 1031799647 // zeta^804 * f(q^(-1) mod 2^32) * 2^31 = 286215^804 * 71292929 * 2^31
.word    2982887 // zeta^548 * 2^31 = 286215^548 * 2^31 = 1752167 * 2^31
.word 2259588121 // zeta^548 * f(q^(-1) mod 2^32) * 2^31 = 286215^548 * 71292929 * 2^31
.word   55066963 // zeta^904 * 2^31 = 286215^904 * 2^31 = 10010313 * 2^31
.word 2787948205 // zeta^904 * f(q^(-1) mod 2^32) * 2^31 = 286215^904 * 71292929 * 2^31
.word   26160385 // zeta^964 * 2^31 = 286215^964 * 2^31 = 6613966 * 2^31
.word  423164671 // zeta^964 * f(q^(-1) mod 2^32) * 2^31 = 286215^964 * 71292929 * 2^31
.word   61355527 // zeta^708 * 2^31 = 286215^708 * 2^31 = 10235835 * 2^31
.word 2802377209 // zeta^708 * f(q^(-1) mod 2^32) * 2^31 = 286215^708 * 71292929 * 2^31
.word   62067539 // zeta^648 * 2^31 = 286215^648 * 2^31 = 22700705 * 2^31
.word 3599885485 // zeta^648 * f(q^(-1) mod 2^32) * 2^31 = 286215^648 * 71292929 * 2^31
.word   18833475 // zeta^836 * 2^31 = 286215^836 * 2^31 = 19186493 * 2^31
.word 3375044541 // zeta^836 * f(q^(-1) mod 2^32) * 2^31 = 286215^836 * 71292929 * 2^31
.word   53374797 // zeta^580 * 2^31 = 286215^580 * 2^31 = 14411664 * 2^31
.word  922065075 // zeta^580 * f(q^(-1) mod 2^32) * 2^31 = 286215^580 * 71292929 * 2^31
.word   57896497 // zeta^776 * 2^31 = 286215^776 * 2^31 = 14033313 * 2^31
.word 3045341647 // zeta^776 * f(q^(-1) mod 2^32) * 2^31 = 286215^776 * 71292929 * 2^31
.word   55382253 // zeta^900 * 2^31 = 286215^900 * 2^31 = 6317924 * 2^31
.word  404223763 // zeta^900 * f(q^(-1) mod 2^32) * 2^31 = 286215^900 * 71292929 * 2^31
.word   26227005 // zeta^644 * 2^31 = 286215^644 * 2^31 = 17537602 * 2^31
.word 1122064067 // zeta^644 * f(q^(-1) mod 2^32) * 2^31 = 286215^644 * 71292929 * 2^31
.word   59857581 // zeta^520 * 2^31 = 286215^520 * 2^31 = 21856450 * 2^31
.word 1398386003 // zeta^520 * f(q^(-1) mod 2^32) * 2^31 = 286215^520 * 71292929 * 2^31
.word   60426631 // zeta^772 * 2^31 = 286215^772 * 2^31 = 4231493 * 2^31
.word 2418216569 // zeta^772 * f(q^(-1) mod 2^32) * 2^31 = 286215^772 * 71292929 * 2^31
.word   32956195 // zeta^516 * 2^31 = 286215^516 * 2^31 = 15772976 * 2^31
.word 1009162461 // zeta^516 * f(q^(-1) mod 2^32) * 2^31 = 286215^516 * 71292929 * 2^31
.text
.align 4
roots_addr: .word roots
.syntax unified
.type ntt_1024_u32_33564673_286215_incomplete_bitrev, %function
.global ntt_1024_u32_33564673_286215_incomplete_bitrev
ntt_1024_u32_33564673_286215_incomplete_bitrev:
// Save GPRs
push {r4-r11,lr}
// Save MVE vector registers
vpush {d8-d15}
// Use r14 as marker for r0 + 1008
add r14, r0, #1008
// Use r12 as marker for r0 + 2016
add r12, r14, #1008
// Use r11 as marker for r0 + 3024
add r11, r12, #1008
// Use r10 as marker for r0 + 4032
add r10, r11, #1008
.equ modulus, 33564673
movw r9, #:lower16:modulus
movt r9, #:upper16:modulus
ldr r8, roots_addr
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[12]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 12)]
vqrdmulh.s32 Q1, Q0, r7
// input[4]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 4)]
vmul.u32 Q0, Q0, r6
// input[8]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 8)]
vqrdmlah.s32 Q1, Q0, r9
vqrdmulh.s32 Q4, Q2, r7
vsub.s32 Q0, Q3, Q1
vmul.u32 Q2, Q2, r6
vadd.s32 Q3, Q3, Q1
vqrdmlah.s32 Q4, Q2, r9
// input[0]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 0)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q2, Q1, Q4
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q4
vqrdmlah.s32 Q5, Q0, r9
// input[524]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 20)]
vqrdmulh.s32 Q6, Q3, r5
vsub.s32 Q0, Q2, Q5
vmul.u32 Q3, Q3, r4
vadd.s32 Q2, Q2, Q5
vstrw.u32 Q0, [r0,#(48)]
// Release input[12] from Q0
vqrdmlah.s32 Q6, Q3, r9
vstrw.u32 Q2, [r0,#(16)]
// Release input[4] from Q2
vsub.s32 Q3, Q1, Q6
vstrw.u32 Q3, [r0,#(32)]
// Release input[8] from Q3
vadd.s32 Q1, Q1, Q6
// input[524]: Already loaded as Q4
vqrdmulh.s32 Q0, Q4, r7
// input[516]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 12)]
vmul.u32 Q4, Q4, r6
// input[520]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 16)]
vqrdmlah.s32 Q0, Q4, r9
vstrw.u32 Q1, [r0,#(0)]
// Release input[0] from Q1
vqrdmulh.s32 Q1, Q2, r7
vsub.s32 Q4, Q3, Q0
vmul.u32 Q2, Q2, r6
vadd.s32 Q3, Q3, Q0
vqrdmlah.s32 Q1, Q2, r9
// input[512]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * 8)]
vqrdmulh.s32 Q5, Q4, r3
vsub.s32 Q2, Q0, Q1
vmul.u32 Q4, Q4, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q4, r9
// input[268]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 16)]
vqrdmulh.s32 Q6, Q3, r5
vsub.s32 Q4, Q2, Q5
vmul.u32 Q3, Q3, r4
vadd.s32 Q2, Q2, Q5
vstrw.u32 Q4, [r12,#(80)]
// Release input[524] from Q4
vqrdmlah.s32 Q6, Q3, r9
vstrw.u32 Q2, [r12,#(48)]
// Release input[516] from Q2
vsub.s32 Q3, Q0, Q6
vstrw.u32 Q3, [r12,#(64)]
// Release input[520] from Q3
vadd.s32 Q0, Q0, Q6
// input[268]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[260]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 8)]
vmul.u32 Q1, Q1, r6
// input[264]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 12)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r12,#(32)]
// Release input[512] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[256]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 4)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[780]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * 24)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(64)]
// Release input[268] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(32)]
// Release input[260] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(48)]
// Release input[264] from Q4
vadd.s32 Q2, Q2, Q6
// input[780]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[772]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * 16)]
vmul.u32 Q0, Q0, r6
// input[776]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * 20)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r14,#(16)]
// Release input[256] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[768]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * 12)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[140]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -112)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r11,#(96)]
// Release input[780] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(64)]
// Release input[772] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r11,#(80)]
// Release input[776] from Q4
vadd.s32 Q1, Q1, Q6
// input[140]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[132]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -120)]
vmul.u32 Q2, Q2, r6
// input[136]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -116)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r11,#(48)]
// Release input[768] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[128]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -124)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[652]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -104)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(-448)]
// Release input[140] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(-480)]
// Release input[132] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(-464)]
// Release input[136] from Q4
vadd.s32 Q0, Q0, Q6
// input[652]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[644]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -112)]
vmul.u32 Q1, Q1, r6
// input[648]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -108)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r14,#(-496)]
// Release input[128] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[640]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -116)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[396]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -108)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-416)]
// Release input[652] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(-448)]
// Release input[644] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r11,#(-432)]
// Release input[648] from Q4
vadd.s32 Q2, Q2, Q6
// input[396]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[388]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -116)]
vmul.u32 Q0, Q0, r6
// input[392]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -112)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r11,#(-464)]
// Release input[640] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[384]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -120)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[908]: Load as Q2
vldrw.u32 Q2, [r10, #(4 * -100)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r12,#(-432)]
// Release input[396] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-464)]
// Release input[388] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(-448)]
// Release input[392] from Q4
vadd.s32 Q1, Q1, Q6
// input[908]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[900]: Load as Q3
vldrw.u32 Q3, [r10, #(4 * -108)]
vmul.u32 Q2, Q2, r6
// input[904]: Load as Q4
vldrw.u32 Q4, [r10, #(4 * -104)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r12,#(-480)]
// Release input[384] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[896]: Load as Q0
vldrw.u32 Q0, [r10, #(4 * -112)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[76]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 76)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r10,#(-400)]
// Release input[908] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r10,#(-432)]
// Release input[900] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r10,#(-416)]
// Release input[904] from Q4
vadd.s32 Q0, Q0, Q6
// input[76]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[68]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 68)]
vmul.u32 Q1, Q1, r6
// input[72]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 72)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r10,#(-448)]
// Release input[896] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[64]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 64)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[588]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * 84)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r0,#(304)]
// Release input[76] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r0,#(272)]
// Release input[68] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(288)]
// Release input[72] from Q4
vadd.s32 Q2, Q2, Q6
// input[588]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[580]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 76)]
vmul.u32 Q0, Q0, r6
// input[584]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 80)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r0,#(256)]
// Release input[64] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[576]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 72)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[332]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 80)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r12,#(336)]
// Release input[588] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(304)]
// Release input[580] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(320)]
// Release input[584] from Q4
vadd.s32 Q1, Q1, Q6
// input[332]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[324]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 72)]
vmul.u32 Q2, Q2, r6
// input[328]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 76)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r12,#(288)]
// Release input[576] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[320]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 68)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[844]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * 88)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(320)]
// Release input[332] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(288)]
// Release input[324] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(304)]
// Release input[328] from Q4
vadd.s32 Q0, Q0, Q6
// input[844]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[836]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * 80)]
vmul.u32 Q1, Q1, r6
// input[840]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * 84)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r14,#(272)]
// Release input[320] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[832]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * 76)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[204]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -48)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(352)]
// Release input[844] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(320)]
// Release input[836] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r11,#(336)]
// Release input[840] from Q4
vadd.s32 Q2, Q2, Q6
// input[204]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[196]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -56)]
vmul.u32 Q0, Q0, r6
// input[200]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -52)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r11,#(304)]
// Release input[832] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[192]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -60)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[716]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -40)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-192)]
// Release input[204] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(-224)]
// Release input[196] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(-208)]
// Release input[200] from Q4
vadd.s32 Q1, Q1, Q6
// input[716]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[708]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -48)]
vmul.u32 Q2, Q2, r6
// input[712]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -44)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r14,#(-240)]
// Release input[192] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[704]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * -52)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[460]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -44)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r11,#(-160)]
// Release input[716] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(-192)]
// Release input[708] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-176)]
// Release input[712] from Q4
vadd.s32 Q0, Q0, Q6
// input[460]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[452]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -52)]
vmul.u32 Q1, Q1, r6
// input[456]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -48)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r11,#(-208)]
// Release input[704] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[448]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -56)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[972]: Load as Q0
vldrw.u32 Q0, [r10, #(4 * -36)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(-176)]
// Release input[460] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-208)]
// Release input[452] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(-192)]
// Release input[456] from Q4
vadd.s32 Q2, Q2, Q6
// input[972]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[964]: Load as Q3
vldrw.u32 Q3, [r10, #(4 * -44)]
vmul.u32 Q0, Q0, r6
// input[968]: Load as Q4
vldrw.u32 Q4, [r10, #(4 * -40)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r12,#(-224)]
// Release input[448] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[960]: Load as Q1
vldrw.u32 Q1, [r10, #(4 * -48)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[44]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 44)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r10,#(-144)]
// Release input[972] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r10,#(-176)]
// Release input[964] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r10,#(-160)]
// Release input[968] from Q4
vadd.s32 Q1, Q1, Q6
// input[44]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[36]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 36)]
vmul.u32 Q2, Q2, r6
// input[40]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 40)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r10,#(-192)]
// Release input[960] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[32]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 32)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[556]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 52)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r0,#(176)]
// Release input[44] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r0,#(144)]
// Release input[36] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r0,#(160)]
// Release input[40] from Q4
vadd.s32 Q0, Q0, Q6
// input[556]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[548]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 44)]
vmul.u32 Q1, Q1, r6
// input[552]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 48)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r0,#(128)]
// Release input[32] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[544]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 40)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[300]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 48)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(208)]
// Release input[556] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(176)]
// Release input[548] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(192)]
// Release input[552] from Q4
vadd.s32 Q2, Q2, Q6
// input[300]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[292]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 40)]
vmul.u32 Q0, Q0, r6
// input[296]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 44)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r12,#(160)]
// Release input[544] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[288]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 36)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[812]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * 56)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(192)]
// Release input[300] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(160)]
// Release input[292] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(176)]
// Release input[296] from Q4
vadd.s32 Q1, Q1, Q6
// input[812]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[804]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * 48)]
vmul.u32 Q2, Q2, r6
// input[808]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * 52)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r14,#(144)]
// Release input[288] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[800]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * 44)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[172]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -80)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r11,#(224)]
// Release input[812] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(192)]
// Release input[804] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(208)]
// Release input[808] from Q4
vadd.s32 Q0, Q0, Q6
// input[172]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[164]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -88)]
vmul.u32 Q1, Q1, r6
// input[168]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -84)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r11,#(176)]
// Release input[800] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[160]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -92)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[684]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * -72)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(-320)]
// Release input[172] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(-352)]
// Release input[164] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-336)]
// Release input[168] from Q4
vadd.s32 Q2, Q2, Q6
// input[684]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[676]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -80)]
vmul.u32 Q0, Q0, r6
// input[680]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -76)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r14,#(-368)]
// Release input[160] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[672]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -84)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[428]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -76)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r11,#(-288)]
// Release input[684] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(-320)]
// Release input[676] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r11,#(-304)]
// Release input[680] from Q4
vadd.s32 Q1, Q1, Q6
// input[428]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[420]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -84)]
vmul.u32 Q2, Q2, r6
// input[424]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -80)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r11,#(-336)]
// Release input[672] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[416]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -88)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[940]: Load as Q1
vldrw.u32 Q1, [r10, #(4 * -68)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(-304)]
// Release input[428] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-336)]
// Release input[420] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(-320)]
// Release input[424] from Q4
vadd.s32 Q0, Q0, Q6
// input[940]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[932]: Load as Q3
vldrw.u32 Q3, [r10, #(4 * -76)]
vmul.u32 Q1, Q1, r6
// input[936]: Load as Q4
vldrw.u32 Q4, [r10, #(4 * -72)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r12,#(-352)]
// Release input[416] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[928]: Load as Q2
vldrw.u32 Q2, [r10, #(4 * -80)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[108]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 108)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r10,#(-272)]
// Release input[940] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r10,#(-304)]
// Release input[932] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r10,#(-288)]
// Release input[936] from Q4
vadd.s32 Q2, Q2, Q6
// input[108]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[100]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 100)]
vmul.u32 Q0, Q0, r6
// input[104]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 104)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r10,#(-320)]
// Release input[928] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[96]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 96)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[620]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 116)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r0,#(432)]
// Release input[108] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r0,#(400)]
// Release input[100] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r0,#(416)]
// Release input[104] from Q4
vadd.s32 Q1, Q1, Q6
// input[620]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[612]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 108)]
vmul.u32 Q2, Q2, r6
// input[616]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 112)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r0,#(384)]
// Release input[96] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[608]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * 104)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[364]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 112)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(464)]
// Release input[620] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(432)]
// Release input[612] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(448)]
// Release input[616] from Q4
vadd.s32 Q0, Q0, Q6
// input[364]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[356]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 104)]
vmul.u32 Q1, Q1, r6
// input[360]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 108)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r12,#(416)]
// Release input[608] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[352]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 100)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[876]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * 120)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(448)]
// Release input[364] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(416)]
// Release input[356] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(432)]
// Release input[360] from Q4
vadd.s32 Q2, Q2, Q6
// input[876]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[868]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * 112)]
vmul.u32 Q0, Q0, r6
// input[872]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * 116)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r14,#(400)]
// Release input[352] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[864]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * 108)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[236]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -16)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r11,#(480)]
// Release input[876] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(448)]
// Release input[868] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r11,#(464)]
// Release input[872] from Q4
vadd.s32 Q1, Q1, Q6
// input[236]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[228]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -24)]
vmul.u32 Q2, Q2, r6
// input[232]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -20)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r11,#(432)]
// Release input[864] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[224]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -28)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[748]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -8)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(-64)]
// Release input[236] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(-96)]
// Release input[228] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(-80)]
// Release input[232] from Q4
vadd.s32 Q0, Q0, Q6
// input[748]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[740]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -16)]
vmul.u32 Q1, Q1, r6
// input[744]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -12)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r14,#(-112)]
// Release input[224] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[736]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -20)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[492]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -12)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-32)]
// Release input[748] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(-64)]
// Release input[740] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r11,#(-48)]
// Release input[744] from Q4
vadd.s32 Q2, Q2, Q6
// input[492]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[484]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -20)]
vmul.u32 Q0, Q0, r6
// input[488]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -16)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r11,#(-80)]
// Release input[736] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[480]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -24)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[1004]: Load as Q2
vldrw.u32 Q2, [r10, #(4 * -4)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r12,#(-48)]
// Release input[492] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-80)]
// Release input[484] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(-64)]
// Release input[488] from Q4
vadd.s32 Q1, Q1, Q6
// input[1004]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[996]: Load as Q3
vldrw.u32 Q3, [r10, #(4 * -12)]
vmul.u32 Q2, Q2, r6
// input[1000]: Load as Q4
vldrw.u32 Q4, [r10, #(4 * -8)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r12,#(-96)]
// Release input[480] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[992]: Load as Q0
vldrw.u32 Q0, [r10, #(4 * -16)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[28]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 28)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r10,#(-16)]
// Release input[1004] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r10,#(-48)]
// Release input[996] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r10,#(-32)]
// Release input[1000] from Q4
vadd.s32 Q0, Q0, Q6
// input[28]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[20]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 20)]
vmul.u32 Q1, Q1, r6
// input[24]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 24)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r10,#(-64)]
// Release input[992] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[16]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 16)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[540]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * 36)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r0,#(112)]
// Release input[28] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r0,#(80)]
// Release input[20] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(96)]
// Release input[24] from Q4
vadd.s32 Q2, Q2, Q6
// input[540]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[532]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 28)]
vmul.u32 Q0, Q0, r6
// input[536]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 32)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r0,#(64)]
// Release input[16] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[528]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 24)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[284]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 32)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r12,#(144)]
// Release input[540] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(112)]
// Release input[532] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(128)]
// Release input[536] from Q4
vadd.s32 Q1, Q1, Q6
// input[284]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[276]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 24)]
vmul.u32 Q2, Q2, r6
// input[280]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 28)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r12,#(96)]
// Release input[528] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[272]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 20)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[796]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * 40)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(128)]
// Release input[284] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(96)]
// Release input[276] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(112)]
// Release input[280] from Q4
vadd.s32 Q0, Q0, Q6
// input[796]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[788]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * 32)]
vmul.u32 Q1, Q1, r6
// input[792]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * 36)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r14,#(80)]
// Release input[272] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[784]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * 28)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[156]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -96)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(160)]
// Release input[796] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(128)]
// Release input[788] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r11,#(144)]
// Release input[792] from Q4
vadd.s32 Q2, Q2, Q6
// input[156]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[148]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -104)]
vmul.u32 Q0, Q0, r6
// input[152]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -100)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r11,#(112)]
// Release input[784] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[144]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -108)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[668]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -88)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-384)]
// Release input[156] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(-416)]
// Release input[148] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(-400)]
// Release input[152] from Q4
vadd.s32 Q1, Q1, Q6
// input[668]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[660]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -96)]
vmul.u32 Q2, Q2, r6
// input[664]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -92)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r14,#(-432)]
// Release input[144] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[656]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * -100)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[412]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -92)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r11,#(-352)]
// Release input[668] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(-384)]
// Release input[660] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-368)]
// Release input[664] from Q4
vadd.s32 Q0, Q0, Q6
// input[412]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[404]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -100)]
vmul.u32 Q1, Q1, r6
// input[408]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -96)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r11,#(-400)]
// Release input[656] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[400]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -104)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[924]: Load as Q0
vldrw.u32 Q0, [r10, #(4 * -84)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(-368)]
// Release input[412] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-400)]
// Release input[404] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(-384)]
// Release input[408] from Q4
vadd.s32 Q2, Q2, Q6
// input[924]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[916]: Load as Q3
vldrw.u32 Q3, [r10, #(4 * -92)]
vmul.u32 Q0, Q0, r6
// input[920]: Load as Q4
vldrw.u32 Q4, [r10, #(4 * -88)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r12,#(-416)]
// Release input[400] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[912]: Load as Q1
vldrw.u32 Q1, [r10, #(4 * -96)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[92]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 92)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r10,#(-336)]
// Release input[924] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r10,#(-368)]
// Release input[916] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r10,#(-352)]
// Release input[920] from Q4
vadd.s32 Q1, Q1, Q6
// input[92]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[84]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 84)]
vmul.u32 Q2, Q2, r6
// input[88]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 88)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r10,#(-384)]
// Release input[912] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[80]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 80)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[604]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 100)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r0,#(368)]
// Release input[92] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r0,#(336)]
// Release input[84] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r0,#(352)]
// Release input[88] from Q4
vadd.s32 Q0, Q0, Q6
// input[604]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[596]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 92)]
vmul.u32 Q1, Q1, r6
// input[600]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 96)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r0,#(320)]
// Release input[80] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[592]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 88)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[348]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 96)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(400)]
// Release input[604] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(368)]
// Release input[596] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(384)]
// Release input[600] from Q4
vadd.s32 Q2, Q2, Q6
// input[348]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[340]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 88)]
vmul.u32 Q0, Q0, r6
// input[344]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 92)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r12,#(352)]
// Release input[592] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[336]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 84)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[860]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * 104)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(384)]
// Release input[348] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(352)]
// Release input[340] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(368)]
// Release input[344] from Q4
vadd.s32 Q1, Q1, Q6
// input[860]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[852]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * 96)]
vmul.u32 Q2, Q2, r6
// input[856]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * 100)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r14,#(336)]
// Release input[336] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[848]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * 92)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[220]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -32)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r11,#(416)]
// Release input[860] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(384)]
// Release input[852] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(400)]
// Release input[856] from Q4
vadd.s32 Q0, Q0, Q6
// input[220]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[212]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -40)]
vmul.u32 Q1, Q1, r6
// input[216]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -36)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r11,#(368)]
// Release input[848] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[208]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -44)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[732]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * -24)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(-128)]
// Release input[220] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(-160)]
// Release input[212] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-144)]
// Release input[216] from Q4
vadd.s32 Q2, Q2, Q6
// input[732]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[724]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -32)]
vmul.u32 Q0, Q0, r6
// input[728]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -28)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r14,#(-176)]
// Release input[208] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[720]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -36)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[476]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -28)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r11,#(-96)]
// Release input[732] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(-128)]
// Release input[724] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r11,#(-112)]
// Release input[728] from Q4
vadd.s32 Q1, Q1, Q6
// input[476]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[468]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -36)]
vmul.u32 Q2, Q2, r6
// input[472]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -32)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r11,#(-144)]
// Release input[720] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[464]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -40)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[988]: Load as Q1
vldrw.u32 Q1, [r10, #(4 * -20)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(-112)]
// Release input[476] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-144)]
// Release input[468] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(-128)]
// Release input[472] from Q4
vadd.s32 Q0, Q0, Q6
// input[988]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[980]: Load as Q3
vldrw.u32 Q3, [r10, #(4 * -28)]
vmul.u32 Q1, Q1, r6
// input[984]: Load as Q4
vldrw.u32 Q4, [r10, #(4 * -24)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r12,#(-160)]
// Release input[464] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[976]: Load as Q2
vldrw.u32 Q2, [r10, #(4 * -32)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[60]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 60)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r10,#(-80)]
// Release input[988] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r10,#(-112)]
// Release input[980] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r10,#(-96)]
// Release input[984] from Q4
vadd.s32 Q2, Q2, Q6
// input[60]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[52]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 52)]
vmul.u32 Q0, Q0, r6
// input[56]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 56)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r10,#(-128)]
// Release input[976] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[48]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 48)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[572]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 68)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r0,#(240)]
// Release input[60] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r0,#(208)]
// Release input[52] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r0,#(224)]
// Release input[56] from Q4
vadd.s32 Q1, Q1, Q6
// input[572]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[564]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 60)]
vmul.u32 Q2, Q2, r6
// input[568]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 64)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r0,#(192)]
// Release input[48] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[560]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * 56)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[316]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 64)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(272)]
// Release input[572] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(240)]
// Release input[564] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(256)]
// Release input[568] from Q4
vadd.s32 Q0, Q0, Q6
// input[316]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[308]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 56)]
vmul.u32 Q1, Q1, r6
// input[312]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 60)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r12,#(224)]
// Release input[560] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[304]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 52)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[828]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * 72)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(256)]
// Release input[316] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(224)]
// Release input[308] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(240)]
// Release input[312] from Q4
vadd.s32 Q2, Q2, Q6
// input[828]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[820]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * 64)]
vmul.u32 Q0, Q0, r6
// input[824]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * 68)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r14,#(208)]
// Release input[304] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[816]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * 60)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[188]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -64)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r11,#(288)]
// Release input[828] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(256)]
// Release input[820] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r11,#(272)]
// Release input[824] from Q4
vadd.s32 Q1, Q1, Q6
// input[188]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[180]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -72)]
vmul.u32 Q2, Q2, r6
// input[184]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -68)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r11,#(240)]
// Release input[816] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[176]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -76)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[700]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -56)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(-256)]
// Release input[188] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(-288)]
// Release input[180] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(-272)]
// Release input[184] from Q4
vadd.s32 Q0, Q0, Q6
// input[700]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[692]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -64)]
vmul.u32 Q1, Q1, r6
// input[696]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -60)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r14,#(-304)]
// Release input[176] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[688]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -68)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[444]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -60)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-224)]
// Release input[700] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(-256)]
// Release input[692] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r11,#(-240)]
// Release input[696] from Q4
vadd.s32 Q2, Q2, Q6
// input[444]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[436]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -68)]
vmul.u32 Q0, Q0, r6
// input[440]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -64)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r11,#(-272)]
// Release input[688] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[432]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -72)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[956]: Load as Q2
vldrw.u32 Q2, [r10, #(4 * -52)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r12,#(-240)]
// Release input[444] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-272)]
// Release input[436] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(-256)]
// Release input[440] from Q4
vadd.s32 Q1, Q1, Q6
// input[956]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[948]: Load as Q3
vldrw.u32 Q3, [r10, #(4 * -60)]
vmul.u32 Q2, Q2, r6
// input[952]: Load as Q4
vldrw.u32 Q4, [r10, #(4 * -56)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r12,#(-288)]
// Release input[432] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[944]: Load as Q0
vldrw.u32 Q0, [r10, #(4 * -64)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[124]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 124)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r10,#(-208)]
// Release input[956] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r10,#(-240)]
// Release input[948] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r10,#(-224)]
// Release input[952] from Q4
vadd.s32 Q0, Q0, Q6
// input[124]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[116]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 116)]
vmul.u32 Q1, Q1, r6
// input[120]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 120)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r10,#(-256)]
// Release input[944] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[112]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 112)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[636]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * -120)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r0,#(496)]
// Release input[124] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r0,#(464)]
// Release input[116] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(480)]
// Release input[120] from Q4
vadd.s32 Q2, Q2, Q6
// input[636]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[628]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 124)]
vmul.u32 Q0, Q0, r6
// input[632]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -124)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r0,#(448)]
// Release input[112] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[624]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 120)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[380]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -124)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r11,#(-480)]
// Release input[636] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(496)]
// Release input[628] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r11,#(-496)]
// Release input[632] from Q4
vadd.s32 Q1, Q1, Q6
// input[380]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[372]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 120)]
vmul.u32 Q2, Q2, r6
// input[376]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 124)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r12,#(480)]
// Release input[624] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[368]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 116)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[892]: Load as Q1
vldrw.u32 Q1, [r10, #(4 * -116)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(-496)]
// Release input[380] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(480)]
// Release input[372] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(496)]
// Release input[376] from Q4
vadd.s32 Q0, Q0, Q6
// input[892]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[884]: Load as Q3
vldrw.u32 Q3, [r10, #(4 * -124)]
vmul.u32 Q1, Q1, r6
// input[888]: Load as Q4
vldrw.u32 Q4, [r10, #(4 * -120)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r14,#(464)]
// Release input[368] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[880]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * 124)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[252]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 0)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r10,#(-464)]
// Release input[892] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r10,#(-496)]
// Release input[884] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r10,#(-480)]
// Release input[888] from Q4
vadd.s32 Q2, Q2, Q6
// input[252]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[244]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -8)]
vmul.u32 Q0, Q0, r6
// input[248]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -4)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r11,#(496)]
// Release input[880] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[240]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -12)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[764]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * 8)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(0)]
// Release input[252] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(-32)]
// Release input[244] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(-16)]
// Release input[248] from Q4
vadd.s32 Q1, Q1, Q6
// input[764]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[756]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * 0)]
vmul.u32 Q2, Q2, r6
// input[760]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * 4)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r14,#(-48)]
// Release input[240] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[752]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * -4)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[508]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 4)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r11,#(32)]
// Release input[764] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(0)]
// Release input[756] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(16)]
// Release input[760] from Q4
vadd.s32 Q0, Q0, Q6
// input[508]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[500]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -4)]
vmul.u32 Q1, Q1, r6
// input[504]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 0)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r11,#(-16)]
// Release input[752] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[496]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -8)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[1020]: Load as Q0
vldrw.u32 Q0, [r10, #(4 * 12)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(16)]
// Release input[508] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-16)]
// Release input[500] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(0)]
// Release input[504] from Q4
vadd.s32 Q2, Q2, Q6
// input[1020]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[1012]: Load as Q3
vldrw.u32 Q3, [r10, #(4 * 4)]
vmul.u32 Q0, Q0, r6
// input[1016]: Load as Q4
vldrw.u32 Q4, [r10, #(4 * 8)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r12,#(-32)]
// Release input[496] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[1008]: Load as Q1
vldrw.u32 Q1, [r10, #(4 * 0)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[48]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 48)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r10,#(48)]
// Release input[1020] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r10,#(16)]
// Release input[1012] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r10,#(32)]
// Release input[1016] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[48]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[16]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 16)]
vmul.u32 Q2, Q2, r6
// input[32]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 32)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r10,#(0)]
// Release input[1008] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[0]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 0)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[560]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 56)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r0,#(192)]
// Release input[48] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r0,#(64)]
// Release input[16] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r0,#(128)]
// Release input[32] from Q4
vadd.s32 Q0, Q0, Q6
// input[560]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[528]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 24)]
vmul.u32 Q1, Q1, r6
// input[544]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 40)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r0,#(0)]
// Release input[0] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[512]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 8)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[304]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 52)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(224)]
// Release input[560] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(96)]
// Release input[528] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(160)]
// Release input[544] from Q4
vadd.s32 Q2, Q2, Q6
// input[304]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[272]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 20)]
vmul.u32 Q0, Q0, r6
// input[288]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 36)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r12,#(32)]
// Release input[512] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[256]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 4)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[816]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * 60)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(208)]
// Release input[304] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(80)]
// Release input[272] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(144)]
// Release input[288] from Q4
vadd.s32 Q1, Q1, Q6
// input[816]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[784]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * 28)]
vmul.u32 Q2, Q2, r6
// input[800]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * 44)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r14,#(16)]
// Release input[256] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[768]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * 12)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[176]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -76)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r11,#(240)]
// Release input[816] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(112)]
// Release input[784] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(176)]
// Release input[800] from Q4
vadd.s32 Q0, Q0, Q6
// input[176]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[144]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -108)]
vmul.u32 Q1, Q1, r6
// input[160]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -92)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r11,#(48)]
// Release input[768] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[128]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -124)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[688]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * -68)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(-304)]
// Release input[176] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(-432)]
// Release input[144] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-368)]
// Release input[160] from Q4
vadd.s32 Q2, Q2, Q6
// input[688]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[656]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -100)]
vmul.u32 Q0, Q0, r6
// input[672]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -84)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r14,#(-496)]
// Release input[128] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[640]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -116)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[432]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -72)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r11,#(-272)]
// Release input[688] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(-400)]
// Release input[656] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r11,#(-336)]
// Release input[672] from Q4
vadd.s32 Q1, Q1, Q6
// input[432]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[400]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -104)]
vmul.u32 Q2, Q2, r6
// input[416]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -88)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r11,#(-464)]
// Release input[640] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[384]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -120)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[944]: Load as Q1
vldrw.u32 Q1, [r10, #(4 * -64)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(-288)]
// Release input[432] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-416)]
// Release input[400] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(-352)]
// Release input[416] from Q4
vadd.s32 Q0, Q0, Q6
// input[944]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[912]: Load as Q3
vldrw.u32 Q3, [r10, #(4 * -96)]
vmul.u32 Q1, Q1, r6
// input[928]: Load as Q4
vldrw.u32 Q4, [r10, #(4 * -80)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r12,#(-480)]
// Release input[384] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[896]: Load as Q2
vldrw.u32 Q2, [r10, #(4 * -112)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[112]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 112)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r10,#(-256)]
// Release input[944] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r10,#(-384)]
// Release input[912] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r10,#(-320)]
// Release input[928] from Q4
vadd.s32 Q2, Q2, Q6
// input[112]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[80]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 80)]
vmul.u32 Q0, Q0, r6
// input[96]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 96)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r10,#(-448)]
// Release input[896] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[64]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 64)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[624]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 120)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r0,#(448)]
// Release input[112] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r0,#(320)]
// Release input[80] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r0,#(384)]
// Release input[96] from Q4
vadd.s32 Q1, Q1, Q6
// input[624]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[592]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 88)]
vmul.u32 Q2, Q2, r6
// input[608]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 104)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r0,#(256)]
// Release input[64] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[576]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * 72)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[368]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 116)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(480)]
// Release input[624] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(352)]
// Release input[592] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(416)]
// Release input[608] from Q4
vadd.s32 Q0, Q0, Q6
// input[368]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[336]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 84)]
vmul.u32 Q1, Q1, r6
// input[352]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 100)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r12,#(288)]
// Release input[576] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[320]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 68)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[880]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * 124)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(464)]
// Release input[368] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(336)]
// Release input[336] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(400)]
// Release input[352] from Q4
vadd.s32 Q2, Q2, Q6
// input[880]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[848]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * 92)]
vmul.u32 Q0, Q0, r6
// input[864]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * 108)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r14,#(272)]
// Release input[320] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[832]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * 76)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[240]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -12)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r11,#(496)]
// Release input[880] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(368)]
// Release input[848] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r11,#(432)]
// Release input[864] from Q4
vadd.s32 Q1, Q1, Q6
// input[240]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[208]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -44)]
vmul.u32 Q2, Q2, r6
// input[224]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -28)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r11,#(304)]
// Release input[832] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[192]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -60)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[752]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -4)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(-48)]
// Release input[240] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(-176)]
// Release input[208] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(-112)]
// Release input[224] from Q4
vadd.s32 Q0, Q0, Q6
// input[752]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[720]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -36)]
vmul.u32 Q1, Q1, r6
// input[736]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -20)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r14,#(-240)]
// Release input[192] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[704]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -52)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[496]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -8)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-16)]
// Release input[752] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(-144)]
// Release input[720] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r11,#(-80)]
// Release input[736] from Q4
vadd.s32 Q2, Q2, Q6
// input[496]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[464]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -40)]
vmul.u32 Q0, Q0, r6
// input[480]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -24)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r11,#(-208)]
// Release input[704] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[448]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -56)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[1008]: Load as Q2
vldrw.u32 Q2, [r10, #(4 * 0)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r12,#(-32)]
// Release input[496] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-160)]
// Release input[464] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(-96)]
// Release input[480] from Q4
vadd.s32 Q1, Q1, Q6
// input[1008]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[976]: Load as Q3
vldrw.u32 Q3, [r10, #(4 * -32)]
vmul.u32 Q2, Q2, r6
// input[992]: Load as Q4
vldrw.u32 Q4, [r10, #(4 * -16)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r12,#(-224)]
// Release input[448] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[960]: Load as Q0
vldrw.u32 Q0, [r10, #(4 * -48)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[56]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 56)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r10,#(0)]
// Release input[1008] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r10,#(-128)]
// Release input[976] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r10,#(-64)]
// Release input[992] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[56]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[24]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 24)]
vmul.u32 Q1, Q1, r6
// input[40]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 40)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r10,#(-192)]
// Release input[960] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[8]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 8)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[568]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * 64)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r0,#(224)]
// Release input[56] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r0,#(96)]
// Release input[24] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(160)]
// Release input[40] from Q4
vadd.s32 Q2, Q2, Q6
// input[568]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[536]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 32)]
vmul.u32 Q0, Q0, r6
// input[552]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 48)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r0,#(32)]
// Release input[8] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[520]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 16)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[312]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 60)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r12,#(256)]
// Release input[568] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(128)]
// Release input[536] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(192)]
// Release input[552] from Q4
vadd.s32 Q1, Q1, Q6
// input[312]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[280]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 28)]
vmul.u32 Q2, Q2, r6
// input[296]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 44)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r12,#(64)]
// Release input[520] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[264]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 12)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[824]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * 68)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(240)]
// Release input[312] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(112)]
// Release input[280] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(176)]
// Release input[296] from Q4
vadd.s32 Q0, Q0, Q6
// input[824]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[792]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * 36)]
vmul.u32 Q1, Q1, r6
// input[808]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * 52)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r14,#(48)]
// Release input[264] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[776]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * 20)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[184]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -68)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(272)]
// Release input[824] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(144)]
// Release input[792] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r11,#(208)]
// Release input[808] from Q4
vadd.s32 Q2, Q2, Q6
// input[184]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[152]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -100)]
vmul.u32 Q0, Q0, r6
// input[168]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -84)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r11,#(80)]
// Release input[776] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[136]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -116)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[696]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -60)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-272)]
// Release input[184] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(-400)]
// Release input[152] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(-336)]
// Release input[168] from Q4
vadd.s32 Q1, Q1, Q6
// input[696]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[664]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -92)]
vmul.u32 Q2, Q2, r6
// input[680]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -76)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r14,#(-464)]
// Release input[136] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[648]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * -108)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[440]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -64)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r11,#(-240)]
// Release input[696] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(-368)]
// Release input[664] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-304)]
// Release input[680] from Q4
vadd.s32 Q0, Q0, Q6
// input[440]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[408]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -96)]
vmul.u32 Q1, Q1, r6
// input[424]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -80)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r11,#(-432)]
// Release input[648] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[392]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -112)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[952]: Load as Q0
vldrw.u32 Q0, [r10, #(4 * -56)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(-256)]
// Release input[440] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-384)]
// Release input[408] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(-320)]
// Release input[424] from Q4
vadd.s32 Q2, Q2, Q6
// input[952]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[920]: Load as Q3
vldrw.u32 Q3, [r10, #(4 * -88)]
vmul.u32 Q0, Q0, r6
// input[936]: Load as Q4
vldrw.u32 Q4, [r10, #(4 * -72)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r12,#(-448)]
// Release input[392] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[904]: Load as Q1
vldrw.u32 Q1, [r10, #(4 * -104)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[120]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 120)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r10,#(-224)]
// Release input[952] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r10,#(-352)]
// Release input[920] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r10,#(-288)]
// Release input[936] from Q4
vadd.s32 Q1, Q1, Q6
// input[120]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[88]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 88)]
vmul.u32 Q2, Q2, r6
// input[104]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 104)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r10,#(-416)]
// Release input[904] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[72]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 72)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[632]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -124)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r0,#(480)]
// Release input[120] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r0,#(352)]
// Release input[88] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r0,#(416)]
// Release input[104] from Q4
vadd.s32 Q0, Q0, Q6
// input[632]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[600]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 96)]
vmul.u32 Q1, Q1, r6
// input[616]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 112)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r0,#(288)]
// Release input[72] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[584]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 80)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[376]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 124)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-496)]
// Release input[632] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(384)]
// Release input[600] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(448)]
// Release input[616] from Q4
vadd.s32 Q2, Q2, Q6
// input[376]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[344]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 92)]
vmul.u32 Q0, Q0, r6
// input[360]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 108)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r12,#(320)]
// Release input[584] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[328]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 76)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[888]: Load as Q2
vldrw.u32 Q2, [r10, #(4 * -120)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(496)]
// Release input[376] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(368)]
// Release input[344] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(432)]
// Release input[360] from Q4
vadd.s32 Q1, Q1, Q6
// input[888]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[856]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * 100)]
vmul.u32 Q2, Q2, r6
// input[872]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * 116)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r14,#(304)]
// Release input[328] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[840]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * 84)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[248]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -4)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r10,#(-480)]
// Release input[888] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(400)]
// Release input[856] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(464)]
// Release input[872] from Q4
vadd.s32 Q0, Q0, Q6
// input[248]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[216]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -36)]
vmul.u32 Q1, Q1, r6
// input[232]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -20)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r11,#(336)]
// Release input[840] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[200]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -52)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[760]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * 4)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(-16)]
// Release input[248] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(-144)]
// Release input[216] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-80)]
// Release input[232] from Q4
vadd.s32 Q2, Q2, Q6
// input[760]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[728]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -28)]
vmul.u32 Q0, Q0, r6
// input[744]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -12)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r14,#(-208)]
// Release input[200] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[712]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -44)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[504]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 0)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r11,#(16)]
// Release input[760] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(-112)]
// Release input[728] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r11,#(-48)]
// Release input[744] from Q4
vadd.s32 Q1, Q1, Q6
// input[504]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[472]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -32)]
vmul.u32 Q2, Q2, r6
// input[488]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -16)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r11,#(-176)]
// Release input[712] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[456]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -48)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[1016]: Load as Q1
vldrw.u32 Q1, [r10, #(4 * 8)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(0)]
// Release input[504] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-128)]
// Release input[472] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(-64)]
// Release input[488] from Q4
vadd.s32 Q0, Q0, Q6
// input[1016]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[984]: Load as Q3
vldrw.u32 Q3, [r10, #(4 * -24)]
vmul.u32 Q1, Q1, r6
// input[1000]: Load as Q4
vldrw.u32 Q4, [r10, #(4 * -8)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r12,#(-192)]
// Release input[456] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[968]: Load as Q2
vldrw.u32 Q2, [r10, #(4 * -40)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[52]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 52)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r10,#(32)]
// Release input[1016] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r10,#(-96)]
// Release input[984] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r10,#(-32)]
// Release input[1000] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[52]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[20]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 20)]
vmul.u32 Q0, Q0, r6
// input[36]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 36)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r10,#(-160)]
// Release input[968] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[4]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 4)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[564]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 60)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r0,#(208)]
// Release input[52] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r0,#(80)]
// Release input[20] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r0,#(144)]
// Release input[36] from Q4
vadd.s32 Q1, Q1, Q6
// input[564]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[532]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 28)]
vmul.u32 Q2, Q2, r6
// input[548]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 44)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r0,#(16)]
// Release input[4] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[516]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * 12)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[308]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 56)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(240)]
// Release input[564] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(112)]
// Release input[532] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(176)]
// Release input[548] from Q4
vadd.s32 Q0, Q0, Q6
// input[308]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[276]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 24)]
vmul.u32 Q1, Q1, r6
// input[292]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 40)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r12,#(48)]
// Release input[516] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[260]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 8)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[820]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * 64)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(224)]
// Release input[308] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(96)]
// Release input[276] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(160)]
// Release input[292] from Q4
vadd.s32 Q2, Q2, Q6
// input[820]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[788]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * 32)]
vmul.u32 Q0, Q0, r6
// input[804]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * 48)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r14,#(32)]
// Release input[260] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[772]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * 16)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[180]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -72)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r11,#(256)]
// Release input[820] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(128)]
// Release input[788] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r11,#(192)]
// Release input[804] from Q4
vadd.s32 Q1, Q1, Q6
// input[180]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[148]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -104)]
vmul.u32 Q2, Q2, r6
// input[164]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -88)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r11,#(64)]
// Release input[772] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[132]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -120)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[692]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -64)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(-288)]
// Release input[180] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(-416)]
// Release input[148] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(-352)]
// Release input[164] from Q4
vadd.s32 Q0, Q0, Q6
// input[692]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[660]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -96)]
vmul.u32 Q1, Q1, r6
// input[676]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -80)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r14,#(-480)]
// Release input[132] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[644]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -112)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[436]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -68)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-256)]
// Release input[692] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(-384)]
// Release input[660] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r11,#(-320)]
// Release input[676] from Q4
vadd.s32 Q2, Q2, Q6
// input[436]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[404]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -100)]
vmul.u32 Q0, Q0, r6
// input[420]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -84)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r11,#(-448)]
// Release input[644] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[388]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -116)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[948]: Load as Q2
vldrw.u32 Q2, [r10, #(4 * -60)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r12,#(-272)]
// Release input[436] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-400)]
// Release input[404] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(-336)]
// Release input[420] from Q4
vadd.s32 Q1, Q1, Q6
// input[948]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[916]: Load as Q3
vldrw.u32 Q3, [r10, #(4 * -92)]
vmul.u32 Q2, Q2, r6
// input[932]: Load as Q4
vldrw.u32 Q4, [r10, #(4 * -76)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r12,#(-464)]
// Release input[388] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[900]: Load as Q0
vldrw.u32 Q0, [r10, #(4 * -108)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[116]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 116)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r10,#(-240)]
// Release input[948] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r10,#(-368)]
// Release input[916] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r10,#(-304)]
// Release input[932] from Q4
vadd.s32 Q0, Q0, Q6
// input[116]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[84]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 84)]
vmul.u32 Q1, Q1, r6
// input[100]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 100)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r10,#(-432)]
// Release input[900] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[68]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 68)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[628]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * 124)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r0,#(464)]
// Release input[116] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r0,#(336)]
// Release input[84] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(400)]
// Release input[100] from Q4
vadd.s32 Q2, Q2, Q6
// input[628]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[596]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 92)]
vmul.u32 Q0, Q0, r6
// input[612]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 108)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r0,#(272)]
// Release input[68] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[580]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 76)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[372]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 120)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r12,#(496)]
// Release input[628] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(368)]
// Release input[596] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(432)]
// Release input[612] from Q4
vadd.s32 Q1, Q1, Q6
// input[372]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[340]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 88)]
vmul.u32 Q2, Q2, r6
// input[356]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 104)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r12,#(304)]
// Release input[580] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[324]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 72)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[884]: Load as Q1
vldrw.u32 Q1, [r10, #(4 * -124)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(480)]
// Release input[372] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(352)]
// Release input[340] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(416)]
// Release input[356] from Q4
vadd.s32 Q0, Q0, Q6
// input[884]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[852]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * 96)]
vmul.u32 Q1, Q1, r6
// input[868]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * 112)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r14,#(288)]
// Release input[324] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[836]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * 80)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[244]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -8)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r10,#(-496)]
// Release input[884] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(384)]
// Release input[852] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r11,#(448)]
// Release input[868] from Q4
vadd.s32 Q2, Q2, Q6
// input[244]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[212]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -40)]
vmul.u32 Q0, Q0, r6
// input[228]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -24)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r11,#(320)]
// Release input[836] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[196]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -56)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[756]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * 0)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-32)]
// Release input[244] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(-160)]
// Release input[212] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(-96)]
// Release input[228] from Q4
vadd.s32 Q1, Q1, Q6
// input[756]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[724]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -32)]
vmul.u32 Q2, Q2, r6
// input[740]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -16)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r14,#(-224)]
// Release input[196] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[708]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * -48)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[500]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -4)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r11,#(0)]
// Release input[756] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(-128)]
// Release input[724] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-64)]
// Release input[740] from Q4
vadd.s32 Q0, Q0, Q6
// input[500]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[468]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -36)]
vmul.u32 Q1, Q1, r6
// input[484]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -20)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r11,#(-192)]
// Release input[708] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[452]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -52)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[1012]: Load as Q0
vldrw.u32 Q0, [r10, #(4 * 4)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(-16)]
// Release input[500] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-144)]
// Release input[468] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(-80)]
// Release input[484] from Q4
vadd.s32 Q2, Q2, Q6
// input[1012]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[980]: Load as Q3
vldrw.u32 Q3, [r10, #(4 * -28)]
vmul.u32 Q0, Q0, r6
// input[996]: Load as Q4
vldrw.u32 Q4, [r10, #(4 * -12)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r12,#(-208)]
// Release input[452] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[964]: Load as Q1
vldrw.u32 Q1, [r10, #(4 * -44)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[60]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 60)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r10,#(16)]
// Release input[1012] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r10,#(-112)]
// Release input[980] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r10,#(-48)]
// Release input[996] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[60]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[28]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 28)]
vmul.u32 Q2, Q2, r6
// input[44]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 44)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r10,#(-176)]
// Release input[964] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[12]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 12)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[572]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 68)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r0,#(240)]
// Release input[60] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r0,#(112)]
// Release input[28] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r0,#(176)]
// Release input[44] from Q4
vadd.s32 Q0, Q0, Q6
// input[572]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[540]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 36)]
vmul.u32 Q1, Q1, r6
// input[556]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 52)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r0,#(48)]
// Release input[12] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[524]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 20)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[316]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 64)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(272)]
// Release input[572] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(144)]
// Release input[540] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(208)]
// Release input[556] from Q4
vadd.s32 Q2, Q2, Q6
// input[316]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[284]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 32)]
vmul.u32 Q0, Q0, r6
// input[300]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 48)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r12,#(80)]
// Release input[524] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[268]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 16)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[828]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * 72)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(256)]
// Release input[316] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(128)]
// Release input[284] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(192)]
// Release input[300] from Q4
vadd.s32 Q1, Q1, Q6
// input[828]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[796]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * 40)]
vmul.u32 Q2, Q2, r6
// input[812]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * 56)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r14,#(64)]
// Release input[268] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[780]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * 24)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[188]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -64)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r11,#(288)]
// Release input[828] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(160)]
// Release input[796] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(224)]
// Release input[812] from Q4
vadd.s32 Q0, Q0, Q6
// input[188]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[156]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -96)]
vmul.u32 Q1, Q1, r6
// input[172]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -80)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r11,#(96)]
// Release input[780] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[140]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -112)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[700]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * -56)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(-256)]
// Release input[188] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(-384)]
// Release input[156] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-320)]
// Release input[172] from Q4
vadd.s32 Q2, Q2, Q6
// input[700]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[668]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -88)]
vmul.u32 Q0, Q0, r6
// input[684]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -72)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r14,#(-448)]
// Release input[140] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[652]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -104)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[444]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -60)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r11,#(-224)]
// Release input[700] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(-352)]
// Release input[668] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r11,#(-288)]
// Release input[684] from Q4
vadd.s32 Q1, Q1, Q6
// input[444]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[412]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -92)]
vmul.u32 Q2, Q2, r6
// input[428]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -76)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r11,#(-416)]
// Release input[652] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[396]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -108)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[956]: Load as Q1
vldrw.u32 Q1, [r10, #(4 * -52)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(-240)]
// Release input[444] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-368)]
// Release input[412] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(-304)]
// Release input[428] from Q4
vadd.s32 Q0, Q0, Q6
// input[956]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[924]: Load as Q3
vldrw.u32 Q3, [r10, #(4 * -84)]
vmul.u32 Q1, Q1, r6
// input[940]: Load as Q4
vldrw.u32 Q4, [r10, #(4 * -68)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r12,#(-432)]
// Release input[396] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[908]: Load as Q2
vldrw.u32 Q2, [r10, #(4 * -100)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[124]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 124)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r10,#(-208)]
// Release input[956] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r10,#(-336)]
// Release input[924] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r10,#(-272)]
// Release input[940] from Q4
vadd.s32 Q2, Q2, Q6
// input[124]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[92]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 92)]
vmul.u32 Q0, Q0, r6
// input[108]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 108)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r10,#(-400)]
// Release input[908] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[76]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 76)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[636]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -120)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r0,#(496)]
// Release input[124] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r0,#(368)]
// Release input[92] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r0,#(432)]
// Release input[108] from Q4
vadd.s32 Q1, Q1, Q6
// input[636]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[604]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 100)]
vmul.u32 Q2, Q2, r6
// input[620]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 116)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r0,#(304)]
// Release input[76] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[588]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * 84)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[380]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -124)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r11,#(-480)]
// Release input[636] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(400)]
// Release input[604] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(464)]
// Release input[620] from Q4
vadd.s32 Q0, Q0, Q6
// input[380]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[348]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 96)]
vmul.u32 Q1, Q1, r6
// input[364]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 112)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r12,#(336)]
// Release input[588] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[332]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 80)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[892]: Load as Q0
vldrw.u32 Q0, [r10, #(4 * -116)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(-496)]
// Release input[380] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(384)]
// Release input[348] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(448)]
// Release input[364] from Q4
vadd.s32 Q2, Q2, Q6
// input[892]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[860]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * 104)]
vmul.u32 Q0, Q0, r6
// input[876]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * 120)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r14,#(320)]
// Release input[332] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[844]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * 88)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[252]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 0)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r10,#(-464)]
// Release input[892] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(416)]
// Release input[860] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r11,#(480)]
// Release input[876] from Q4
vadd.s32 Q1, Q1, Q6
// input[252]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[220]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -32)]
vmul.u32 Q2, Q2, r6
// input[236]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -16)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r11,#(352)]
// Release input[844] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[204]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -48)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[764]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * 8)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(0)]
// Release input[252] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(-128)]
// Release input[220] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(-64)]
// Release input[236] from Q4
vadd.s32 Q0, Q0, Q6
// input[764]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[732]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -24)]
vmul.u32 Q1, Q1, r6
// input[748]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -8)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r14,#(-192)]
// Release input[204] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[716]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -40)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[508]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * 4)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(32)]
// Release input[764] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(-96)]
// Release input[732] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r11,#(-32)]
// Release input[748] from Q4
vadd.s32 Q2, Q2, Q6
// input[508]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[476]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -28)]
vmul.u32 Q0, Q0, r6
// input[492]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -12)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r11,#(-160)]
// Release input[716] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[460]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -44)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[1020]: Load as Q2
vldrw.u32 Q2, [r10, #(4 * 12)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r12,#(16)]
// Release input[508] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-112)]
// Release input[476] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(-48)]
// Release input[492] from Q4
vadd.s32 Q1, Q1, Q6
// input[1020]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[988]: Load as Q3
vldrw.u32 Q3, [r10, #(4 * -20)]
vmul.u32 Q2, Q2, r6
// input[1004]: Load as Q4
vldrw.u32 Q4, [r10, #(4 * -4)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r12,#(-176)]
// Release input[460] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[972]: Load as Q0
vldrw.u32 Q0, [r10, #(4 * -36)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[192]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -60)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r10,#(48)]
// Release input[1020] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r10,#(-80)]
// Release input[988] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r10,#(-16)]
// Release input[1004] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[192]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[64]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 64)]
vmul.u32 Q1, Q1, r6
// input[128]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -124)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r10,#(-144)]
// Release input[972] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[0]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 0)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[704]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * -52)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(-240)]
// Release input[192] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r0,#(256)]
// Release input[64] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-496)]
// Release input[128] from Q4
vadd.s32 Q2, Q2, Q6
// input[704]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[576]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 72)]
vmul.u32 Q0, Q0, r6
// input[640]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -116)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r0,#(0)]
// Release input[0] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[512]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 8)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[448]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -56)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r11,#(-208)]
// Release input[704] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(288)]
// Release input[576] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r11,#(-464)]
// Release input[640] from Q4
vadd.s32 Q1, Q1, Q6
// input[448]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[320]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 68)]
vmul.u32 Q2, Q2, r6
// input[384]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -120)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r12,#(32)]
// Release input[512] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[256]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 4)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[960]: Load as Q1
vldrw.u32 Q1, [r10, #(4 * -48)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(-224)]
// Release input[448] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(272)]
// Release input[320] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(-480)]
// Release input[384] from Q4
vadd.s32 Q0, Q0, Q6
// input[960]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[832]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * 76)]
vmul.u32 Q1, Q1, r6
// input[896]: Load as Q4
vldrw.u32 Q4, [r10, #(4 * -112)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r14,#(16)]
// Release input[256] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[768]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * 12)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[224]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -28)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r10,#(-192)]
// Release input[960] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(304)]
// Release input[832] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r10,#(-448)]
// Release input[896] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[224]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[96]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 96)]
vmul.u32 Q0, Q0, r6
// input[160]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -92)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r11,#(48)]
// Release input[768] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[32]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 32)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[736]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -20)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-112)]
// Release input[224] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r0,#(384)]
// Release input[96] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(-368)]
// Release input[160] from Q4
vadd.s32 Q1, Q1, Q6
// input[736]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[608]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 104)]
vmul.u32 Q2, Q2, r6
// input[672]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -84)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r0,#(128)]
// Release input[32] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[544]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * 40)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[480]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -24)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r11,#(-80)]
// Release input[736] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(416)]
// Release input[608] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-336)]
// Release input[672] from Q4
vadd.s32 Q0, Q0, Q6
// input[480]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[352]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 100)]
vmul.u32 Q1, Q1, r6
// input[416]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -88)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r12,#(160)]
// Release input[544] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[288]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 36)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[992]: Load as Q0
vldrw.u32 Q0, [r10, #(4 * -16)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(-96)]
// Release input[480] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(400)]
// Release input[352] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(-352)]
// Release input[416] from Q4
vadd.s32 Q2, Q2, Q6
// input[992]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[864]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * 108)]
vmul.u32 Q0, Q0, r6
// input[928]: Load as Q4
vldrw.u32 Q4, [r10, #(4 * -80)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r14,#(144)]
// Release input[288] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[800]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * 44)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[208]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -44)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r10,#(-64)]
// Release input[992] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(432)]
// Release input[864] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r10,#(-320)]
// Release input[928] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[208]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[80]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 80)]
vmul.u32 Q2, Q2, r6
// input[144]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -108)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r11,#(176)]
// Release input[800] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[16]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 16)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[720]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -36)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(-176)]
// Release input[208] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r0,#(320)]
// Release input[80] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(-432)]
// Release input[144] from Q4
vadd.s32 Q0, Q0, Q6
// input[720]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[592]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 88)]
vmul.u32 Q1, Q1, r6
// input[656]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -100)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r0,#(64)]
// Release input[16] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[528]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 24)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[464]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -40)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-144)]
// Release input[720] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(352)]
// Release input[592] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r11,#(-400)]
// Release input[656] from Q4
vadd.s32 Q2, Q2, Q6
// input[464]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[336]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 84)]
vmul.u32 Q0, Q0, r6
// input[400]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -104)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r12,#(96)]
// Release input[528] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[272]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 20)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[976]: Load as Q2
vldrw.u32 Q2, [r10, #(4 * -32)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r12,#(-160)]
// Release input[464] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(336)]
// Release input[336] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(-416)]
// Release input[400] from Q4
vadd.s32 Q1, Q1, Q6
// input[976]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[848]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * 92)]
vmul.u32 Q2, Q2, r6
// input[912]: Load as Q4
vldrw.u32 Q4, [r10, #(4 * -96)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r14,#(80)]
// Release input[272] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[784]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * 28)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[240]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -12)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r10,#(-128)]
// Release input[976] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(368)]
// Release input[848] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r10,#(-384)]
// Release input[912] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[240]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[112]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 112)]
vmul.u32 Q1, Q1, r6
// input[176]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -76)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r11,#(112)]
// Release input[784] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[48]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 48)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[752]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * -4)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(-48)]
// Release input[240] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r0,#(448)]
// Release input[112] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-304)]
// Release input[176] from Q4
vadd.s32 Q2, Q2, Q6
// input[752]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[624]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 120)]
vmul.u32 Q0, Q0, r6
// input[688]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -68)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r0,#(192)]
// Release input[48] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[560]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 56)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[496]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -8)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r11,#(-16)]
// Release input[752] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(480)]
// Release input[624] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r11,#(-272)]
// Release input[688] from Q4
vadd.s32 Q1, Q1, Q6
// input[496]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[368]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 116)]
vmul.u32 Q2, Q2, r6
// input[432]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -72)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r12,#(224)]
// Release input[560] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[304]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 52)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[1008]: Load as Q1
vldrw.u32 Q1, [r10, #(4 * 0)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(-32)]
// Release input[496] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(464)]
// Release input[368] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(-288)]
// Release input[432] from Q4
vadd.s32 Q0, Q0, Q6
// input[1008]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[880]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * 124)]
vmul.u32 Q1, Q1, r6
// input[944]: Load as Q4
vldrw.u32 Q4, [r10, #(4 * -64)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r14,#(208)]
// Release input[304] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[816]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * 60)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[200]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -52)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r10,#(0)]
// Release input[1008] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(496)]
// Release input[880] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r10,#(-256)]
// Release input[944] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[200]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[72]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 72)]
vmul.u32 Q0, Q0, r6
// input[136]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -116)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r11,#(240)]
// Release input[816] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[8]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 8)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[712]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -44)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-208)]
// Release input[200] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r0,#(288)]
// Release input[72] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(-464)]
// Release input[136] from Q4
vadd.s32 Q1, Q1, Q6
// input[712]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[584]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 80)]
vmul.u32 Q2, Q2, r6
// input[648]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -108)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r0,#(32)]
// Release input[8] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[520]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * 16)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[456]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -48)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r11,#(-176)]
// Release input[712] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(320)]
// Release input[584] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-432)]
// Release input[648] from Q4
vadd.s32 Q0, Q0, Q6
// input[456]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[328]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 76)]
vmul.u32 Q1, Q1, r6
// input[392]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -112)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r12,#(64)]
// Release input[520] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[264]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 12)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[968]: Load as Q0
vldrw.u32 Q0, [r10, #(4 * -40)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(-192)]
// Release input[456] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(304)]
// Release input[328] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(-448)]
// Release input[392] from Q4
vadd.s32 Q2, Q2, Q6
// input[968]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[840]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * 84)]
vmul.u32 Q0, Q0, r6
// input[904]: Load as Q4
vldrw.u32 Q4, [r10, #(4 * -104)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r14,#(48)]
// Release input[264] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[776]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * 20)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[232]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -20)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r10,#(-160)]
// Release input[968] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(336)]
// Release input[840] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r10,#(-416)]
// Release input[904] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[232]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[104]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 104)]
vmul.u32 Q2, Q2, r6
// input[168]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -84)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r11,#(80)]
// Release input[776] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[40]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 40)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[744]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -12)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(-80)]
// Release input[232] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r0,#(416)]
// Release input[104] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(-336)]
// Release input[168] from Q4
vadd.s32 Q0, Q0, Q6
// input[744]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[616]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 112)]
vmul.u32 Q1, Q1, r6
// input[680]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -76)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r0,#(160)]
// Release input[40] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[552]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 48)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[488]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -16)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-48)]
// Release input[744] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(448)]
// Release input[616] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r11,#(-304)]
// Release input[680] from Q4
vadd.s32 Q2, Q2, Q6
// input[488]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[360]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 108)]
vmul.u32 Q0, Q0, r6
// input[424]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -80)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r12,#(192)]
// Release input[552] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[296]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 44)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[1000]: Load as Q2
vldrw.u32 Q2, [r10, #(4 * -8)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r12,#(-64)]
// Release input[488] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(432)]
// Release input[360] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(-320)]
// Release input[424] from Q4
vadd.s32 Q1, Q1, Q6
// input[1000]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[872]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * 116)]
vmul.u32 Q2, Q2, r6
// input[936]: Load as Q4
vldrw.u32 Q4, [r10, #(4 * -72)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r14,#(176)]
// Release input[296] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[808]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * 52)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[216]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -36)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r10,#(-32)]
// Release input[1000] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(464)]
// Release input[872] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r10,#(-288)]
// Release input[936] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[216]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[88]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 88)]
vmul.u32 Q1, Q1, r6
// input[152]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -100)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r11,#(208)]
// Release input[808] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[24]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 24)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[728]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * -28)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(-144)]
// Release input[216] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r0,#(352)]
// Release input[88] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-400)]
// Release input[152] from Q4
vadd.s32 Q2, Q2, Q6
// input[728]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[600]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 96)]
vmul.u32 Q0, Q0, r6
// input[664]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -92)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r0,#(96)]
// Release input[24] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[536]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 32)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[472]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -32)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r11,#(-112)]
// Release input[728] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(384)]
// Release input[600] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r11,#(-368)]
// Release input[664] from Q4
vadd.s32 Q1, Q1, Q6
// input[472]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[344]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 92)]
vmul.u32 Q2, Q2, r6
// input[408]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -96)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r12,#(128)]
// Release input[536] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[280]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 28)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[984]: Load as Q1
vldrw.u32 Q1, [r10, #(4 * -24)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(-128)]
// Release input[472] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(368)]
// Release input[344] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(-384)]
// Release input[408] from Q4
vadd.s32 Q0, Q0, Q6
// input[984]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[856]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * 100)]
vmul.u32 Q1, Q1, r6
// input[920]: Load as Q4
vldrw.u32 Q4, [r10, #(4 * -88)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r14,#(112)]
// Release input[280] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[792]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * 36)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[248]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -4)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r10,#(-96)]
// Release input[984] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(400)]
// Release input[856] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r10,#(-352)]
// Release input[920] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[248]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[120]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 120)]
vmul.u32 Q0, Q0, r6
// input[184]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -68)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r11,#(144)]
// Release input[792] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[56]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 56)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[760]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * 4)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-16)]
// Release input[248] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r0,#(480)]
// Release input[120] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(-272)]
// Release input[184] from Q4
vadd.s32 Q1, Q1, Q6
// input[760]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[632]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -124)]
vmul.u32 Q2, Q2, r6
// input[696]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -60)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r0,#(224)]
// Release input[56] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[568]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * 64)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[504]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 0)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r11,#(16)]
// Release input[760] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(-496)]
// Release input[632] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-240)]
// Release input[696] from Q4
vadd.s32 Q0, Q0, Q6
// input[504]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[376]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 124)]
vmul.u32 Q1, Q1, r6
// input[440]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -64)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r12,#(256)]
// Release input[568] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[312]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 60)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[1016]: Load as Q0
vldrw.u32 Q0, [r10, #(4 * 8)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(0)]
// Release input[504] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(496)]
// Release input[376] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(-256)]
// Release input[440] from Q4
vadd.s32 Q2, Q2, Q6
// input[1016]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[888]: Load as Q3
vldrw.u32 Q3, [r10, #(4 * -120)]
vmul.u32 Q0, Q0, r6
// input[952]: Load as Q4
vldrw.u32 Q4, [r10, #(4 * -56)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r14,#(240)]
// Release input[312] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[824]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * 68)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[196]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -56)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r10,#(32)]
// Release input[1016] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r10,#(-480)]
// Release input[888] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r10,#(-224)]
// Release input[952] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[196]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[68]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 68)]
vmul.u32 Q2, Q2, r6
// input[132]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -120)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r11,#(272)]
// Release input[824] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[4]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 4)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[708]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -48)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(-224)]
// Release input[196] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r0,#(272)]
// Release input[68] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(-480)]
// Release input[132] from Q4
vadd.s32 Q0, Q0, Q6
// input[708]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[580]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 76)]
vmul.u32 Q1, Q1, r6
// input[644]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -112)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r0,#(16)]
// Release input[4] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[516]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 12)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[452]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -52)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-192)]
// Release input[708] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(304)]
// Release input[580] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r11,#(-448)]
// Release input[644] from Q4
vadd.s32 Q2, Q2, Q6
// input[452]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[324]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 72)]
vmul.u32 Q0, Q0, r6
// input[388]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -116)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r12,#(48)]
// Release input[516] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[260]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 8)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[964]: Load as Q2
vldrw.u32 Q2, [r10, #(4 * -44)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r12,#(-208)]
// Release input[452] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(288)]
// Release input[324] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(-464)]
// Release input[388] from Q4
vadd.s32 Q1, Q1, Q6
// input[964]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[836]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * 80)]
vmul.u32 Q2, Q2, r6
// input[900]: Load as Q4
vldrw.u32 Q4, [r10, #(4 * -108)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r14,#(32)]
// Release input[260] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[772]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * 16)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[228]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -24)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r10,#(-176)]
// Release input[964] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(320)]
// Release input[836] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r10,#(-432)]
// Release input[900] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[228]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[100]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 100)]
vmul.u32 Q1, Q1, r6
// input[164]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -88)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r11,#(64)]
// Release input[772] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[36]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 36)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[740]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * -16)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(-96)]
// Release input[228] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r0,#(400)]
// Release input[100] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-352)]
// Release input[164] from Q4
vadd.s32 Q2, Q2, Q6
// input[740]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[612]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 108)]
vmul.u32 Q0, Q0, r6
// input[676]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -80)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r0,#(144)]
// Release input[36] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[548]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 44)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[484]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -20)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r11,#(-64)]
// Release input[740] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(432)]
// Release input[612] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r11,#(-320)]
// Release input[676] from Q4
vadd.s32 Q1, Q1, Q6
// input[484]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[356]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 104)]
vmul.u32 Q2, Q2, r6
// input[420]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -84)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r12,#(176)]
// Release input[548] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[292]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 40)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[996]: Load as Q1
vldrw.u32 Q1, [r10, #(4 * -12)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(-80)]
// Release input[484] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(416)]
// Release input[356] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(-336)]
// Release input[420] from Q4
vadd.s32 Q0, Q0, Q6
// input[996]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[868]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * 112)]
vmul.u32 Q1, Q1, r6
// input[932]: Load as Q4
vldrw.u32 Q4, [r10, #(4 * -76)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r14,#(160)]
// Release input[292] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[804]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * 48)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[212]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -40)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r10,#(-48)]
// Release input[996] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(448)]
// Release input[868] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r10,#(-304)]
// Release input[932] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[212]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[84]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 84)]
vmul.u32 Q0, Q0, r6
// input[148]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -104)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r11,#(192)]
// Release input[804] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[20]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 20)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[724]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -32)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-160)]
// Release input[212] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r0,#(336)]
// Release input[84] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(-416)]
// Release input[148] from Q4
vadd.s32 Q1, Q1, Q6
// input[724]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[596]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 92)]
vmul.u32 Q2, Q2, r6
// input[660]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -96)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r0,#(80)]
// Release input[20] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[532]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * 28)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[468]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -36)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r11,#(-128)]
// Release input[724] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(368)]
// Release input[596] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-384)]
// Release input[660] from Q4
vadd.s32 Q0, Q0, Q6
// input[468]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[340]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 88)]
vmul.u32 Q1, Q1, r6
// input[404]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -100)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r12,#(112)]
// Release input[532] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[276]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 24)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[980]: Load as Q0
vldrw.u32 Q0, [r10, #(4 * -28)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(-144)]
// Release input[468] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(352)]
// Release input[340] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(-400)]
// Release input[404] from Q4
vadd.s32 Q2, Q2, Q6
// input[980]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[852]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * 96)]
vmul.u32 Q0, Q0, r6
// input[916]: Load as Q4
vldrw.u32 Q4, [r10, #(4 * -92)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r14,#(96)]
// Release input[276] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[788]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * 32)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[244]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -8)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r10,#(-112)]
// Release input[980] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(384)]
// Release input[852] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r10,#(-368)]
// Release input[916] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[244]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[116]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 116)]
vmul.u32 Q2, Q2, r6
// input[180]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -72)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r11,#(128)]
// Release input[788] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[52]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 52)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[756]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * 0)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(-32)]
// Release input[244] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r0,#(464)]
// Release input[116] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(-288)]
// Release input[180] from Q4
vadd.s32 Q0, Q0, Q6
// input[756]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[628]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 124)]
vmul.u32 Q1, Q1, r6
// input[692]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -64)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r0,#(208)]
// Release input[52] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[564]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 60)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[500]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -4)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(0)]
// Release input[756] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(496)]
// Release input[628] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r11,#(-256)]
// Release input[692] from Q4
vadd.s32 Q2, Q2, Q6
// input[500]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[372]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 120)]
vmul.u32 Q0, Q0, r6
// input[436]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -68)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r12,#(240)]
// Release input[564] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[308]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 56)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[1012]: Load as Q2
vldrw.u32 Q2, [r10, #(4 * 4)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r12,#(-16)]
// Release input[500] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(480)]
// Release input[372] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(-272)]
// Release input[436] from Q4
vadd.s32 Q1, Q1, Q6
// input[1012]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[884]: Load as Q3
vldrw.u32 Q3, [r10, #(4 * -124)]
vmul.u32 Q2, Q2, r6
// input[948]: Load as Q4
vldrw.u32 Q4, [r10, #(4 * -60)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r14,#(224)]
// Release input[308] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[820]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * 64)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[204]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -48)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r10,#(16)]
// Release input[1012] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r10,#(-496)]
// Release input[884] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r10,#(-240)]
// Release input[948] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[204]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[76]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 76)]
vmul.u32 Q1, Q1, r6
// input[140]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -112)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r11,#(256)]
// Release input[820] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[12]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 12)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[716]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * -40)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(-192)]
// Release input[204] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r0,#(304)]
// Release input[76] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-448)]
// Release input[140] from Q4
vadd.s32 Q2, Q2, Q6
// input[716]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[588]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 84)]
vmul.u32 Q0, Q0, r6
// input[652]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -104)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r0,#(48)]
// Release input[12] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[524]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 20)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[460]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -44)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r11,#(-160)]
// Release input[716] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(336)]
// Release input[588] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r11,#(-416)]
// Release input[652] from Q4
vadd.s32 Q1, Q1, Q6
// input[460]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[332]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 80)]
vmul.u32 Q2, Q2, r6
// input[396]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -108)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r12,#(80)]
// Release input[524] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[268]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 16)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[972]: Load as Q1
vldrw.u32 Q1, [r10, #(4 * -36)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(-176)]
// Release input[460] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(320)]
// Release input[332] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(-432)]
// Release input[396] from Q4
vadd.s32 Q0, Q0, Q6
// input[972]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[844]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * 88)]
vmul.u32 Q1, Q1, r6
// input[908]: Load as Q4
vldrw.u32 Q4, [r10, #(4 * -100)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r14,#(64)]
// Release input[268] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[780]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * 24)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[236]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -16)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r10,#(-144)]
// Release input[972] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(352)]
// Release input[844] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r10,#(-400)]
// Release input[908] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[236]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[108]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 108)]
vmul.u32 Q0, Q0, r6
// input[172]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -80)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r11,#(96)]
// Release input[780] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[44]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 44)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[748]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -8)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-64)]
// Release input[236] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r0,#(432)]
// Release input[108] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(-320)]
// Release input[172] from Q4
vadd.s32 Q1, Q1, Q6
// input[748]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[620]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 116)]
vmul.u32 Q2, Q2, r6
// input[684]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -72)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r0,#(176)]
// Release input[44] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[556]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * 52)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[492]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -12)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r11,#(-32)]
// Release input[748] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(464)]
// Release input[620] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-288)]
// Release input[684] from Q4
vadd.s32 Q0, Q0, Q6
// input[492]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[364]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 112)]
vmul.u32 Q1, Q1, r6
// input[428]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -76)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r12,#(208)]
// Release input[556] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[300]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 48)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[1004]: Load as Q0
vldrw.u32 Q0, [r10, #(4 * -4)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(-48)]
// Release input[492] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(448)]
// Release input[364] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(-304)]
// Release input[428] from Q4
vadd.s32 Q2, Q2, Q6
// input[1004]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[876]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * 120)]
vmul.u32 Q0, Q0, r6
// input[940]: Load as Q4
vldrw.u32 Q4, [r10, #(4 * -68)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r14,#(192)]
// Release input[300] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[812]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * 56)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[220]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -32)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r10,#(-16)]
// Release input[1004] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(480)]
// Release input[876] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r10,#(-272)]
// Release input[940] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[220]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[92]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 92)]
vmul.u32 Q2, Q2, r6
// input[156]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -96)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r11,#(224)]
// Release input[812] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[28]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 28)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[732]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -24)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(-128)]
// Release input[220] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r0,#(368)]
// Release input[92] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(-384)]
// Release input[156] from Q4
vadd.s32 Q0, Q0, Q6
// input[732]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[604]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 100)]
vmul.u32 Q1, Q1, r6
// input[668]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -88)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r0,#(112)]
// Release input[28] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[540]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 36)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[476]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -28)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-96)]
// Release input[732] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(400)]
// Release input[604] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r11,#(-352)]
// Release input[668] from Q4
vadd.s32 Q2, Q2, Q6
// input[476]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[348]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 96)]
vmul.u32 Q0, Q0, r6
// input[412]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -92)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r12,#(144)]
// Release input[540] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[284]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 32)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[988]: Load as Q2
vldrw.u32 Q2, [r10, #(4 * -20)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r12,#(-112)]
// Release input[476] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(384)]
// Release input[348] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(-368)]
// Release input[412] from Q4
vadd.s32 Q1, Q1, Q6
// input[988]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[860]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * 104)]
vmul.u32 Q2, Q2, r6
// input[924]: Load as Q4
vldrw.u32 Q4, [r10, #(4 * -84)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r14,#(128)]
// Release input[284] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[796]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * 40)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[252]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 0)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r10,#(-80)]
// Release input[988] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(416)]
// Release input[860] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r10,#(-336)]
// Release input[924] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[252]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[124]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 124)]
vmul.u32 Q1, Q1, r6
// input[188]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -64)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r11,#(160)]
// Release input[796] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[60]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 60)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[764]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * 8)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(0)]
// Release input[252] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r0,#(496)]
// Release input[124] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-256)]
// Release input[188] from Q4
vadd.s32 Q2, Q2, Q6
// input[764]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[636]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -120)]
vmul.u32 Q0, Q0, r6
// input[700]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -56)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r0,#(240)]
// Release input[60] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[572]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 68)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[508]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 4)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r11,#(32)]
// Release input[764] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r11,#(-480)]
// Release input[636] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r11,#(-224)]
// Release input[700] from Q4
vadd.s32 Q1, Q1, Q6
// input[508]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[380]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -124)]
vmul.u32 Q2, Q2, r6
// input[444]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -60)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r12,#(272)]
// Release input[572] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[316]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 64)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[1020]: Load as Q1
vldrw.u32 Q1, [r10, #(4 * 12)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(16)]
// Release input[508] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-496)]
// Release input[380] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(-240)]
// Release input[444] from Q4
vadd.s32 Q0, Q0, Q6
// input[1020]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[892]: Load as Q3
vldrw.u32 Q3, [r10, #(4 * -116)]
vmul.u32 Q1, Q1, r6
// input[956]: Load as Q4
vldrw.u32 Q4, [r10, #(4 * -52)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r14,#(256)]
// Release input[316] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[828]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * 72)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[768]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * 12)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r10,#(48)]
// Release input[1020] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r10,#(-464)]
// Release input[892] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r10,#(-208)]
// Release input[956] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[768]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[256]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 4)]
vmul.u32 Q0, Q0, r6
// input[512]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 8)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r11,#(288)]
// Release input[828] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[0]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 0)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[896]: Load as Q2
vldrw.u32 Q2, [r10, #(4 * -112)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r11,#(48)]
// Release input[768] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(16)]
// Release input[256] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(32)]
// Release input[512] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[896]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[384]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -120)]
vmul.u32 Q2, Q2, r6
// input[640]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -116)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r0,#(0)]
// Release input[0] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[128]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -124)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[832]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * 76)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r10,#(-448)]
// Release input[896] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-480)]
// Release input[384] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-464)]
// Release input[640] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[832]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[320]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 68)]
vmul.u32 Q1, Q1, r6
// input[576]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 72)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r14,#(-496)]
// Release input[128] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[64]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 64)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[960]: Load as Q0
vldrw.u32 Q0, [r10, #(4 * -48)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(304)]
// Release input[832] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(272)]
// Release input[320] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(288)]
// Release input[576] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[960]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[448]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -56)]
vmul.u32 Q0, Q0, r6
// input[704]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -52)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r0,#(256)]
// Release input[64] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[192]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -60)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[800]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * 44)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r10,#(-192)]
// Release input[960] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-224)]
// Release input[448] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r11,#(-208)]
// Release input[704] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[800]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[288]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 36)]
vmul.u32 Q2, Q2, r6
// input[544]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 40)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r14,#(-240)]
// Release input[192] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[32]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 32)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[928]: Load as Q1
vldrw.u32 Q1, [r10, #(4 * -80)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r11,#(176)]
// Release input[800] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(144)]
// Release input[288] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(160)]
// Release input[544] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[928]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[416]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -88)]
vmul.u32 Q1, Q1, r6
// input[672]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -84)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r0,#(128)]
// Release input[32] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[160]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -92)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[864]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * 108)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r10,#(-320)]
// Release input[928] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-352)]
// Release input[416] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r11,#(-336)]
// Release input[672] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[864]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[352]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 100)]
vmul.u32 Q0, Q0, r6
// input[608]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 104)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r14,#(-368)]
// Release input[160] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[96]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 96)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[992]: Load as Q2
vldrw.u32 Q2, [r10, #(4 * -16)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r11,#(432)]
// Release input[864] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(400)]
// Release input[352] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(416)]
// Release input[608] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[992]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[480]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -24)]
vmul.u32 Q2, Q2, r6
// input[736]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -20)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r0,#(384)]
// Release input[96] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[224]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -28)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[784]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * 28)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r10,#(-64)]
// Release input[992] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-96)]
// Release input[480] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-80)]
// Release input[736] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[784]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[272]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 20)]
vmul.u32 Q1, Q1, r6
// input[528]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 24)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r14,#(-112)]
// Release input[224] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[16]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 16)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[912]: Load as Q0
vldrw.u32 Q0, [r10, #(4 * -96)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(112)]
// Release input[784] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(80)]
// Release input[272] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(96)]
// Release input[528] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[912]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[400]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -104)]
vmul.u32 Q0, Q0, r6
// input[656]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -100)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r0,#(64)]
// Release input[16] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[144]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -108)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[848]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * 92)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r10,#(-384)]
// Release input[912] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-416)]
// Release input[400] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r11,#(-400)]
// Release input[656] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[848]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[336]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 84)]
vmul.u32 Q2, Q2, r6
// input[592]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 88)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r14,#(-432)]
// Release input[144] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[80]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 80)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[976]: Load as Q1
vldrw.u32 Q1, [r10, #(4 * -32)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r11,#(368)]
// Release input[848] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(336)]
// Release input[336] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(352)]
// Release input[592] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[976]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[464]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -40)]
vmul.u32 Q1, Q1, r6
// input[720]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -36)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r0,#(320)]
// Release input[80] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[208]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -44)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[816]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * 60)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r10,#(-128)]
// Release input[976] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-160)]
// Release input[464] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r11,#(-144)]
// Release input[720] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[816]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[304]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 52)]
vmul.u32 Q0, Q0, r6
// input[560]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 56)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r14,#(-176)]
// Release input[208] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[48]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 48)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[944]: Load as Q2
vldrw.u32 Q2, [r10, #(4 * -64)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r11,#(240)]
// Release input[816] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(208)]
// Release input[304] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(224)]
// Release input[560] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[944]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[432]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -72)]
vmul.u32 Q2, Q2, r6
// input[688]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -68)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r0,#(192)]
// Release input[48] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[176]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -76)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[880]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * 124)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r10,#(-256)]
// Release input[944] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-288)]
// Release input[432] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-272)]
// Release input[688] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[880]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[368]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 116)]
vmul.u32 Q1, Q1, r6
// input[624]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 120)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r14,#(-304)]
// Release input[176] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[112]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 112)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[1008]: Load as Q0
vldrw.u32 Q0, [r10, #(4 * 0)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(496)]
// Release input[880] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(464)]
// Release input[368] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(480)]
// Release input[624] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[1008]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[496]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -8)]
vmul.u32 Q0, Q0, r6
// input[752]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -4)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r0,#(448)]
// Release input[112] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[240]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -12)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[776]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * 20)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r10,#(0)]
// Release input[1008] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-32)]
// Release input[496] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r11,#(-16)]
// Release input[752] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[776]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[264]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 12)]
vmul.u32 Q2, Q2, r6
// input[520]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 16)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r14,#(-48)]
// Release input[240] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[8]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 8)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[904]: Load as Q1
vldrw.u32 Q1, [r10, #(4 * -104)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r11,#(80)]
// Release input[776] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(48)]
// Release input[264] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(64)]
// Release input[520] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[904]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[392]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -112)]
vmul.u32 Q1, Q1, r6
// input[648]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -108)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r0,#(32)]
// Release input[8] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[136]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -116)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[840]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * 84)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r10,#(-416)]
// Release input[904] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-448)]
// Release input[392] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r11,#(-432)]
// Release input[648] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[840]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[328]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 76)]
vmul.u32 Q0, Q0, r6
// input[584]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 80)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r14,#(-464)]
// Release input[136] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[72]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 72)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[968]: Load as Q2
vldrw.u32 Q2, [r10, #(4 * -40)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r11,#(336)]
// Release input[840] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(304)]
// Release input[328] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(320)]
// Release input[584] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[968]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[456]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -48)]
vmul.u32 Q2, Q2, r6
// input[712]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -44)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r0,#(288)]
// Release input[72] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[200]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -52)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[808]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * 52)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r10,#(-160)]
// Release input[968] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-192)]
// Release input[456] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-176)]
// Release input[712] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[808]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[296]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 44)]
vmul.u32 Q1, Q1, r6
// input[552]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 48)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r14,#(-208)]
// Release input[200] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[40]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 40)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[936]: Load as Q0
vldrw.u32 Q0, [r10, #(4 * -72)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(208)]
// Release input[808] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(176)]
// Release input[296] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(192)]
// Release input[552] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[936]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[424]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -80)]
vmul.u32 Q0, Q0, r6
// input[680]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -76)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r0,#(160)]
// Release input[40] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[168]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -84)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[872]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * 116)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r10,#(-288)]
// Release input[936] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-320)]
// Release input[424] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r11,#(-304)]
// Release input[680] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[872]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[360]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 108)]
vmul.u32 Q2, Q2, r6
// input[616]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 112)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r14,#(-336)]
// Release input[168] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[104]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 104)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[1000]: Load as Q1
vldrw.u32 Q1, [r10, #(4 * -8)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r11,#(464)]
// Release input[872] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(432)]
// Release input[360] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(448)]
// Release input[616] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[1000]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[488]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -16)]
vmul.u32 Q1, Q1, r6
// input[744]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -12)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r0,#(416)]
// Release input[104] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[232]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -20)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[792]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * 36)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r10,#(-32)]
// Release input[1000] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-64)]
// Release input[488] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r11,#(-48)]
// Release input[744] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[792]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[280]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 28)]
vmul.u32 Q0, Q0, r6
// input[536]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 32)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r14,#(-80)]
// Release input[232] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[24]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 24)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[920]: Load as Q2
vldrw.u32 Q2, [r10, #(4 * -88)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r11,#(144)]
// Release input[792] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(112)]
// Release input[280] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(128)]
// Release input[536] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[920]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[408]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -96)]
vmul.u32 Q2, Q2, r6
// input[664]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -92)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r0,#(96)]
// Release input[24] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[152]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -100)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[856]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * 100)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r10,#(-352)]
// Release input[920] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-384)]
// Release input[408] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-368)]
// Release input[664] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[856]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[344]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 92)]
vmul.u32 Q1, Q1, r6
// input[600]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 96)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r14,#(-400)]
// Release input[152] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[88]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 88)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[984]: Load as Q0
vldrw.u32 Q0, [r10, #(4 * -24)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(400)]
// Release input[856] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(368)]
// Release input[344] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(384)]
// Release input[600] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[984]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[472]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -32)]
vmul.u32 Q0, Q0, r6
// input[728]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -28)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r0,#(352)]
// Release input[88] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[216]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -36)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[824]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * 68)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r10,#(-96)]
// Release input[984] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-128)]
// Release input[472] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r11,#(-112)]
// Release input[728] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[824]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[312]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 60)]
vmul.u32 Q2, Q2, r6
// input[568]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 64)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r14,#(-144)]
// Release input[216] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[56]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 56)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[952]: Load as Q1
vldrw.u32 Q1, [r10, #(4 * -56)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r11,#(272)]
// Release input[824] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(240)]
// Release input[312] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(256)]
// Release input[568] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[952]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[440]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -64)]
vmul.u32 Q1, Q1, r6
// input[696]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -60)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r0,#(224)]
// Release input[56] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[184]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -68)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[888]: Load as Q0
vldrw.u32 Q0, [r10, #(4 * -120)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r10,#(-224)]
// Release input[952] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-256)]
// Release input[440] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r11,#(-240)]
// Release input[696] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[888]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[376]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 124)]
vmul.u32 Q0, Q0, r6
// input[632]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -124)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r14,#(-272)]
// Release input[184] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[120]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 120)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[1016]: Load as Q2
vldrw.u32 Q2, [r10, #(4 * 8)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r10,#(-480)]
// Release input[888] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(496)]
// Release input[376] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r11,#(-496)]
// Release input[632] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[1016]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[504]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 0)]
vmul.u32 Q2, Q2, r6
// input[760]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * 4)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r0,#(480)]
// Release input[120] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[248]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -4)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[772]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * 16)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r10,#(32)]
// Release input[1016] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(0)]
// Release input[504] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(16)]
// Release input[760] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[772]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[260]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 8)]
vmul.u32 Q1, Q1, r6
// input[516]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 12)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r14,#(-16)]
// Release input[248] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[4]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 4)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[900]: Load as Q0
vldrw.u32 Q0, [r10, #(4 * -108)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(64)]
// Release input[772] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(32)]
// Release input[260] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(48)]
// Release input[516] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[900]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[388]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -116)]
vmul.u32 Q0, Q0, r6
// input[644]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -112)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r0,#(16)]
// Release input[4] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[132]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -120)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[836]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * 80)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r10,#(-432)]
// Release input[900] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-464)]
// Release input[388] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r11,#(-448)]
// Release input[644] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[836]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[324]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 72)]
vmul.u32 Q2, Q2, r6
// input[580]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 76)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r14,#(-480)]
// Release input[132] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[68]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 68)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[964]: Load as Q1
vldrw.u32 Q1, [r10, #(4 * -44)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r11,#(320)]
// Release input[836] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(288)]
// Release input[324] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(304)]
// Release input[580] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[964]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[452]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -52)]
vmul.u32 Q1, Q1, r6
// input[708]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -48)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r0,#(272)]
// Release input[68] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[196]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -56)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[804]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * 48)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r10,#(-176)]
// Release input[964] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-208)]
// Release input[452] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r11,#(-192)]
// Release input[708] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[804]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[292]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 40)]
vmul.u32 Q0, Q0, r6
// input[548]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 44)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r14,#(-224)]
// Release input[196] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[36]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 36)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[932]: Load as Q2
vldrw.u32 Q2, [r10, #(4 * -76)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r11,#(192)]
// Release input[804] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(160)]
// Release input[292] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(176)]
// Release input[548] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[932]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[420]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -84)]
vmul.u32 Q2, Q2, r6
// input[676]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -80)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r0,#(144)]
// Release input[36] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[164]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -88)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[868]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * 112)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r10,#(-304)]
// Release input[932] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-336)]
// Release input[420] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-320)]
// Release input[676] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[868]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[356]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 104)]
vmul.u32 Q1, Q1, r6
// input[612]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 108)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r14,#(-352)]
// Release input[164] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[100]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 100)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[996]: Load as Q0
vldrw.u32 Q0, [r10, #(4 * -12)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(448)]
// Release input[868] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(416)]
// Release input[356] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(432)]
// Release input[612] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[996]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[484]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -20)]
vmul.u32 Q0, Q0, r6
// input[740]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -16)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r0,#(400)]
// Release input[100] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[228]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -24)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[788]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * 32)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r10,#(-48)]
// Release input[996] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-80)]
// Release input[484] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r11,#(-64)]
// Release input[740] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[788]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[276]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 24)]
vmul.u32 Q2, Q2, r6
// input[532]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 28)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r14,#(-96)]
// Release input[228] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[20]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 20)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[916]: Load as Q1
vldrw.u32 Q1, [r10, #(4 * -92)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r11,#(128)]
// Release input[788] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(96)]
// Release input[276] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(112)]
// Release input[532] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[916]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[404]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -100)]
vmul.u32 Q1, Q1, r6
// input[660]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -96)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r0,#(80)]
// Release input[20] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[148]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -104)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[852]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * 96)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r10,#(-368)]
// Release input[916] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-400)]
// Release input[404] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r11,#(-384)]
// Release input[660] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[852]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[340]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 88)]
vmul.u32 Q0, Q0, r6
// input[596]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 92)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r14,#(-416)]
// Release input[148] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[84]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 84)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[980]: Load as Q2
vldrw.u32 Q2, [r10, #(4 * -28)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r11,#(384)]
// Release input[852] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(352)]
// Release input[340] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(368)]
// Release input[596] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[980]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[468]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -36)]
vmul.u32 Q2, Q2, r6
// input[724]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -32)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r0,#(336)]
// Release input[84] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[212]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -40)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[820]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * 64)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r10,#(-112)]
// Release input[980] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-144)]
// Release input[468] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-128)]
// Release input[724] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[820]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[308]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 56)]
vmul.u32 Q1, Q1, r6
// input[564]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 60)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r14,#(-160)]
// Release input[212] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[52]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 52)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[948]: Load as Q0
vldrw.u32 Q0, [r10, #(4 * -60)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(256)]
// Release input[820] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(224)]
// Release input[308] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(240)]
// Release input[564] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[948]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[436]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -68)]
vmul.u32 Q0, Q0, r6
// input[692]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -64)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r0,#(208)]
// Release input[52] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[180]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -72)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[884]: Load as Q2
vldrw.u32 Q2, [r10, #(4 * -124)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r10,#(-240)]
// Release input[948] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-272)]
// Release input[436] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r11,#(-256)]
// Release input[692] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[884]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[372]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 120)]
vmul.u32 Q2, Q2, r6
// input[628]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 124)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r14,#(-288)]
// Release input[180] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[116]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 116)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[1012]: Load as Q1
vldrw.u32 Q1, [r10, #(4 * 4)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r10,#(-496)]
// Release input[884] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(480)]
// Release input[372] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(496)]
// Release input[628] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[1012]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[500]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -4)]
vmul.u32 Q1, Q1, r6
// input[756]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * 0)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r0,#(464)]
// Release input[116] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[244]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -8)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[780]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * 24)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r10,#(16)]
// Release input[1012] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-16)]
// Release input[500] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r11,#(0)]
// Release input[756] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[780]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[268]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 16)]
vmul.u32 Q0, Q0, r6
// input[524]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 20)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r14,#(-32)]
// Release input[244] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[12]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 12)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[908]: Load as Q2
vldrw.u32 Q2, [r10, #(4 * -100)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r11,#(96)]
// Release input[780] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(64)]
// Release input[268] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(80)]
// Release input[524] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[908]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[396]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -108)]
vmul.u32 Q2, Q2, r6
// input[652]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -104)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r0,#(48)]
// Release input[12] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[140]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -112)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[844]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * 88)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r10,#(-400)]
// Release input[908] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-432)]
// Release input[396] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-416)]
// Release input[652] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[844]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[332]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 80)]
vmul.u32 Q1, Q1, r6
// input[588]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 84)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r14,#(-448)]
// Release input[140] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[76]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 76)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[972]: Load as Q0
vldrw.u32 Q0, [r10, #(4 * -36)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(352)]
// Release input[844] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(320)]
// Release input[332] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(336)]
// Release input[588] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[972]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[460]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -44)]
vmul.u32 Q0, Q0, r6
// input[716]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -40)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r0,#(304)]
// Release input[76] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[204]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -48)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[812]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * 56)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r10,#(-144)]
// Release input[972] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-176)]
// Release input[460] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r11,#(-160)]
// Release input[716] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[812]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[300]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 48)]
vmul.u32 Q2, Q2, r6
// input[556]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 52)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r14,#(-192)]
// Release input[204] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[44]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 44)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[940]: Load as Q1
vldrw.u32 Q1, [r10, #(4 * -68)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r11,#(224)]
// Release input[812] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(192)]
// Release input[300] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(208)]
// Release input[556] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[940]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[428]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -76)]
vmul.u32 Q1, Q1, r6
// input[684]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -72)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r0,#(176)]
// Release input[44] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[172]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -80)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[876]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * 120)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r10,#(-272)]
// Release input[940] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-304)]
// Release input[428] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r11,#(-288)]
// Release input[684] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[876]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[364]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 112)]
vmul.u32 Q0, Q0, r6
// input[620]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 116)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r14,#(-320)]
// Release input[172] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[108]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 108)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[1004]: Load as Q2
vldrw.u32 Q2, [r10, #(4 * -4)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r11,#(480)]
// Release input[876] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(448)]
// Release input[364] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(464)]
// Release input[620] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[1004]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[492]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -12)]
vmul.u32 Q2, Q2, r6
// input[748]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -8)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r0,#(432)]
// Release input[108] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[236]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -16)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[796]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * 40)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r10,#(-16)]
// Release input[1004] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-48)]
// Release input[492] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-32)]
// Release input[748] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[796]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[284]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 32)]
vmul.u32 Q1, Q1, r6
// input[540]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 36)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r14,#(-64)]
// Release input[236] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[28]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 28)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[924]: Load as Q0
vldrw.u32 Q0, [r10, #(4 * -84)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(160)]
// Release input[796] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(128)]
// Release input[284] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(144)]
// Release input[540] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[924]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[412]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -92)]
vmul.u32 Q0, Q0, r6
// input[668]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -88)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r0,#(112)]
// Release input[28] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[156]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -96)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[860]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * 104)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r10,#(-336)]
// Release input[924] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-368)]
// Release input[412] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r11,#(-352)]
// Release input[668] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[860]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[348]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 96)]
vmul.u32 Q2, Q2, r6
// input[604]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 100)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r14,#(-384)]
// Release input[156] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[92]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 92)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[988]: Load as Q1
vldrw.u32 Q1, [r10, #(4 * -20)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r11,#(416)]
// Release input[860] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(384)]
// Release input[348] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(400)]
// Release input[604] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[988]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[476]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -28)]
vmul.u32 Q1, Q1, r6
// input[732]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -24)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r0,#(368)]
// Release input[92] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[220]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -32)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[828]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * 72)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r10,#(-80)]
// Release input[988] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-112)]
// Release input[476] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r11,#(-96)]
// Release input[732] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[828]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[316]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 64)]
vmul.u32 Q0, Q0, r6
// input[572]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 68)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r14,#(-128)]
// Release input[220] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[60]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 60)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
// input[956]: Load as Q2
vldrw.u32 Q2, [r10, #(4 * -52)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r11,#(288)]
// Release input[828] from Q0
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r14,#(256)]
// Release input[316] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(272)]
// Release input[572] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[956]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r7
// input[444]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -60)]
vmul.u32 Q2, Q2, r6
// input[700]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -56)]
vqrdmlah.s32 Q0, Q2, r9
vstrw.u32 Q1, [r0,#(240)]
// Release input[60] from Q1
vqrdmulh.s32 Q1, Q3, r7
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r9
// input[188]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -64)]
vqrdmulh.s32 Q5, Q2, r3
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r2
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r9
// input[892]: Load as Q1
vldrw.u32 Q1, [r10, #(4 * -116)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r10,#(-208)]
// Release input[956] from Q2
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-240)]
// Release input[444] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-224)]
// Release input[700] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[892]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r7
// input[380]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -124)]
vmul.u32 Q1, Q1, r6
// input[636]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -120)]
vqrdmlah.s32 Q2, Q1, r9
vstrw.u32 Q0, [r14,#(-256)]
// Release input[188] from Q0
vqrdmulh.s32 Q0, Q3, r7
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r9
// input[124]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 124)]
vqrdmulh.s32 Q5, Q1, r3
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r2
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r9
// input[1020]: Load as Q0
vldrw.u32 Q0, [r10, #(4 * 12)]
vqrdmulh.s32 Q6, Q4, r5
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r10,#(-464)]
// Release input[892] from Q1
vqrdmlah.s32 Q6, Q4, r9
vstrw.u32 Q3, [r12,#(-496)]
// Release input[380] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r11,#(-480)]
// Release input[636] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r7, r6, [r8], #+8
ldrd r5, r4, [r8], #+8
ldrd r3, r2, [r8], #+8
// input[1020]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r7
// input[508]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 4)]
vmul.u32 Q0, Q0, r6
// input[764]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * 8)]
vqrdmlah.s32 Q1, Q0, r9
vstrw.u32 Q2, [r0,#(496)]
// Release input[124] from Q2
vqrdmulh.s32 Q2, Q3, r7
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r6
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r9
// input[252]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 0)]
vqrdmulh.s32 Q5, Q0, r3
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r2
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r9
vqrdmulh.s32 Q2, Q4, r5
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r4
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r10,#(48)]
// Release input[1020] from Q0
vqrdmlah.s32 Q2, Q4, r9
vstrw.u32 Q3, [r12,#(16)]
// Release input[508] from Q3
vsub.s32 Q4, Q1, Q2
vstrw.u32 Q4, [r11,#(32)]
// Release input[764] from Q4
vadd.s32 Q1, Q1, Q2
vstrw.u32 Q1, [r14,#(0)]
// Release input[252] from Q1
.equ modulus_inv, 4223674367
movw r7, #:lower16:modulus_inv
movt r7, #:upper16:modulus_inv
// Restore MVE vector registers
vpop {d8-d15}
// Restore GPRs
pop {r4-r11,lr}
bx lr

// Line count:        10271
// Instruction count: 7960