
///
/// Copyright (c) 2021 Arm Limited
/// SPDX-License-Identifier: MIT
///
/// Permission is hereby granted, free of charge, to any person obtaining a copy
/// of this software and associated documentation files (the "Software"), to deal
/// in the Software without restriction, including without limitation the rights
/// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
/// copies of the Software, and to permit persons to whom the Software is
/// furnished to do so, subject to the following conditions:
///
/// The above copyright notice and this permission notice shall be included in all
/// copies or substantial portions of the Software.
///
/// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
/// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
/// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
/// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
/// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
/// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
/// SOFTWARE.
///



///
/// This assembly code has been auto-generated.
/// Don't modify it directly.
///

.data
.global ntt_768_u32_33556993_299353_incomplete_good_twiddles
ntt_768_u32_33556993_299353_incomplete_good_twiddles: // For base multiplication
.word   22568483 // zeta^  0 * 2^31 = 299353^  0 * 2^31 = 1 * 2^31
.word 2863202269 // zeta^  0 * f(q^(-1) mod 2^32) * 2^31 = 299353^  0 * 375649793 * 2^31
.word   14800813 // zeta^640 * 2^31 = 299353^640 * 2^31 = 25038562 * 2^31
.word 3019303507 // zeta^640 * f(q^(-1) mod 2^32) * 2^31 = 299353^640 * 375649793 * 2^31
.word   29445319 // zeta^320 * 2^31 = 299353^320 * 2^31 = 2013241 * 2^31
.word 1937930553 // zeta^320 * f(q^(-1) mod 2^32) * 2^31 = 299353^320 * 375649793 * 2^31
.word     490723 // zeta^192 * 2^31 = 299353^192 * 2^31 = 15854702 * 2^31
.word    2973981 // zeta^192 * f(q^(-1) mod 2^32) * 2^31 = 299353^192 * 375649793 * 2^31
.word    2600037 // zeta^544 * 2^31 = 299353^544 * 2^31 = 29356361 * 2^31
.word 2267039131 // zeta^544 * f(q^(-1) mod 2^32) * 2^31 = 299353^544 * 375649793 * 2^31
.word   50737913 // zeta^416 * 2^31 = 299353^416 * 2^31 = 32616688 * 2^31
.word 3954411271 // zeta^416 * f(q^(-1) mod 2^32) * 2^31 = 299353^416 * 375649793 * 2^31
.word   12865833 // zeta^ 96 * 2^31 = 299353^ 96 * 2^31 = 14579576 * 2^31
.word 1885554903 // zeta^ 96 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 96 * 375649793 * 2^31
.word   25786061 // zeta^736 * 2^31 = 299353^736 * 2^31 = 23624597 * 2^31
.word 1460046643 // zeta^736 * f(q^(-1) mod 2^32) * 2^31 = 299353^736 * 375649793 * 2^31
.word   23929393 // zeta^272 * 2^31 = 299353^272 * 2^31 = 2711401 * 2^31
.word 2965686223 // zeta^272 * f(q^(-1) mod 2^32) * 2^31 = 299353^272 * 375649793 * 2^31
.word   64126327 // zeta^144 * 2^31 = 299353^144 * 2^31 = 26823146 * 2^31
.word 4170721417 // zeta^144 * f(q^(-1) mod 2^32) * 2^31 = 299353^144 * 375649793 * 2^31
.word    7890165 // zeta^592 * 2^31 = 299353^592 * 2^31 = 21166324 * 2^31
.word  902114571 // zeta^592 * f(q^(-1) mod 2^32) * 2^31 = 299353^592 * 375649793 * 2^31
.word   12060473 // zeta^464 * 2^31 = 299353^464 * 2^31 = 518908 * 2^31
.word 2001482439 // zeta^464 * f(q^(-1) mod 2^32) * 2^31 = 299353^464 * 375649793 * 2^31
.word   22718411 // zeta^ 48 * 2^31 = 299353^ 48 * 2^31 = 14745691 * 2^31
.word 2347189813 // zeta^ 48 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 48 * 375649793 * 2^31
.word   42631425 // zeta^688 * 2^31 = 299353^688 * 2^31 = 15739856 * 2^31
.word 3961227519 // zeta^688 * f(q^(-1) mod 2^32) * 2^31 = 299353^688 * 375649793 * 2^31
.word   59046925 // zeta^368 * 2^31 = 299353^368 * 2^31 = 33153165 * 2^31
.word 2604631539 // zeta^368 * f(q^(-1) mod 2^32) * 2^31 = 299353^368 * 375649793 * 2^31
.word   21096031 // zeta^240 * 2^31 = 299353^240 * 2^31 = 20044445 * 2^31
.word 1788989345 // zeta^240 * f(q^(-1) mod 2^32) * 2^31 = 299353^240 * 375649793 * 2^31
.word   13060269 // zeta^520 * 2^31 = 299353^520 * 2^31 = 24586938 * 2^31
.word 2256238931 // zeta^520 * f(q^(-1) mod 2^32) * 2^31 = 299353^520 * 375649793 * 2^31
.word   42196639 // zeta^392 * 2^31 = 299353^392 * 2^31 = 11458020 * 2^31
.word 2215794529 // zeta^392 * f(q^(-1) mod 2^32) * 2^31 = 299353^392 * 375649793 * 2^31
.word   21384651 // zeta^ 72 * 2^31 = 299353^ 72 * 2^31 = 14626653 * 2^31
.word 3900153909 // zeta^ 72 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 72 * 375649793 * 2^31
.word   59814003 // zeta^712 * 2^31 = 299353^712 * 2^31 = 7514760 * 2^31
.word 3563572621 // zeta^712 * f(q^(-1) mod 2^32) * 2^31 = 299353^712 * 375649793 * 2^31
.word   37926881 // zeta^296 * 2^31 = 299353^296 * 2^31 = 27800794 * 2^31
.word 1862799903 // zeta^296 * f(q^(-1) mod 2^32) * 2^31 = 299353^296 * 375649793 * 2^31
.word   15144207 // zeta^168 * 2^31 = 299353^168 * 2^31 = 3819232 * 2^31
.word 2182054129 // zeta^168 * f(q^(-1) mod 2^32) * 2^31 = 299353^168 * 375649793 * 2^31
.word   34389191 // zeta^616 * 2^31 = 299353^616 * 2^31 = 23245647 * 2^31
.word 2778138937 // zeta^616 * f(q^(-1) mod 2^32) * 2^31 = 299353^616 * 375649793 * 2^31
.word   61314877 // zeta^488 * 2^31 = 299353^488 * 2^31 = 19973843 * 2^31
.word  913099459 // zeta^488 * f(q^(-1) mod 2^32) * 2^31 = 299353^488 * 375649793 * 2^31
.word    5537745 // zeta^ 24 * 2^31 = 299353^ 24 * 2^31 = 21289485 * 2^31
.word 1761978927 // zeta^ 24 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 24 * 375649793 * 2^31
.word   45573613 // zeta^664 * 2^31 = 299353^664 * 2^31 = 21424662 * 2^31
.word 4172274707 // zeta^664 * f(q^(-1) mod 2^32) * 2^31 = 299353^664 * 375649793 * 2^31
.word   41269183 // zeta^344 * 2^31 = 299353^344 * 2^31 = 26976670 * 2^31
.word 1713094209 // zeta^344 * f(q^(-1) mod 2^32) * 2^31 = 299353^344 * 375649793 * 2^31
.word    8430951 // zeta^216 * 2^31 = 299353^216 * 2^31 = 23642097 * 2^31
.word 2411290777 // zeta^216 * f(q^(-1) mod 2^32) * 2^31 = 299353^216 * 375649793 * 2^31
.word   47819683 // zeta^568 * 2^31 = 299353^568 * 2^31 = 27276494 * 2^31
.word 1882108509 // zeta^568 * f(q^(-1) mod 2^32) * 2^31 = 299353^568 * 375649793 * 2^31
.word    3519557 // zeta^440 * 2^31 = 299353^440 * 2^31 = 16323183 * 2^31
.word 3219193275 // zeta^440 * f(q^(-1) mod 2^32) * 2^31 = 299353^440 * 375649793 * 2^31
.word   16723085 // zeta^120 * 2^31 = 299353^120 * 2^31 = 16204162 * 2^31
.word 1906988403 // zeta^120 * f(q^(-1) mod 2^32) * 2^31 = 299353^120 * 375649793 * 2^31
.word   23154315 // zeta^760 * 2^31 = 299353^760 * 2^31 = 3793231 * 2^31
.word  727981941 // zeta^760 * f(q^(-1) mod 2^32) * 2^31 = 299353^760 * 375649793 * 2^31
.word   29464415 // zeta^260 * 2^31 = 299353^260 * 2^31 = 29589567 * 2^31
.word 1124867745 // zeta^260 * f(q^(-1) mod 2^32) * 2^31 = 299353^260 * 375649793 * 2^31
.word   16834411 // zeta^132 * 2^31 = 299353^132 * 2^31 = 23825509 * 2^31
.word 2414694037 // zeta^132 * f(q^(-1) mod 2^32) * 2^31 = 299353^132 * 375649793 * 2^31
.word    3336971 // zeta^580 * 2^31 = 299353^580 * 2^31 = 18571159 * 2^31
.word  984580853 // zeta^580 * f(q^(-1) mod 2^32) * 2^31 = 299353^580 * 375649793 * 2^31
.word   35987869 // zeta^452 * 2^31 = 299353^452 * 2^31 = 25099490 * 2^31
.word 3520528483 // zeta^452 * f(q^(-1) mod 2^32) * 2^31 = 299353^452 * 375649793 * 2^31
.word   65924417 // zeta^ 36 * 2^31 = 299353^ 36 * 2^31 = 18723698 * 2^31
.word   66231487 // zeta^ 36 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 36 * 375649793 * 2^31
.word   56270029 // zeta^676 * 2^31 = 299353^676 * 2^31 = 26036127 * 2^31
.word 2830198067 // zeta^676 * f(q^(-1) mod 2^32) * 2^31 = 299353^676 * 375649793 * 2^31
.word    6393295 // zeta^356 * 2^31 = 299353^356 * 2^31 = 7994472 * 2^31
.word 2689370161 // zeta^356 * f(q^(-1) mod 2^32) * 2^31 = 299353^356 * 375649793 * 2^31
.word    9671303 // zeta^228 * 2^31 = 299353^228 * 2^31 = 2138810 * 2^31
.word 3966350201 // zeta^228 * f(q^(-1) mod 2^32) * 2^31 = 299353^228 * 375649793 * 2^31
.word   39920455 // zeta^532 * 2^31 = 299353^532 * 2^31 = 15308198 * 2^31
.word 3879969465 // zeta^532 * f(q^(-1) mod 2^32) * 2^31 = 299353^532 * 375649793 * 2^31
.word   12915337 // zeta^404 * 2^31 = 299353^404 * 2^31 = 8817795 * 2^31
.word 2926593911 // zeta^404 * f(q^(-1) mod 2^32) * 2^31 = 299353^404 * 375649793 * 2^31
.word   28711753 // zeta^ 84 * 2^31 = 299353^ 84 * 2^31 = 13908588 * 2^31
.word  752271031 // zeta^ 84 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 84 * 375649793 * 2^31
.word   49951167 // zeta^724 * 2^31 = 299353^724 * 2^31 = 25986735 * 2^31
.word 3931849793 // zeta^724 * f(q^(-1) mod 2^32) * 2^31 = 299353^724 * 375649793 * 2^31
.word   32477005 // zeta^308 * 2^31 = 299353^308 * 2^31 = 18367002 * 2^31
.word 3247796915 // zeta^308 * f(q^(-1) mod 2^32) * 2^31 = 299353^308 * 375649793 * 2^31
.word   52956899 // zeta^180 * 2^31 = 299353^180 * 2^31 = 31254932 * 2^31
.word  985714461 // zeta^180 * f(q^(-1) mod 2^32) * 2^31 = 299353^180 * 375649793 * 2^31
.word   49240327 // zeta^628 * 2^31 = 299353^628 * 2^31 = 12632936 * 2^31
.word 4123979001 // zeta^628 * f(q^(-1) mod 2^32) * 2^31 = 299353^628 * 375649793 * 2^31
.word    4015583 // zeta^500 * 2^31 = 299353^500 * 2^31 = 19827515 * 2^31
.word 4016140321 // zeta^500 * f(q^(-1) mod 2^32) * 2^31 = 299353^500 * 375649793 * 2^31
.word    4106643 // zeta^ 12 * 2^31 = 299353^ 12 * 2^31 = 32984098 * 2^31
.word 2465535085 // zeta^ 12 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 12 * 375649793 * 2^31
.word    3455577 // zeta^652 * 2^31 = 299353^652 * 2^31 = 6592748 * 2^31
.word 2655960999 // zeta^652 * f(q^(-1) mod 2^32) * 2^31 = 299353^652 * 375649793 * 2^31
.word   24352595 // zeta^332 * 2^31 = 299353^332 * 2^31 = 11703708 * 2^31
.word 1141483181 // zeta^332 * f(q^(-1) mod 2^32) * 2^31 = 299353^332 * 375649793 * 2^31
.word    7734269 // zeta^204 * 2^31 = 299353^204 * 2^31 = 26691971 * 2^31
.word 1323163139 // zeta^204 * f(q^(-1) mod 2^32) * 2^31 = 299353^204 * 375649793 * 2^31
.word   46722155 // zeta^556 * 2^31 = 299353^556 * 2^31 = 14873638 * 2^31
.word 1252475285 // zeta^556 * f(q^(-1) mod 2^32) * 2^31 = 299353^556 * 375649793 * 2^31
.word   40466367 // zeta^428 * 2^31 = 299353^428 * 2^31 = 5624346 * 2^31
.word 3953655361 // zeta^428 * f(q^(-1) mod 2^32) * 2^31 = 299353^428 * 375649793 * 2^31
.word   22115915 // zeta^108 * 2^31 = 299353^108 * 2^31 = 4264131 * 2^31
.word 2248243125 // zeta^108 * f(q^(-1) mod 2^32) * 2^31 = 299353^108 * 375649793 * 2^31
.word   22497809 // zeta^748 * 2^31 = 299353^748 * 2^31 = 27817396 * 2^31
.word   48848879 // zeta^748 * f(q^(-1) mod 2^32) * 2^31 = 299353^748 * 375649793 * 2^31
.word    8747555 // zeta^284 * 2^31 = 299353^284 * 2^31 = 5130075 * 2^31
.word 2123621341 // zeta^284 * f(q^(-1) mod 2^32) * 2^31 = 299353^284 * 375649793 * 2^31
.word    6917847 // zeta^156 * 2^31 = 299353^156 * 2^31 = 8247799 * 2^31
.word 3643725609 // zeta^156 * f(q^(-1) mod 2^32) * 2^31 = 299353^156 * 375649793 * 2^31
.word   25107397 // zeta^604 * 2^31 = 299353^604 * 2^31 = 6688514 * 2^31
.word  782407227 // zeta^604 * f(q^(-1) mod 2^32) * 2^31 = 299353^604 * 375649793 * 2^31
.word     179365 // zeta^476 * 2^31 = 299353^476 * 2^31 = 1602327 * 2^31
.word 1021818203 // zeta^476 * f(q^(-1) mod 2^32) * 2^31 = 299353^476 * 375649793 * 2^31
.word   17007163 // zeta^ 60 * 2^31 = 299353^ 60 * 2^31 = 5443354 * 2^31
.word  822528965 // zeta^ 60 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 60 * 375649793 * 2^31
.word   53305899 // zeta^700 * 2^31 = 299353^700 * 2^31 = 16127868 * 2^31
.word 3084667861 // zeta^700 * f(q^(-1) mod 2^32) * 2^31 = 299353^700 * 375649793 * 2^31
.word   42721649 // zeta^380 * 2^31 = 299353^380 * 2^31 = 9132318 * 2^31
.word 2921236623 // zeta^380 * f(q^(-1) mod 2^32) * 2^31 = 299353^380 * 375649793 * 2^31
.word    8805149 // zeta^252 * 2^31 = 299353^252 * 2^31 = 8471290 * 2^31
.word  699713251 // zeta^252 * f(q^(-1) mod 2^32) * 2^31 = 299353^252 * 375649793 * 2^31
.word   52313173 // zeta^256 * 2^31 = 299353^256 * 2^31 = 8518431 * 2^31
.word 1275663787 // zeta^256 * f(q^(-1) mod 2^32) * 2^31 = 299353^256 * 375649793 * 2^31
.word   41324663 // zeta^128 * 2^31 = 299353^128 * 2^31 = 8518432 * 2^31
.word 4138866057 // zeta^128 * f(q^(-1) mod 2^32) * 2^31 = 299353^128 * 375649793 * 2^31
.word   66623263 // zeta^576 * 2^31 = 299353^576 * 2^31 = 17702291 * 2^31
.word 4291993313 // zeta^576 * f(q^(-1) mod 2^32) * 2^31 = 299353^576 * 375649793 * 2^31
.word   62511589 // zeta^448 * 2^31 = 299353^448 * 2^31 = 19715532 * 2^31
.word 1934956571 // zeta^448 * f(q^(-1) mod 2^32) * 2^31 = 299353^448 * 375649793 * 2^31
.word   16376073 // zeta^ 32 * 2^31 = 299353^ 32 * 2^31 = 940305 * 2^31
.word  340556023 // zeta^ 32 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 32 * 375649793 * 2^31
.word   52533103 // zeta^672 * 2^31 = 299353^672 * 2^31 = 30296666 * 2^31
.word 2607595153 // zeta^672 * f(q^(-1) mod 2^32) * 2^31 = 299353^672 * 375649793 * 2^31
.word   41327925 // zeta^352 * 2^31 = 299353^352 * 2^31 = 9932396 * 2^31
.word 2834920651 // zeta^352 * f(q^(-1) mod 2^32) * 2^31 = 299353^352 * 375649793 * 2^31
.word   20636765 // zeta^224 * 2^31 = 299353^224 * 2^31 = 24511972 * 2^31
.word  425508259 // zeta^224 * f(q^(-1) mod 2^32) * 2^31 = 299353^224 * 375649793 * 2^31
.word    2987659 // zeta^528 * 2^31 = 299353^528 * 2^31 = 6733847 * 2^31
.word  124245877 // zeta^528 * f(q^(-1) mod 2^32) * 2^31 = 299353^528 * 375649793 * 2^31
.word   60474045 // zeta^400 * 2^31 = 299353^400 * 2^31 = 9445248 * 2^31
.word 3089932099 // zeta^400 * f(q^(-1) mod 2^32) * 2^31 = 299353^400 * 375649793 * 2^31
.word   55053513 // zeta^ 80 * 2^31 = 299353^ 80 * 2^31 = 33038085 * 2^31
.word 2293484855 // zeta^ 80 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 80 * 375649793 * 2^31
.word   29386685 // zeta^720 * 2^31 = 299353^720 * 2^31 = 20647416 * 2^31
.word 3195599427 // zeta^720 * f(q^(-1) mod 2^32) * 2^31 = 299353^720 * 375649793 * 2^31
.word   24482561 // zeta^304 * 2^31 = 299353^304 * 2^31 = 17817137 * 2^31
.word  333739775 // zeta^304 * f(q^(-1) mod 2^32) * 2^31 = 299353^304 * 375649793 * 2^31
.word   13643979 // zeta^176 * 2^31 = 299353^176 * 2^31 = 32562828 * 2^31
.word 2680929589 // zeta^176 * f(q^(-1) mod 2^32) * 2^31 = 299353^176 * 375649793 * 2^31
.word   46017955 // zeta^624 * 2^31 = 299353^624 * 2^31 = 13512548 * 2^31
.word 2505977949 // zeta^624 * f(q^(-1) mod 2^32) * 2^31 = 299353^624 * 375649793 * 2^31
.word    4393901 // zeta^496 * 2^31 = 299353^496 * 2^31 = 13108720 * 2^31
.word  815642195 // zeta^496 * f(q^(-1) mod 2^32) * 2^31 = 299353^496 * 375649793 * 2^31
.word   24917347 // zeta^  8 * 2^31 = 299353^  8 * 2^31 = 22098973 * 2^31
.word 2079172765 // zeta^  8 * f(q^(-1) mod 2^32) * 2^31 = 299353^  8 * 375649793 * 2^31
.word    4420623 // zeta^648 * 2^31 = 299353^648 * 2^31 = 13128918 * 2^31
.word   40444401 // zeta^648 * f(q^(-1) mod 2^32) * 2^31 = 299353^648 * 375649793 * 2^31
.word    7299983 // zeta^328 * 2^31 = 299353^328 * 2^31 = 26042233 * 2^31
.word  731394673 // zeta^328 * f(q^(-1) mod 2^32) * 2^31 = 299353^328 * 375649793 * 2^31
.word   62241627 // zeta^200 * 2^31 = 299353^200 * 2^31 = 7111893 * 2^31
.word  336581285 // zeta^200 * f(q^(-1) mod 2^32) * 2^31 = 299353^200 * 375649793 * 2^31
.word   51969779 // zeta^552 * 2^31 = 299353^552 * 2^31 = 29737761 * 2^31
.word 2112913165 // zeta^552 * f(q^(-1) mod 2^32) * 2^31 = 299353^552 * 375649793 * 2^31
.word   56339667 // zeta^424 * 2^31 = 299353^424 * 2^31 = 23981562 * 2^31
.word 3975713069 // zeta^424 * f(q^(-1) mod 2^32) * 2^31 = 299353^424 * 375649793 * 2^31
.word    5799109 // zeta^104 * 2^31 = 299353^104 * 2^31 = 13583150 * 2^31
.word 3381867835 // zeta^104 * f(q^(-1) mod 2^32) * 2^31 = 299353^104 * 375649793 * 2^31
.word    6631307 // zeta^744 * 2^31 = 299353^744 * 2^31 = 3271804 * 2^31
.word 1865039477 // zeta^744 * f(q^(-1) mod 2^32) * 2^31 = 299353^744 * 375649793 * 2^31
.word   21540373 // zeta^280 * 2^31 = 299353^280 * 2^31 = 12132331 * 2^31
.word  122692587 // zeta^280 * f(q^(-1) mod 2^32) * 2^31 = 299353^280 * 375649793 * 2^31
.word   60635111 // zeta^152 * 2^31 = 299353^152 * 2^31 = 33421816 * 2^31
.word 1884671513 // zeta^152 * f(q^(-1) mod 2^32) * 2^31 = 299353^152 * 375649793 * 2^31
.word   58683035 // zeta^600 * 2^31 = 299353^600 * 2^31 = 9914896 * 2^31
.word 1883676517 // zeta^600 * f(q^(-1) mod 2^32) * 2^31 = 299353^600 * 375649793 * 2^31
.word   66395225 // zeta^472 * 2^31 = 299353^472 * 2^31 = 3334573 * 2^31
.word 3596770727 // zeta^472 * f(q^(-1) mod 2^32) * 2^31 = 299353^472 * 375649793 * 2^31
.word   63594429 // zeta^ 56 * 2^31 = 299353^ 56 * 2^31 = 17233810 * 2^31
.word 1075774019 // zeta^ 56 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 56 * 375649793 * 2^31
.word   10743133 // zeta^696 * 2^31 = 299353^696 * 2^31 = 10953311 * 2^31
.word 2957882531 // zeta^696 * f(q^(-1) mod 2^32) * 2^31 = 299353^696 * 375649793 * 2^31
.word   43959671 // zeta^376 * 2^31 = 299353^376 * 2^31 = 29763762 * 2^31
.word 3566985353 // zeta^376 * f(q^(-1) mod 2^32) * 2^31 = 299353^376 * 375649793 * 2^31
.word   27125763 // zeta^248 * 2^31 = 299353^248 * 2^31 = 12410931 * 2^31
.word 1179006461 // zeta^248 * f(q^(-1) mod 2^32) * 2^31 = 299353^248 * 375649793 * 2^31
.word   50279575 // zeta^516 * 2^31 = 299353^516 * 2^31 = 9731484 * 2^31
.word 1880273257 // zeta^516 * f(q^(-1) mod 2^32) * 2^31 = 299353^516 * 375649793 * 2^31
.word   46186997 // zeta^388 * 2^31 = 299353^388 * 2^31 = 5764058 * 2^31
.word 3005141003 // zeta^388 * f(q^(-1) mod 2^32) * 2^31 = 299353^388 * 375649793 * 2^31
.word   31126117 // zeta^ 68 * 2^31 = 299353^ 68 * 2^31 = 8457503 * 2^31
.word  774438811 // zeta^ 68 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 68 * 375649793 * 2^31
.word     906095 // zeta^708 * 2^31 = 299353^708 * 2^31 = 27028662 * 2^31
.word 1759019665 // zeta^708 * f(q^(-1) mod 2^32) * 2^31 = 299353^708 * 375649793 * 2^31
.word   10843957 // zeta^292 * 2^31 = 299353^292 * 2^31 = 7520866 * 2^31
.word 1464769227 // zeta^292 * f(q^(-1) mod 2^32) * 2^31 = 299353^292 * 375649793 * 2^31
.word   43211381 // zeta^164 * 2^31 = 299353^164 * 2^31 = 26244564 * 2^31
.word 1531000715 // zeta^164 * f(q^(-1) mod 2^32) * 2^31 = 299353^164 * 375649793 * 2^31
.word   57442683 // zeta^612 * 2^31 = 299353^612 * 2^31 = 31418183 * 2^31
.word  328617093 // zeta^612 * f(q^(-1) mod 2^32) * 2^31 = 299353^612 * 375649793 * 2^31
.word   30278985 // zeta^484 * 2^31 = 299353^484 * 2^31 = 5855662 * 2^31
.word 3017987255 // zeta^484 * f(q^(-1) mod 2^32) * 2^31 = 299353^484 * 375649793 * 2^31
.word   54198649 // zeta^ 20 * 2^31 = 299353^ 20 * 2^31 = 24739198 * 2^31
.word 1368373383 // zeta^ 20 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 20 * 375649793 * 2^31
.word   60562111 // zeta^660 * 2^31 = 299353^660 * 2^31 = 6490403 * 2^31
.word  953375553 // zeta^660 * f(q^(-1) mod 2^32) * 2^31 = 299353^660 * 375649793 * 2^31
.word   17162819 // zeta^340 * 2^31 = 299353^340 * 2^31 = 7570258 * 2^31
.word  363117501 // zeta^340 * f(q^(-1) mod 2^32) * 2^31 = 299353^340 * 375649793 * 2^31
.word   12317579 // zeta^212 * 2^31 = 299353^212 * 2^31 = 21478846 * 2^31
.word 1115388533 // zeta^212 * f(q^(-1) mod 2^32) * 2^31 = 299353^212 * 375649793 * 2^31
.word   14157087 // zeta^564 * 2^31 = 299353^564 * 2^31 = 2302061 * 2^31
.word 3309252833 // zeta^564 * f(q^(-1) mod 2^32) * 2^31 = 299353^564 * 375649793 * 2^31
.word   13077099 // zeta^436 * 2^31 = 299353^436 * 2^31 = 20669063 * 2^31
.word 2262082453 // zeta^436 * f(q^(-1) mod 2^32) * 2^31 = 299353^436 * 375649793 * 2^31
.word   63098403 // zeta^116 * 2^31 = 299353^116 * 2^31 = 13729478 * 2^31
.word  278826973 // zeta^116 * f(q^(-1) mod 2^32) * 2^31 = 299353^116 * 375649793 * 2^31
.word   11667751 // zeta^756 * 2^31 = 299353^756 * 2^31 = 26362414 * 2^31
.word  107838681 // zeta^756 * f(q^(-1) mod 2^32) * 2^31 = 299353^756 * 375649793 * 2^31
.word   63658409 // zeta^268 * 2^31 = 299353^268 * 2^31 = 26964245 * 2^31
.word 1639006295 // zeta^268 * f(q^(-1) mod 2^32) * 2^31 = 299353^268 * 375649793 * 2^31
.word   34208059 // zeta^140 * 2^31 = 299353^140 * 2^31 = 26391350 * 2^31
.word 4104541381 // zeta^140 * f(q^(-1) mod 2^32) * 2^31 = 299353^140 * 375649793 * 2^31
.word   59379717 // zeta^588 * 2^31 = 299353^588 * 2^31 = 6865022 * 2^31
.word 2971804155 // zeta^588 * f(q^(-1) mod 2^32) * 2^31 = 299353^588 * 375649793 * 2^31
.word   50175319 // zeta^460 * 2^31 = 299353^460 * 2^31 = 18568730 * 2^31
.word 4113287337 // zeta^460 * f(q^(-1) mod 2^32) * 2^31 = 299353^460 * 375649793 * 2^31
.word   26647619 // zeta^ 44 * 2^31 = 299353^ 44 * 2^31 = 27932647 * 2^31
.word  341311933 // zeta^ 44 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 44 * 375649793 * 2^31
.word   39812781 // zeta^684 * 2^31 = 299353^684 * 2^31 = 9249292 * 2^31
.word 1593787219 // zeta^684 * f(q^(-1) mod 2^32) * 2^31 = 299353^684 * 375649793 * 2^31
.word   44616177 // zeta^364 * 2^31 = 299353^364 * 2^31 = 5739597 * 2^31
.word 4246118415 // zeta^364 * f(q^(-1) mod 2^32) * 2^31 = 299353^364 * 375649793 * 2^31
.word   33175099 // zeta^236 * 2^31 = 299353^236 * 2^31 = 10003728 * 2^31
.word 2199394245 // zeta^236 * f(q^(-1) mod 2^32) * 2^31 = 299353^236 * 375649793 * 2^31
.word   60196139 // zeta^540 * 2^31 = 299353^540 * 2^31 = 25309194 * 2^31
.word  651241685 // zeta^540 * f(q^(-1) mod 2^32) * 2^31 = 299353^540 * 375649793 * 2^31
.word   35386701 // zeta^412 * 2^31 = 299353^412 * 2^31 = 30439269 * 2^31
.word 2774863027 // zeta^412 * f(q^(-1) mod 2^32) * 2^31 = 299353^412 * 375649793 * 2^31
.word   66934621 // zeta^ 92 * 2^31 = 299353^ 92 * 2^31 = 31954666 * 2^31
.word 3273149091 // zeta^ 92 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 92 * 375649793 * 2^31
.word   58485025 // zeta^732 * 2^31 = 299353^732 * 2^31 = 5086187 * 2^31
.word 4055556319 // zeta^732 * f(q^(-1) mod 2^32) * 2^31 = 299353^732 * 375649793 * 2^31
.word   13808087 // zeta^316 * 2^31 = 299353^316 * 2^31 = 17429125 * 2^31
.word 1210299433 // zeta^316 * f(q^(-1) mod 2^32) * 2^31 = 299353^316 * 375649793 * 2^31
.word   64372243 // zeta^188 * 2^31 = 299353^188 * 2^31 = 22872479 * 2^31
.word 2032828397 // zeta^188 * f(q^(-1) mod 2^32) * 2^31 = 299353^188 * 375649793 * 2^31
.word   58308837 // zeta^636 * 2^31 = 299353^636 * 2^31 = 25085703 * 2^31
.word 3595254043 // zeta^636 * f(q^(-1) mod 2^32) * 2^31 = 299353^636 * 375649793 * 2^31
.word     359507 // zeta^508 * 2^31 = 299353^508 * 2^31 = 661028 * 2^31
.word 2221523373 // zeta^508 * f(q^(-1) mod 2^32) * 2^31 = 299353^508 * 375649793 * 2^31
.word   25789323 // zeta^512 * 2^31 = 299353^512 * 2^31 = 25038561 * 2^31
.word  156101237 // zeta^512 * f(q^(-1) mod 2^32) * 2^31 = 299353^512 * 375649793 * 2^31
.word   44545503 // zeta^384 * 2^31 = 299353^384 * 2^31 = 33556992 * 2^31
.word 1431765025 // zeta^384 * f(q^(-1) mod 2^32) * 2^31 = 299353^384 * 375649793 * 2^31
.word    4602397 // zeta^ 64 * 2^31 = 299353^ 64 * 2^31 = 13841461 * 2^31
.word 2360010723 // zeta^ 64 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 64 * 375649793 * 2^31
.word   37668667 // zeta^704 * 2^31 = 299353^704 * 2^31 = 31543752 * 2^31
.word 2357036741 // zeta^704 * f(q^(-1) mod 2^32) * 2^31 = 299353^704 * 375649793 * 2^31
.word   14580883 // zeta^288 * 2^31 = 299353^288 * 2^31 = 3260327 * 2^31
.word 1687372141 // zeta^288 * f(q^(-1) mod 2^32) * 2^31 = 299353^288 * 375649793 * 2^31
.word   64513949 // zeta^160 * 2^31 = 299353^160 * 2^31 = 4200632 * 2^31
.word 2027928163 // zeta^160 * f(q^(-1) mod 2^32) * 2^31 = 299353^160 * 375649793 * 2^31
.word   46477221 // zeta^608 * 2^31 = 299353^608 * 2^31 = 9045021 * 2^31
.word 3869459035 // zeta^608 * f(q^(-1) mod 2^32) * 2^31 = 299353^608 * 375649793 * 2^31
.word   54248153 // zeta^480 * 2^31 = 299353^480 * 2^31 = 18977417 * 2^31
.word 2409412391 // zeta^480 * f(q^(-1) mod 2^32) * 2^31 = 299353^480 * 375649793 * 2^31
.word    6639941 // zeta^ 16 * 2^31 = 299353^ 16 * 2^31 = 24111745 * 2^31
.word 1205035195 // zeta^ 16 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 16 * 375649793 * 2^31
.word   43184593 // zeta^656 * 2^31 = 299353^656 * 2^31 = 30845592 * 2^31
.word 1329281071 // zeta^656 * f(q^(-1) mod 2^32) * 2^31 = 299353^656 * 375649793 * 2^31
.word   37727301 // zeta^336 * 2^31 = 299353^336 * 2^31 = 12909577 * 2^31
.word 1099367867 // zeta^336 * f(q^(-1) mod 2^32) * 2^31 = 299353^336 * 375649793 * 2^31
.word   59223821 // zeta^208 * 2^31 = 299353^208 * 2^31 = 12390669 * 2^31
.word 3392852723 // zeta^208 * f(q^(-1) mod 2^32) * 2^31 = 299353^208 * 375649793 * 2^31
.word   53470007 // zeta^560 * 2^31 = 299353^560 * 2^31 = 994165 * 2^31
.word 1614037705 // zeta^560 * f(q^(-1) mod 2^32) * 2^31 = 299353^560 * 375649793 * 2^31
.word   44395575 // zeta^432 * 2^31 = 299353^432 * 2^31 = 18811302 * 2^31
.word 1947777481 // zeta^432 * f(q^(-1) mod 2^32) * 2^31 = 299353^432 * 375649793 * 2^31
.word   62720085 // zeta^112 * 2^31 = 299353^112 * 2^31 = 20448273 * 2^31
.word 3479325099 // zeta^112 * f(q^(-1) mod 2^32) * 2^31 = 299353^112 * 375649793 * 2^31
.word    8067061 // zeta^752 * 2^31 = 299353^752 * 2^31 = 403828 * 2^31
.word 1690335755 // zeta^752 * f(q^(-1) mod 2^32) * 2^31 = 299353^752 * 375649793 * 2^31
.word   62693363 // zeta^264 * 2^31 = 299353^264 * 2^31 = 20428075 * 2^31
.word 4254522893 // zeta^264 * f(q^(-1) mod 2^32) * 2^31 = 299353^264 * 375649793 * 2^31
.word   54053717 // zeta^136 * 2^31 = 299353^136 * 2^31 = 8970055 * 2^31
.word 2038728363 // zeta^136 * f(q^(-1) mod 2^32) * 2^31 = 299353^136 * 375649793 * 2^31
.word    4872359 // zeta^584 * 2^31 = 299353^584 * 2^31 = 26445100 * 2^31
.word 3958386009 // zeta^584 * f(q^(-1) mod 2^32) * 2^31 = 299353^584 * 375649793 * 2^31
.word   45729335 // zeta^456 * 2^31 = 299353^456 * 2^31 = 18930340 * 2^31
.word  394813385 // zeta^456 * f(q^(-1) mod 2^32) * 2^31 = 299353^456 * 375649793 * 2^31
.word   10774319 // zeta^ 40 * 2^31 = 299353^ 40 * 2^31 = 9575431 * 2^31
.word  319254225 // zeta^ 40 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 40 * 375649793 * 2^31
.word   29187105 // zeta^680 * 2^31 = 299353^680 * 2^31 = 5756199 * 2^31
.word 2432167391 // zeta^680 * f(q^(-1) mod 2^32) * 2^31 = 299353^680 * 375649793 * 2^31
.word   60482679 // zeta^360 * 2^31 = 299353^360 * 2^31 = 30285189 * 2^31
.word 2429927817 // zeta^360 * f(q^(-1) mod 2^32) * 2^31 = 299353^360 * 375649793 * 2^31
.word   32724795 // zeta^232 * 2^31 = 299353^232 * 2^31 = 10311346 * 2^31
.word 1516828357 // zeta^232 * f(q^(-1) mod 2^32) * 2^31 = 299353^232 * 375649793 * 2^31
.word    6478875 // zeta^536 * 2^31 = 299353^536 * 2^31 = 135177 * 2^31
.word 2410295781 // zeta^536 * f(q^(-1) mod 2^32) * 2^31 = 299353^536 * 375649793 * 2^31
.word   61576241 // zeta^408 * 2^31 = 299353^408 * 2^31 = 12267508 * 2^31
.word 2532988367 // zeta^408 * f(q^(-1) mod 2^32) * 2^31 = 299353^408 * 375649793 * 2^31
.word     718761 // zeta^ 88 * 2^31 = 299353^ 88 * 2^31 = 30222420 * 2^31
.word  698196567 // zeta^ 88 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 88 * 375649793 * 2^31
.word   25844803 // zeta^728 * 2^31 = 299353^728 * 2^31 = 6580323 * 2^31
.word 2581873085 // zeta^728 * f(q^(-1) mod 2^32) * 2^31 = 299353^728 * 375649793 * 2^31
.word   56370853 // zeta^312 * 2^31 = 299353^312 * 2^31 = 22603682 * 2^31
.word 1337084763 // zeta^312 * f(q^(-1) mod 2^32) * 2^31 = 299353^312 * 375649793 * 2^31
.word   19294303 // zeta^184 * 2^31 = 299353^184 * 2^31 = 6280499 * 2^31
.word 2412858785 // zeta^184 * f(q^(-1) mod 2^32) * 2^31 = 299353^184 * 375649793 * 2^31
.word   39988223 // zeta^632 * 2^31 = 299353^632 * 2^31 = 21146062 * 2^31
.word 3115960833 // zeta^632 * f(q^(-1) mod 2^32) * 2^31 = 299353^632 * 375649793 * 2^31
.word   50390901 // zeta^504 * 2^31 = 299353^504 * 2^31 = 17352831 * 2^31
.word 2387978891 // zeta^504 * f(q^(-1) mod 2^32) * 2^31 = 299353^504 * 375649793 * 2^31
.word   20926989 // zeta^  4 * 2^31 = 299353^  4 * 2^31 = 27792935 * 2^31
.word 1289826291 // zeta^  4 * f(q^(-1) mod 2^32) * 2^31 = 299353^  4 * 375649793 * 2^31
.word   37649571 // zeta^644 * 2^31 = 299353^644 * 2^31 = 3967426 * 2^31
.word 3170099549 // zeta^644 * f(q^(-1) mod 2^32) * 2^31 = 299353^644 * 375649793 * 2^31
.word   66207891 // zeta^324 * 2^31 = 299353^324 * 2^31 = 6528331 * 2^31
.word 2535947629 // zeta^324 * f(q^(-1) mod 2^32) * 2^31 = 299353^324 * 375649793 * 2^31
.word   63777015 // zeta^196 * 2^31 = 299353^196 * 2^31 = 14985834 * 2^31
.word 3310386441 // zeta^196 * f(q^(-1) mod 2^32) * 2^31 = 299353^196 * 375649793 * 2^31
.word   23902605 // zeta^548 * 2^31 = 299353^548 * 2^31 = 7312429 * 2^31
.word 2763966579 // zeta^548 * f(q^(-1) mod 2^32) * 2^31 = 299353^548 * 375649793 * 2^31
.word    1189569 // zeta^420 * 2^31 = 299353^420 * 2^31 = 14833295 * 2^31
.word 4228735807 // zeta^420 * f(q^(-1) mod 2^32) * 2^31 = 299353^420 * 375649793 * 2^31
.word   36835001 // zeta^100 * 2^31 = 299353^100 * 2^31 = 27701331 * 2^31
.word 1276980039 // zeta^100 * f(q^(-1) mod 2^32) * 2^31 = 299353^100 * 375649793 * 2^31
.word   60720691 // zeta^740 * 2^31 = 299353^740 * 2^31 = 25562521 * 2^31
.word 1605597133 // zeta^740 * f(q^(-1) mod 2^32) * 2^31 = 299353^740 * 375649793 * 2^31
.word    6551875 // zeta^276 * 2^31 = 299353^276 * 2^31 = 27066590 * 2^31
.word 3341591741 // zeta^276 * f(q^(-1) mod 2^32) * 2^31 = 299353^276 * 375649793 * 2^31
.word   27193531 // zeta^148 * 2^31 = 299353^148 * 2^31 = 18248795 * 2^31
.word  414997829 // zeta^148 * f(q^(-1) mod 2^32) * 2^31 = 299353^148 * 375649793 * 2^31
.word   54796407 // zeta^596 * 2^31 = 299353^596 * 2^31 = 12078147 * 2^31
.word 3179578761 // zeta^596 * f(q^(-1) mod 2^32) * 2^31 = 299353^596 * 375649793 * 2^31
.word   38402233 // zeta^468 * 2^31 = 299353^468 * 2^31 = 19648405 * 2^31
.word 3542696263 // zeta^468 * f(q^(-1) mod 2^32) * 2^31 = 299353^468 * 375649793 * 2^31
.word   54036887 // zeta^ 52 * 2^31 = 299353^ 52 * 2^31 = 12887930 * 2^31
.word 2032884841 // zeta^ 52 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 52 * 375649793 * 2^31
.word   34636981 // zeta^692 * 2^31 = 299353^692 * 2^31 = 15189991 * 2^31
.word 1047170379 // zeta^692 * f(q^(-1) mod 2^32) * 2^31 = 299353^692 * 375649793 * 2^31
.word   55446235 // zeta^372 * 2^31 = 299353^372 * 2^31 = 7194579 * 2^31
.word 4187128613 // zeta^372 * f(q^(-1) mod 2^32) * 2^31 = 299353^372 * 375649793 * 2^31
.word   17873659 // zeta^244 * 2^31 = 299353^244 * 2^31 = 20924057 * 2^31
.word  170988293 // zeta^244 * f(q^(-1) mod 2^32) * 2^31 = 299353^244 * 375649793 * 2^31
.word   32905927 // zeta^524 * 2^31 = 299353^524 * 2^31 = 7165643 * 2^31
.word  190425913 // zeta^524 * f(q^(-1) mod 2^32) * 2^31 = 299353^524 * 375649793 * 2^31
.word   63007343 // zeta^396 * 2^31 = 299353^396 * 2^31 = 572895 * 2^31
.word 1829432209 // zeta^396 * f(q^(-1) mod 2^32) * 2^31 = 299353^396 * 375649793 * 2^31
.word   16938667 // zeta^ 76 * 2^31 = 299353^ 76 * 2^31 = 14988263 * 2^31
.word  181679957 // zeta^ 76 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 76 * 375649793 * 2^31
.word   42761391 // zeta^716 * 2^31 = 299353^716 * 2^31 = 21853285 * 2^31
.word 3153484113 // zeta^716 * f(q^(-1) mod 2^32) * 2^31 = 299353^716 * 375649793 * 2^31
.word   27301205 // zeta^300 * 2^31 = 299353^300 * 2^31 = 24307701 * 2^31
.word 2701180075 // zeta^300 * f(q^(-1) mod 2^32) * 2^31 = 299353^300 * 375649793 * 2^31
.word   20391831 // zeta^172 * 2^31 = 299353^172 * 2^31 = 18683355 * 2^31
.word 3042492009 // zeta^172 * f(q^(-1) mod 2^32) * 2^31 = 299353^172 * 375649793 * 2^31
.word   33938887 // zeta^620 * 2^31 = 299353^620 * 2^31 = 23553265 * 2^31
.word 2095573049 // zeta^620 * f(q^(-1) mod 2^32) * 2^31 = 299353^620 * 375649793 * 2^31
.word   44998071 // zeta^492 * 2^31 = 299353^492 * 2^31 = 29292862 * 2^31
.word 2046724169 // zeta^492 * f(q^(-1) mod 2^32) * 2^31 = 299353^492 * 375649793 * 2^31
.word   31727285 // zeta^ 28 * 2^31 = 299353^ 28 * 2^31 = 3117724 * 2^31
.word 1520104267 // zeta^ 28 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 28 * 375649793 * 2^31
.word   58366431 // zeta^668 * 2^31 = 299353^668 * 2^31 = 28426918 * 2^31
.word 2171345953 // zeta^668 * f(q^(-1) mod 2^32) * 2^31 = 299353^668 * 375649793 * 2^31
.word    8628961 // zeta^348 * 2^31 = 299353^348 * 2^31 = 28470806 * 2^31
.word  239410975 // zeta^348 * f(q^(-1) mod 2^32) * 2^31 = 299353^348 * 375649793 * 2^31
.word   42006589 // zeta^220 * 2^31 = 299353^220 * 2^31 = 26868479 * 2^31
.word 3512560067 // zeta^220 * f(q^(-1) mod 2^32) * 2^31 = 299353^220 * 375649793 * 2^31
.word    2741743 // zeta^572 * 2^31 = 299353^572 * 2^31 = 10684514 * 2^31
.word 2262138897 // zeta^572 * f(q^(-1) mod 2^32) * 2^31 = 299353^572 * 375649793 * 2^31
.word   50106823 // zeta^444 * 2^31 = 299353^444 * 2^31 = 28113639 * 2^31
.word 3472438329 // zeta^444 * f(q^(-1) mod 2^32) * 2^31 = 299353^444 * 375649793 * 2^31
.word   66754479 // zeta^124 * 2^31 = 299353^124 * 2^31 = 32895965 * 2^31
.word 2073443921 // zeta^124 * f(q^(-1) mod 2^32) * 2^31 = 299353^124 * 375649793 * 2^31
.word   24392337 // zeta^764 * 2^31 = 299353^764 * 2^31 = 24424675 * 2^31
.word 1373730671 // zeta^764 * f(q^(-1) mod 2^32) * 2^31 = 299353^764 * 375649793 * 2^31
// End of twiddles for base multiplication

.global ntt_768_u32_33556993_299353_incomplete_good_scale
ntt_768_u32_33556993_299353_incomplete_good_scale: // Constants for scaling by 1/N
.word 22568483 // 1/192
.word 2863202269 // 1/192 twisted
.data
roots:
.word     893127 /// zeta^256 * 2^31 = 299353^256 * 2^31 = 8518431 * 2^31
.word 2692621625 /// zeta^256 * f(q^(-1) mod 2^32) * 2^31 = 299353^256 * 375649793 * 2^31
.word   66384763 /// zeta^512 * 2^31 = 299353^512 * 2^31 = 25038561 * 2^31
.word 3749829253 /// zeta^512 * f(q^(-1) mod 2^32) * 2^31 = 299353^512 * 375649793 * 2^31
.word   33393089 // zeta^  0 * 2^31 = 299353^  0 * 2^31 = 1 * 2^31
.word 2147483711 // zeta^  0 * f(q^(-1) mod 2^32) * 2^31 = 299353^  0 * 375649793 * 2^31
.word   33393089 // zeta^  0 * 2^31 = 299353^  0 * 2^31 = 1 * 2^31
.word 2147483711 // zeta^  0 * f(q^(-1) mod 2^32) * 2^31 = 299353^  0 * 375649793 * 2^31
.word   29095681 // zeta^576 * 2^31 = 299353^576 * 2^31 = 17702291 * 2^31
.word 3280343807 // zeta^576 * f(q^(-1) mod 2^32) * 2^31 = 299353^576 * 375649793 * 2^31
.word   33393089 // zeta^  0 * 2^31 = 299353^  0 * 2^31 = 1 * 2^31
.word 2147483711 // zeta^  0 * f(q^(-1) mod 2^32) * 2^31 = 299353^  0 * 375649793 * 2^31
.word   33393089 // zeta^  0 * 2^31 = 299353^  0 * 2^31 = 1 * 2^31
.word 2147483711 // zeta^  0 * f(q^(-1) mod 2^32) * 2^31 = 299353^  0 * 375649793 * 2^31
.word   29095681 // zeta^576 * 2^31 = 299353^576 * 2^31 = 17702291 * 2^31
.word 3280343807 // zeta^576 * f(q^(-1) mod 2^32) * 2^31 = 299353^576 * 375649793 * 2^31
.word   29095681 // zeta^576 * 2^31 = 299353^576 * 2^31 = 17702291 * 2^31
.word 3280343807 // zeta^576 * f(q^(-1) mod 2^32) * 2^31 = 299353^576 * 375649793 * 2^31
.word   14476917 // zeta^288 * 2^31 = 299353^288 * 2^31 = 3260327 * 2^31
.word 2356128651 // zeta^288 * f(q^(-1) mod 2^32) * 2^31 = 299353^288 * 375649793 * 2^31
.word   43317805 // zeta^ 96 * 2^31 = 299353^ 96 * 2^31 = 14579576 * 2^31
.word  933021651 // zeta^ 96 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 96 * 375649793 * 2^31
.word   14476917 // zeta^288 * 2^31 = 299353^288 * 2^31 = 3260327 * 2^31
.word 2356128651 // zeta^288 * f(q^(-1) mod 2^32) * 2^31 = 299353^288 * 375649793 * 2^31
.word   18598075 // zeta^528 * 2^31 = 299353^528 * 2^31 = 6733847 * 2^31
.word 2578416965 // zeta^528 * f(q^(-1) mod 2^32) * 2^31 = 299353^528 * 375649793 * 2^31
.word    4885007 // zeta^336 * 2^31 = 299353^336 * 2^31 = 12909577 * 2^31
.word 2973633521 // zeta^336 * f(q^(-1) mod 2^32) * 2^31 = 299353^336 * 375649793 * 2^31
.word   43317805 // zeta^ 96 * 2^31 = 299353^ 96 * 2^31 = 14579576 * 2^31
.word  933021651 // zeta^ 96 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 96 * 375649793 * 2^31
.word   64683161 // zeta^ 48 * 2^31 = 299353^ 48 * 2^31 = 14745691 * 2^31
.word 3091135847 // zeta^ 48 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 48 * 375649793 * 2^31
.word   34427601 // zeta^624 * 2^31 = 299353^624 * 2^31 = 13512548 * 2^31
.word  864737071 // zeta^624 * f(q^(-1) mod 2^32) * 2^31 = 299353^624 * 375649793 * 2^31
.word   33393089 // zeta^  0 * 2^31 = 299353^  0 * 2^31 = 1 * 2^31
.word 2147483711 // zeta^  0 * f(q^(-1) mod 2^32) * 2^31 = 299353^  0 * 375649793 * 2^31
.word   33393089 // zeta^  0 * 2^31 = 299353^  0 * 2^31 = 1 * 2^31
.word 2147483711 // zeta^  0 * f(q^(-1) mod 2^32) * 2^31 = 299353^  0 * 375649793 * 2^31
.word   29095681 // zeta^576 * 2^31 = 299353^576 * 2^31 = 17702291 * 2^31
.word 3280343807 // zeta^576 * f(q^(-1) mod 2^32) * 2^31 = 299353^576 * 375649793 * 2^31
.word   29095681 // zeta^576 * 2^31 = 299353^576 * 2^31 = 17702291 * 2^31
.word 3280343807 // zeta^576 * f(q^(-1) mod 2^32) * 2^31 = 299353^576 * 375649793 * 2^31
.word   14476917 // zeta^288 * 2^31 = 299353^288 * 2^31 = 3260327 * 2^31
.word 2356128651 // zeta^288 * f(q^(-1) mod 2^32) * 2^31 = 299353^288 * 375649793 * 2^31
.word   43317805 // zeta^ 96 * 2^31 = 299353^ 96 * 2^31 = 14579576 * 2^31
.word  933021651 // zeta^ 96 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 96 * 375649793 * 2^31
.word   14476917 // zeta^288 * 2^31 = 299353^288 * 2^31 = 3260327 * 2^31
.word 2356128651 // zeta^288 * f(q^(-1) mod 2^32) * 2^31 = 299353^288 * 375649793 * 2^31
.word   18598075 // zeta^528 * 2^31 = 299353^528 * 2^31 = 6733847 * 2^31
.word 2578416965 // zeta^528 * f(q^(-1) mod 2^32) * 2^31 = 299353^528 * 375649793 * 2^31
.word    4885007 // zeta^336 * 2^31 = 299353^336 * 2^31 = 12909577 * 2^31
.word 2973633521 // zeta^336 * f(q^(-1) mod 2^32) * 2^31 = 299353^336 * 375649793 * 2^31
.word   43317805 // zeta^ 96 * 2^31 = 299353^ 96 * 2^31 = 14579576 * 2^31
.word  933021651 // zeta^ 96 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 96 * 375649793 * 2^31
.word   64683161 // zeta^ 48 * 2^31 = 299353^ 48 * 2^31 = 14745691 * 2^31
.word 3091135847 // zeta^ 48 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 48 * 375649793 * 2^31
.word   34427601 // zeta^624 * 2^31 = 299353^624 * 2^31 = 13512548 * 2^31
.word  864737071 // zeta^624 * f(q^(-1) mod 2^32) * 2^31 = 299353^624 * 375649793 * 2^31
.word   18598075 // zeta^528 * 2^31 = 299353^528 * 2^31 = 6733847 * 2^31
.word 2578416965 // zeta^528 * f(q^(-1) mod 2^32) * 2^31 = 299353^528 * 375649793 * 2^31
.word   39999747 // zeta^264 * 2^31 = 299353^264 * 2^31 = 20428075 * 2^31
.word 3454780669 // zeta^264 * f(q^(-1) mod 2^32) * 2^31 = 299353^264 * 375649793 * 2^31
.word   45317587 // zeta^ 72 * 2^31 = 299353^ 72 * 2^31 = 14626653 * 2^31
.word 3083517997 // zeta^ 72 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 72 * 375649793 * 2^31
.word    4885007 // zeta^336 * 2^31 = 299353^336 * 2^31 = 12909577 * 2^31
.word 2973633521 // zeta^336 * f(q^(-1) mod 2^32) * 2^31 = 299353^336 * 375649793 * 2^31
.word   48811299 // zeta^552 * 2^31 = 299353^552 * 2^31 = 29737761 * 2^31
.word 4050555101 // zeta^552 * f(q^(-1) mod 2^32) * 2^31 = 299353^552 * 375649793 * 2^31
.word   54571669 // zeta^360 * 2^31 = 299353^360 * 2^31 = 30285189 * 2^31
.word 4085587819 // zeta^360 * f(q^(-1) mod 2^32) * 2^31 = 299353^360 * 375649793 * 2^31
.word   64683161 // zeta^ 48 * 2^31 = 299353^ 48 * 2^31 = 14745691 * 2^31
.word 3091135847 // zeta^ 48 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 48 * 375649793 * 2^31
.word   59281651 // zeta^ 24 * 2^31 = 299353^ 24 * 2^31 = 21289485 * 2^31
.word 3509906701 // zeta^ 24 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 24 * 375649793 * 2^31
.word   40500013 // zeta^600 * 2^31 = 299353^600 * 2^31 = 9914896 * 2^31
.word  634504915 // zeta^600 * f(q^(-1) mod 2^32) * 2^31 = 299353^600 * 375649793 * 2^31
.word   34427601 // zeta^624 * 2^31 = 299353^624 * 2^31 = 13512548 * 2^31
.word  864737071 // zeta^624 * f(q^(-1) mod 2^32) * 2^31 = 299353^624 * 375649793 * 2^31
.word   25917637 // zeta^312 * 2^31 = 299353^312 * 2^31 = 22603682 * 2^31
.word 1446525243 // zeta^312 * f(q^(-1) mod 2^32) * 2^31 = 299353^312 * 375649793 * 2^31
.word    8356523 // zeta^120 * 2^31 = 299353^120 * 2^31 = 16204162 * 2^31
.word 1036987221 // zeta^120 * f(q^(-1) mod 2^32) * 2^31 = 299353^120 * 375649793 * 2^31
.word   39999747 // zeta^264 * 2^31 = 299353^264 * 2^31 = 20428075 * 2^31
.word 3454780669 // zeta^264 * f(q^(-1) mod 2^32) * 2^31 = 299353^264 * 375649793 * 2^31
.word   35394733 // zeta^516 * 2^31 = 299353^516 * 2^31 = 9731484 * 2^31
.word  622767443 // zeta^516 * f(q^(-1) mod 2^32) * 2^31 = 299353^516 * 375649793 * 2^31
.word   12271567 // zeta^324 * 2^31 = 299353^324 * 2^31 = 6528331 * 2^31
.word 2565264945 // zeta^324 * f(q^(-1) mod 2^32) * 2^31 = 299353^324 * 375649793 * 2^31
.word   45317587 // zeta^ 72 * 2^31 = 299353^ 72 * 2^31 = 14626653 * 2^31
.word 3083517997 // zeta^ 72 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 72 * 375649793 * 2^31
.word   65797823 // zeta^ 36 * 2^31 = 299353^ 36 * 2^31 = 18723698 * 2^31
.word 1198225217 // zeta^ 36 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 36 * 375649793 * 2^31
.word   56722355 // zeta^612 * 2^31 = 299353^612 * 2^31 = 31418183 * 2^31
.word 4158093901 // zeta^612 * f(q^(-1) mod 2^32) * 2^31 = 299353^612 * 375649793 * 2^31
.word   48811299 // zeta^552 * 2^31 = 299353^552 * 2^31 = 29737761 * 2^31
.word 4050555101 // zeta^552 * f(q^(-1) mod 2^32) * 2^31 = 299353^552 * 375649793 * 2^31
.word   12778219 // zeta^276 * 2^31 = 299353^276 * 2^31 = 27066590 * 2^31
.word 1732129557 // zeta^276 * f(q^(-1) mod 2^32) * 2^31 = 299353^276 * 375649793 * 2^31
.word   21111903 // zeta^ 84 * 2^31 = 299353^ 84 * 2^31 = 13908588 * 2^31
.word  890081697 // zeta^ 84 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 84 * 375649793 * 2^31
.word   54571669 // zeta^360 * 2^31 = 299353^360 * 2^31 = 30285189 * 2^31
.word 4085587819 // zeta^360 * f(q^(-1) mod 2^32) * 2^31 = 299353^360 * 375649793 * 2^31
.word   31380141 // zeta^564 * 2^31 = 299353^564 * 2^31 = 2302061 * 2^31
.word 2294804307 // zeta^564 * f(q^(-1) mod 2^32) * 2^31 = 299353^564 * 375649793 * 2^31
.word    6014597 // zeta^372 * 2^31 = 299353^372 * 2^31 = 7194579 * 2^31
.word 2607901563 // zeta^372 * f(q^(-1) mod 2^32) * 2^31 = 299353^372 * 375649793 * 2^31
.word   59281651 // zeta^ 24 * 2^31 = 299353^ 24 * 2^31 = 21289485 * 2^31
.word 3509906701 // zeta^ 24 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 24 * 375649793 * 2^31
.word   40872659 // zeta^ 12 * 2^31 = 299353^ 12 * 2^31 = 32984098 * 2^31
.word 2110821165 // zeta^ 12 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 12 * 375649793 * 2^31
.word   62080381 // zeta^588 * 2^31 = 299353^588 * 2^31 = 6865022 * 2^31
.word  439327875 // zeta^588 * f(q^(-1) mod 2^32) * 2^31 = 299353^588 * 375649793 * 2^31
.word   40500013 // zeta^600 * 2^31 = 299353^600 * 2^31 = 9914896 * 2^31
.word  634504915 // zeta^600 * f(q^(-1) mod 2^32) * 2^31 = 299353^600 * 375649793 * 2^31
.word   58797193 // zeta^300 * 2^31 = 299353^300 * 2^31 = 24307701 * 2^31
.word 3703057783 // zeta^300 * f(q^(-1) mod 2^32) * 2^31 = 299353^300 * 375649793 * 2^31
.word   50479773 // zeta^108 * 2^31 = 299353^108 * 2^31 = 4264131 * 2^31
.word 2420367203 // zeta^108 * f(q^(-1) mod 2^32) * 2^31 = 299353^108 * 375649793 * 2^31
.word   25917637 // zeta^312 * 2^31 = 299353^312 * 2^31 = 22603682 * 2^31
.word 1446525243 // zeta^312 * f(q^(-1) mod 2^32) * 2^31 = 299353^312 * 375649793 * 2^31
.word    3784291 // zeta^540 * 2^31 = 299353^540 * 2^31 = 25309194 * 2^31
.word 1619664797 // zeta^540 * f(q^(-1) mod 2^32) * 2^31 = 299353^540 * 375649793 * 2^31
.word   57130935 // zeta^348 * 2^31 = 299353^348 * 2^31 = 28470806 * 2^31
.word 1821992521 // zeta^348 * f(q^(-1) mod 2^32) * 2^31 = 299353^348 * 375649793 * 2^31
.word    8356523 // zeta^120 * 2^31 = 299353^120 * 2^31 = 16204162 * 2^31
.word 1036987221 // zeta^120 * f(q^(-1) mod 2^32) * 2^31 = 299353^120 * 375649793 * 2^31
.word   59392861 // zeta^ 60 * 2^31 = 299353^ 60 * 2^31 = 5443354 * 2^31
.word  348348067 // zeta^ 60 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 60 * 375649793 * 2^31
.word   57730785 // zeta^636 * 2^31 = 299353^636 * 2^31 = 25085703 * 2^31
.word 3752846111 // zeta^636 * f(q^(-1) mod 2^32) * 2^31 = 299353^636 * 375649793 * 2^31
.text
.align 4
roots_addr: .word roots
.syntax unified
.type ntt_768_u32_33556993_299353_incomplete_good, %function
.global ntt_768_u32_33556993_299353_incomplete_good
ntt_768_u32_33556993_299353_incomplete_good:
// Save GPRs
push {r4-r11,lr}
// Save MVE vector registers
vpush {d8-d15}
// Use r14 as marker for r0 + 1008
add r14, r0, #1008
// Use r12 as marker for r0 + 2016
add r12, r14, #1008
// Use r11 as marker for r0 + 3024
add r11, r12, #1008
.equ modulus, 33556993
movw r10, #:lower16:modulus
movt r10, #:upper16:modulus
ldr r9, roots_addr
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
// input[256]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 4)]
// input[512]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 8)]
vsub.s32 Q2, Q0, Q1
vqrdmulh.s32 Q3, Q2, r8
vadd.s32 Q5, Q0, Q1
// Release input[256] from Q0
vmul.u32 Q4, Q2, r7
// input[0]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 0)]
vqrdmlah.s32 Q3, Q4, r10
vsub.s32 Q4, Q0, Q1
// Release input[512] from Q1
// input[4]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 4)]
vadd.s32 Q6, Q4, Q3
// input[260]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * 8)]
vsub.s32 Q4, Q4, Q3
vstrw.u32 Q6, [r14,#(16)]
vsub.s32 Q4, Q4, Q2
vstrw.u32 Q4, [r12,#(32)]
vadd.s32 Q5, Q5, Q0
// Release input[0] from Q0
vstrw.u32 Q5, [r0,#(0)]
// input[4]: Already loaded as Q1
// input[260]: Already loaded as Q7
vsub.s32 Q0, Q1, Q7
vqrdmulh.s32 Q2, Q0, r8
vadd.s32 Q4, Q1, Q7
// Release input[4] from Q1
vmul.u32 Q3, Q0, r7
// input[516]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 12)]
vqrdmlah.s32 Q2, Q3, r10
vsub.s32 Q3, Q1, Q7
// Release input[260] from Q7
// input[520]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * 16)]
vadd.s32 Q6, Q3, Q2
// input[8]: Load as Q7
vldrw.u32 Q7, [r0, #(4 * 8)]
vsub.s32 Q3, Q3, Q2
vstrw.u32 Q6, [r0,#(16)]
vsub.s32 Q3, Q3, Q0
vstrw.u32 Q3, [r14,#(32)]
vadd.s32 Q4, Q4, Q1
// Release input[516] from Q1
vstrw.u32 Q4, [r12,#(48)]
// input[520]: Already loaded as Q5
// input[8]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[520] from Q5
vmul.u32 Q2, Q0, r7
// input[264]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 12)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[8] from Q7
// input[268]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * 16)]
vadd.s32 Q6, Q2, Q1
// input[524]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * 20)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r12,#(64)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r0,#(32)]
vadd.s32 Q3, Q3, Q4
// Release input[264] from Q4
vstrw.u32 Q3, [r14,#(48)]
// input[268]: Already loaded as Q5
// input[524]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[268] from Q5
vmul.u32 Q2, Q0, r7
// input[12]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 12)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[524] from Q7
// input[16]: Load as Q5
vldrw.u32 Q5, [r0, #(4 * 16)]
vadd.s32 Q6, Q2, Q1
// input[272]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * 20)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r14,#(64)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r12,#(80)]
vadd.s32 Q3, Q3, Q4
// Release input[12] from Q4
vstrw.u32 Q3, [r0,#(48)]
// input[16]: Already loaded as Q5
// input[272]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[16] from Q5
vmul.u32 Q2, Q0, r7
// input[528]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 24)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[272] from Q7
// input[532]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * 28)]
vadd.s32 Q6, Q2, Q1
// input[20]: Load as Q7
vldrw.u32 Q7, [r0, #(4 * 20)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r0,#(64)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r14,#(80)]
vadd.s32 Q3, Q3, Q4
// Release input[528] from Q4
vstrw.u32 Q3, [r12,#(96)]
// input[532]: Already loaded as Q5
// input[20]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[532] from Q5
vmul.u32 Q2, Q0, r7
// input[276]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 24)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[20] from Q7
// input[280]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * 28)]
vadd.s32 Q6, Q2, Q1
// input[536]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * 32)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r12,#(112)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r0,#(80)]
vadd.s32 Q3, Q3, Q4
// Release input[276] from Q4
vstrw.u32 Q3, [r14,#(96)]
// input[280]: Already loaded as Q5
// input[536]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[280] from Q5
vmul.u32 Q2, Q0, r7
// input[24]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 24)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[536] from Q7
// input[28]: Load as Q5
vldrw.u32 Q5, [r0, #(4 * 28)]
vadd.s32 Q6, Q2, Q1
// input[284]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * 32)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r14,#(112)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r12,#(128)]
vadd.s32 Q3, Q3, Q4
// Release input[24] from Q4
vstrw.u32 Q3, [r0,#(96)]
// input[28]: Already loaded as Q5
// input[284]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[28] from Q5
vmul.u32 Q2, Q0, r7
// input[540]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 36)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[284] from Q7
// input[544]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * 40)]
vadd.s32 Q6, Q2, Q1
// input[32]: Load as Q7
vldrw.u32 Q7, [r0, #(4 * 32)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r0,#(112)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r14,#(128)]
vadd.s32 Q3, Q3, Q4
// Release input[540] from Q4
vstrw.u32 Q3, [r12,#(144)]
// input[544]: Already loaded as Q5
// input[32]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[544] from Q5
vmul.u32 Q2, Q0, r7
// input[288]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 36)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[32] from Q7
// input[292]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * 40)]
vadd.s32 Q6, Q2, Q1
// input[548]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * 44)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r12,#(160)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r0,#(128)]
vadd.s32 Q3, Q3, Q4
// Release input[288] from Q4
vstrw.u32 Q3, [r14,#(144)]
// input[292]: Already loaded as Q5
// input[548]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[292] from Q5
vmul.u32 Q2, Q0, r7
// input[36]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 36)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[548] from Q7
// input[40]: Load as Q5
vldrw.u32 Q5, [r0, #(4 * 40)]
vadd.s32 Q6, Q2, Q1
// input[296]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * 44)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r14,#(160)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r12,#(176)]
vadd.s32 Q3, Q3, Q4
// Release input[36] from Q4
vstrw.u32 Q3, [r0,#(144)]
// input[40]: Already loaded as Q5
// input[296]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[40] from Q5
vmul.u32 Q2, Q0, r7
// input[552]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 48)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[296] from Q7
// input[556]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * 52)]
vadd.s32 Q6, Q2, Q1
// input[44]: Load as Q7
vldrw.u32 Q7, [r0, #(4 * 44)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r0,#(160)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r14,#(176)]
vadd.s32 Q3, Q3, Q4
// Release input[552] from Q4
vstrw.u32 Q3, [r12,#(192)]
// input[556]: Already loaded as Q5
// input[44]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[556] from Q5
vmul.u32 Q2, Q0, r7
// input[300]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 48)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[44] from Q7
// input[304]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * 52)]
vadd.s32 Q6, Q2, Q1
// input[560]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * 56)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r12,#(208)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r0,#(176)]
vadd.s32 Q3, Q3, Q4
// Release input[300] from Q4
vstrw.u32 Q3, [r14,#(192)]
// input[304]: Already loaded as Q5
// input[560]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[304] from Q5
vmul.u32 Q2, Q0, r7
// input[48]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 48)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[560] from Q7
// input[52]: Load as Q5
vldrw.u32 Q5, [r0, #(4 * 52)]
vadd.s32 Q6, Q2, Q1
// input[308]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * 56)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r14,#(208)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r12,#(224)]
vadd.s32 Q3, Q3, Q4
// Release input[48] from Q4
vstrw.u32 Q3, [r0,#(192)]
// input[52]: Already loaded as Q5
// input[308]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[52] from Q5
vmul.u32 Q2, Q0, r7
// input[564]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 60)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[308] from Q7
// input[568]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * 64)]
vadd.s32 Q6, Q2, Q1
// input[56]: Load as Q7
vldrw.u32 Q7, [r0, #(4 * 56)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r0,#(208)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r14,#(224)]
vadd.s32 Q3, Q3, Q4
// Release input[564] from Q4
vstrw.u32 Q3, [r12,#(240)]
// input[568]: Already loaded as Q5
// input[56]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[568] from Q5
vmul.u32 Q2, Q0, r7
// input[312]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 60)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[56] from Q7
// input[316]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * 64)]
vadd.s32 Q6, Q2, Q1
// input[572]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * 68)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r12,#(256)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r0,#(224)]
vadd.s32 Q3, Q3, Q4
// Release input[312] from Q4
vstrw.u32 Q3, [r14,#(240)]
// input[316]: Already loaded as Q5
// input[572]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[316] from Q5
vmul.u32 Q2, Q0, r7
// input[60]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 60)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[572] from Q7
// input[64]: Load as Q5
vldrw.u32 Q5, [r0, #(4 * 64)]
vadd.s32 Q6, Q2, Q1
// input[320]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * 68)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r14,#(256)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r12,#(272)]
vadd.s32 Q3, Q3, Q4
// Release input[60] from Q4
vstrw.u32 Q3, [r0,#(240)]
// input[64]: Already loaded as Q5
// input[320]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[64] from Q5
vmul.u32 Q2, Q0, r7
// input[576]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 72)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[320] from Q7
// input[580]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * 76)]
vadd.s32 Q6, Q2, Q1
// input[68]: Load as Q7
vldrw.u32 Q7, [r0, #(4 * 68)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r0,#(256)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r14,#(272)]
vadd.s32 Q3, Q3, Q4
// Release input[576] from Q4
vstrw.u32 Q3, [r12,#(288)]
// input[580]: Already loaded as Q5
// input[68]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[580] from Q5
vmul.u32 Q2, Q0, r7
// input[324]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 72)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[68] from Q7
// input[328]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * 76)]
vadd.s32 Q6, Q2, Q1
// input[584]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * 80)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r12,#(304)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r0,#(272)]
vadd.s32 Q3, Q3, Q4
// Release input[324] from Q4
vstrw.u32 Q3, [r14,#(288)]
// input[328]: Already loaded as Q5
// input[584]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[328] from Q5
vmul.u32 Q2, Q0, r7
// input[72]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 72)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[584] from Q7
// input[76]: Load as Q5
vldrw.u32 Q5, [r0, #(4 * 76)]
vadd.s32 Q6, Q2, Q1
// input[332]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * 80)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r14,#(304)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r12,#(320)]
vadd.s32 Q3, Q3, Q4
// Release input[72] from Q4
vstrw.u32 Q3, [r0,#(288)]
// input[76]: Already loaded as Q5
// input[332]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[76] from Q5
vmul.u32 Q2, Q0, r7
// input[588]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 84)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[332] from Q7
// input[592]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * 88)]
vadd.s32 Q6, Q2, Q1
// input[80]: Load as Q7
vldrw.u32 Q7, [r0, #(4 * 80)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r0,#(304)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r14,#(320)]
vadd.s32 Q3, Q3, Q4
// Release input[588] from Q4
vstrw.u32 Q3, [r12,#(336)]
// input[592]: Already loaded as Q5
// input[80]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[592] from Q5
vmul.u32 Q2, Q0, r7
// input[336]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 84)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[80] from Q7
// input[340]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * 88)]
vadd.s32 Q6, Q2, Q1
// input[596]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * 92)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r12,#(352)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r0,#(320)]
vadd.s32 Q3, Q3, Q4
// Release input[336] from Q4
vstrw.u32 Q3, [r14,#(336)]
// input[340]: Already loaded as Q5
// input[596]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[340] from Q5
vmul.u32 Q2, Q0, r7
// input[84]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 84)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[596] from Q7
// input[88]: Load as Q5
vldrw.u32 Q5, [r0, #(4 * 88)]
vadd.s32 Q6, Q2, Q1
// input[344]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * 92)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r14,#(352)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r12,#(368)]
vadd.s32 Q3, Q3, Q4
// Release input[84] from Q4
vstrw.u32 Q3, [r0,#(336)]
// input[88]: Already loaded as Q5
// input[344]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[88] from Q5
vmul.u32 Q2, Q0, r7
// input[600]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 96)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[344] from Q7
// input[604]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * 100)]
vadd.s32 Q6, Q2, Q1
// input[92]: Load as Q7
vldrw.u32 Q7, [r0, #(4 * 92)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r0,#(352)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r14,#(368)]
vadd.s32 Q3, Q3, Q4
// Release input[600] from Q4
vstrw.u32 Q3, [r12,#(384)]
// input[604]: Already loaded as Q5
// input[92]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[604] from Q5
vmul.u32 Q2, Q0, r7
// input[348]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 96)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[92] from Q7
// input[352]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * 100)]
vadd.s32 Q6, Q2, Q1
// input[608]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * 104)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r12,#(400)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r0,#(368)]
vadd.s32 Q3, Q3, Q4
// Release input[348] from Q4
vstrw.u32 Q3, [r14,#(384)]
// input[352]: Already loaded as Q5
// input[608]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[352] from Q5
vmul.u32 Q2, Q0, r7
// input[96]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 96)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[608] from Q7
// input[100]: Load as Q5
vldrw.u32 Q5, [r0, #(4 * 100)]
vadd.s32 Q6, Q2, Q1
// input[356]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * 104)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r14,#(400)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r12,#(416)]
vadd.s32 Q3, Q3, Q4
// Release input[96] from Q4
vstrw.u32 Q3, [r0,#(384)]
// input[100]: Already loaded as Q5
// input[356]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[100] from Q5
vmul.u32 Q2, Q0, r7
// input[612]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 108)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[356] from Q7
// input[616]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * 112)]
vadd.s32 Q6, Q2, Q1
// input[104]: Load as Q7
vldrw.u32 Q7, [r0, #(4 * 104)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r0,#(400)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r14,#(416)]
vadd.s32 Q3, Q3, Q4
// Release input[612] from Q4
vstrw.u32 Q3, [r12,#(432)]
// input[616]: Already loaded as Q5
// input[104]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[616] from Q5
vmul.u32 Q2, Q0, r7
// input[360]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 108)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[104] from Q7
// input[364]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * 112)]
vadd.s32 Q6, Q2, Q1
// input[620]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * 116)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r12,#(448)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r0,#(416)]
vadd.s32 Q3, Q3, Q4
// Release input[360] from Q4
vstrw.u32 Q3, [r14,#(432)]
// input[364]: Already loaded as Q5
// input[620]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[364] from Q5
vmul.u32 Q2, Q0, r7
// input[108]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 108)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[620] from Q7
// input[112]: Load as Q5
vldrw.u32 Q5, [r0, #(4 * 112)]
vadd.s32 Q6, Q2, Q1
// input[368]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * 116)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r14,#(448)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r12,#(464)]
vadd.s32 Q3, Q3, Q4
// Release input[108] from Q4
vstrw.u32 Q3, [r0,#(432)]
// input[112]: Already loaded as Q5
// input[368]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[112] from Q5
vmul.u32 Q2, Q0, r7
// input[624]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 120)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[368] from Q7
// input[628]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * 124)]
vadd.s32 Q6, Q2, Q1
// input[116]: Load as Q7
vldrw.u32 Q7, [r0, #(4 * 116)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r0,#(448)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r14,#(464)]
vadd.s32 Q3, Q3, Q4
// Release input[624] from Q4
vstrw.u32 Q3, [r12,#(480)]
// input[628]: Already loaded as Q5
// input[116]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[628] from Q5
vmul.u32 Q2, Q0, r7
// input[372]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 120)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[116] from Q7
// input[376]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * 124)]
vadd.s32 Q6, Q2, Q1
// input[632]: Load as Q7
vldrw.u32 Q7, [r11, #(4 * -124)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r12,#(496)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r0,#(464)]
vadd.s32 Q3, Q3, Q4
// Release input[372] from Q4
vstrw.u32 Q3, [r14,#(480)]
// input[376]: Already loaded as Q5
// input[632]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[376] from Q5
vmul.u32 Q2, Q0, r7
// input[120]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 120)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[632] from Q7
// input[124]: Load as Q5
vldrw.u32 Q5, [r0, #(4 * 124)]
vadd.s32 Q6, Q2, Q1
// input[380]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * -124)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r14,#(496)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r11,#(-496)]
vadd.s32 Q3, Q3, Q4
// Release input[120] from Q4
vstrw.u32 Q3, [r0,#(480)]
// input[124]: Already loaded as Q5
// input[380]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[124] from Q5
vmul.u32 Q2, Q0, r7
// input[636]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -120)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[380] from Q7
// input[640]: Load as Q5
vldrw.u32 Q5, [r11, #(4 * -116)]
vadd.s32 Q6, Q2, Q1
// input[128]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * -124)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r0,#(496)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r12,#(-496)]
vadd.s32 Q3, Q3, Q4
// Release input[636] from Q4
vstrw.u32 Q3, [r11,#(-480)]
// input[640]: Already loaded as Q5
// input[128]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[640] from Q5
vmul.u32 Q2, Q0, r7
// input[384]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -120)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[128] from Q7
// input[388]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * -116)]
vadd.s32 Q6, Q2, Q1
// input[644]: Load as Q7
vldrw.u32 Q7, [r11, #(4 * -112)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r11,#(-464)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r14,#(-496)]
vadd.s32 Q3, Q3, Q4
// Release input[384] from Q4
vstrw.u32 Q3, [r12,#(-480)]
// input[388]: Already loaded as Q5
// input[644]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[388] from Q5
vmul.u32 Q2, Q0, r7
// input[132]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -120)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[644] from Q7
// input[136]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * -116)]
vadd.s32 Q6, Q2, Q1
// input[392]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * -112)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r12,#(-464)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r11,#(-448)]
vadd.s32 Q3, Q3, Q4
// Release input[132] from Q4
vstrw.u32 Q3, [r14,#(-480)]
// input[136]: Already loaded as Q5
// input[392]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[136] from Q5
vmul.u32 Q2, Q0, r7
// input[648]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -108)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[392] from Q7
// input[652]: Load as Q5
vldrw.u32 Q5, [r11, #(4 * -104)]
vadd.s32 Q6, Q2, Q1
// input[140]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * -112)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r14,#(-464)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r12,#(-448)]
vadd.s32 Q3, Q3, Q4
// Release input[648] from Q4
vstrw.u32 Q3, [r11,#(-432)]
// input[652]: Already loaded as Q5
// input[140]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[652] from Q5
vmul.u32 Q2, Q0, r7
// input[396]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -108)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[140] from Q7
// input[400]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * -104)]
vadd.s32 Q6, Q2, Q1
// input[656]: Load as Q7
vldrw.u32 Q7, [r11, #(4 * -100)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r11,#(-416)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r14,#(-448)]
vadd.s32 Q3, Q3, Q4
// Release input[396] from Q4
vstrw.u32 Q3, [r12,#(-432)]
// input[400]: Already loaded as Q5
// input[656]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[400] from Q5
vmul.u32 Q2, Q0, r7
// input[144]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -108)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[656] from Q7
// input[148]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * -104)]
vadd.s32 Q6, Q2, Q1
// input[404]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * -100)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r12,#(-416)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r11,#(-400)]
vadd.s32 Q3, Q3, Q4
// Release input[144] from Q4
vstrw.u32 Q3, [r14,#(-432)]
// input[148]: Already loaded as Q5
// input[404]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[148] from Q5
vmul.u32 Q2, Q0, r7
// input[660]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -96)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[404] from Q7
// input[664]: Load as Q5
vldrw.u32 Q5, [r11, #(4 * -92)]
vadd.s32 Q6, Q2, Q1
// input[152]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * -100)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r14,#(-416)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r12,#(-400)]
vadd.s32 Q3, Q3, Q4
// Release input[660] from Q4
vstrw.u32 Q3, [r11,#(-384)]
// input[664]: Already loaded as Q5
// input[152]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[664] from Q5
vmul.u32 Q2, Q0, r7
// input[408]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -96)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[152] from Q7
// input[412]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * -92)]
vadd.s32 Q6, Q2, Q1
// input[668]: Load as Q7
vldrw.u32 Q7, [r11, #(4 * -88)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r11,#(-368)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r14,#(-400)]
vadd.s32 Q3, Q3, Q4
// Release input[408] from Q4
vstrw.u32 Q3, [r12,#(-384)]
// input[412]: Already loaded as Q5
// input[668]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[412] from Q5
vmul.u32 Q2, Q0, r7
// input[156]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -96)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[668] from Q7
// input[160]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * -92)]
vadd.s32 Q6, Q2, Q1
// input[416]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * -88)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r12,#(-368)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r11,#(-352)]
vadd.s32 Q3, Q3, Q4
// Release input[156] from Q4
vstrw.u32 Q3, [r14,#(-384)]
// input[160]: Already loaded as Q5
// input[416]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[160] from Q5
vmul.u32 Q2, Q0, r7
// input[672]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -84)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[416] from Q7
// input[676]: Load as Q5
vldrw.u32 Q5, [r11, #(4 * -80)]
vadd.s32 Q6, Q2, Q1
// input[164]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * -88)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r14,#(-368)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r12,#(-352)]
vadd.s32 Q3, Q3, Q4
// Release input[672] from Q4
vstrw.u32 Q3, [r11,#(-336)]
// input[676]: Already loaded as Q5
// input[164]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[676] from Q5
vmul.u32 Q2, Q0, r7
// input[420]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -84)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[164] from Q7
// input[424]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * -80)]
vadd.s32 Q6, Q2, Q1
// input[680]: Load as Q7
vldrw.u32 Q7, [r11, #(4 * -76)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r11,#(-320)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r14,#(-352)]
vadd.s32 Q3, Q3, Q4
// Release input[420] from Q4
vstrw.u32 Q3, [r12,#(-336)]
// input[424]: Already loaded as Q5
// input[680]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[424] from Q5
vmul.u32 Q2, Q0, r7
// input[168]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -84)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[680] from Q7
// input[172]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * -80)]
vadd.s32 Q6, Q2, Q1
// input[428]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * -76)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r12,#(-320)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r11,#(-304)]
vadd.s32 Q3, Q3, Q4
// Release input[168] from Q4
vstrw.u32 Q3, [r14,#(-336)]
// input[172]: Already loaded as Q5
// input[428]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[172] from Q5
vmul.u32 Q2, Q0, r7
// input[684]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -72)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[428] from Q7
// input[688]: Load as Q5
vldrw.u32 Q5, [r11, #(4 * -68)]
vadd.s32 Q6, Q2, Q1
// input[176]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * -76)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r14,#(-320)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r12,#(-304)]
vadd.s32 Q3, Q3, Q4
// Release input[684] from Q4
vstrw.u32 Q3, [r11,#(-288)]
// input[688]: Already loaded as Q5
// input[176]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[688] from Q5
vmul.u32 Q2, Q0, r7
// input[432]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -72)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[176] from Q7
// input[436]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * -68)]
vadd.s32 Q6, Q2, Q1
// input[692]: Load as Q7
vldrw.u32 Q7, [r11, #(4 * -64)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r11,#(-272)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r14,#(-304)]
vadd.s32 Q3, Q3, Q4
// Release input[432] from Q4
vstrw.u32 Q3, [r12,#(-288)]
// input[436]: Already loaded as Q5
// input[692]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[436] from Q5
vmul.u32 Q2, Q0, r7
// input[180]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -72)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[692] from Q7
// input[184]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * -68)]
vadd.s32 Q6, Q2, Q1
// input[440]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * -64)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r12,#(-272)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r11,#(-256)]
vadd.s32 Q3, Q3, Q4
// Release input[180] from Q4
vstrw.u32 Q3, [r14,#(-288)]
// input[184]: Already loaded as Q5
// input[440]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[184] from Q5
vmul.u32 Q2, Q0, r7
// input[696]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -60)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[440] from Q7
// input[700]: Load as Q5
vldrw.u32 Q5, [r11, #(4 * -56)]
vadd.s32 Q6, Q2, Q1
// input[188]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * -64)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r14,#(-272)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r12,#(-256)]
vadd.s32 Q3, Q3, Q4
// Release input[696] from Q4
vstrw.u32 Q3, [r11,#(-240)]
// input[700]: Already loaded as Q5
// input[188]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[700] from Q5
vmul.u32 Q2, Q0, r7
// input[444]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -60)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[188] from Q7
// input[448]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * -56)]
vadd.s32 Q6, Q2, Q1
// input[704]: Load as Q7
vldrw.u32 Q7, [r11, #(4 * -52)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r11,#(-224)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r14,#(-256)]
vadd.s32 Q3, Q3, Q4
// Release input[444] from Q4
vstrw.u32 Q3, [r12,#(-240)]
// input[448]: Already loaded as Q5
// input[704]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[448] from Q5
vmul.u32 Q2, Q0, r7
// input[192]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -60)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[704] from Q7
// input[196]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * -56)]
vadd.s32 Q6, Q2, Q1
// input[452]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * -52)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r12,#(-224)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r11,#(-208)]
vadd.s32 Q3, Q3, Q4
// Release input[192] from Q4
vstrw.u32 Q3, [r14,#(-240)]
// input[196]: Already loaded as Q5
// input[452]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[196] from Q5
vmul.u32 Q2, Q0, r7
// input[708]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -48)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[452] from Q7
// input[712]: Load as Q5
vldrw.u32 Q5, [r11, #(4 * -44)]
vadd.s32 Q6, Q2, Q1
// input[200]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * -52)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r14,#(-224)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r12,#(-208)]
vadd.s32 Q3, Q3, Q4
// Release input[708] from Q4
vstrw.u32 Q3, [r11,#(-192)]
// input[712]: Already loaded as Q5
// input[200]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[712] from Q5
vmul.u32 Q2, Q0, r7
// input[456]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -48)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[200] from Q7
// input[460]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * -44)]
vadd.s32 Q6, Q2, Q1
// input[716]: Load as Q7
vldrw.u32 Q7, [r11, #(4 * -40)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r11,#(-176)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r14,#(-208)]
vadd.s32 Q3, Q3, Q4
// Release input[456] from Q4
vstrw.u32 Q3, [r12,#(-192)]
// input[460]: Already loaded as Q5
// input[716]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[460] from Q5
vmul.u32 Q2, Q0, r7
// input[204]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -48)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[716] from Q7
// input[208]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * -44)]
vadd.s32 Q6, Q2, Q1
// input[464]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * -40)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r12,#(-176)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r11,#(-160)]
vadd.s32 Q3, Q3, Q4
// Release input[204] from Q4
vstrw.u32 Q3, [r14,#(-192)]
// input[208]: Already loaded as Q5
// input[464]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[208] from Q5
vmul.u32 Q2, Q0, r7
// input[720]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -36)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[464] from Q7
// input[724]: Load as Q5
vldrw.u32 Q5, [r11, #(4 * -32)]
vadd.s32 Q6, Q2, Q1
// input[212]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * -40)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r14,#(-176)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r12,#(-160)]
vadd.s32 Q3, Q3, Q4
// Release input[720] from Q4
vstrw.u32 Q3, [r11,#(-144)]
// input[724]: Already loaded as Q5
// input[212]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[724] from Q5
vmul.u32 Q2, Q0, r7
// input[468]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -36)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[212] from Q7
// input[472]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * -32)]
vadd.s32 Q6, Q2, Q1
// input[728]: Load as Q7
vldrw.u32 Q7, [r11, #(4 * -28)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r11,#(-128)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r14,#(-160)]
vadd.s32 Q3, Q3, Q4
// Release input[468] from Q4
vstrw.u32 Q3, [r12,#(-144)]
// input[472]: Already loaded as Q5
// input[728]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[472] from Q5
vmul.u32 Q2, Q0, r7
// input[216]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -36)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[728] from Q7
// input[220]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * -32)]
vadd.s32 Q6, Q2, Q1
// input[476]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * -28)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r12,#(-128)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r11,#(-112)]
vadd.s32 Q3, Q3, Q4
// Release input[216] from Q4
vstrw.u32 Q3, [r14,#(-144)]
// input[220]: Already loaded as Q5
// input[476]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[220] from Q5
vmul.u32 Q2, Q0, r7
// input[732]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -24)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[476] from Q7
// input[736]: Load as Q5
vldrw.u32 Q5, [r11, #(4 * -20)]
vadd.s32 Q6, Q2, Q1
// input[224]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * -28)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r14,#(-128)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r12,#(-112)]
vadd.s32 Q3, Q3, Q4
// Release input[732] from Q4
vstrw.u32 Q3, [r11,#(-96)]
// input[736]: Already loaded as Q5
// input[224]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[736] from Q5
vmul.u32 Q2, Q0, r7
// input[480]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -24)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[224] from Q7
// input[484]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * -20)]
vadd.s32 Q6, Q2, Q1
// input[740]: Load as Q7
vldrw.u32 Q7, [r11, #(4 * -16)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r11,#(-80)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r14,#(-112)]
vadd.s32 Q3, Q3, Q4
// Release input[480] from Q4
vstrw.u32 Q3, [r12,#(-96)]
// input[484]: Already loaded as Q5
// input[740]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[484] from Q5
vmul.u32 Q2, Q0, r7
// input[228]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -24)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[740] from Q7
// input[232]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * -20)]
vadd.s32 Q6, Q2, Q1
// input[488]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * -16)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r12,#(-80)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r11,#(-64)]
vadd.s32 Q3, Q3, Q4
// Release input[228] from Q4
vstrw.u32 Q3, [r14,#(-96)]
// input[232]: Already loaded as Q5
// input[488]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[232] from Q5
vmul.u32 Q2, Q0, r7
// input[744]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -12)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[488] from Q7
// input[748]: Load as Q5
vldrw.u32 Q5, [r11, #(4 * -8)]
vadd.s32 Q6, Q2, Q1
// input[236]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * -16)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r14,#(-80)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r12,#(-64)]
vadd.s32 Q3, Q3, Q4
// Release input[744] from Q4
vstrw.u32 Q3, [r11,#(-48)]
// input[748]: Already loaded as Q5
// input[236]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[748] from Q5
vmul.u32 Q2, Q0, r7
// input[492]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -12)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[236] from Q7
// input[496]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * -8)]
vadd.s32 Q6, Q2, Q1
// input[752]: Load as Q7
vldrw.u32 Q7, [r11, #(4 * -4)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r11,#(-32)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r14,#(-64)]
vadd.s32 Q3, Q3, Q4
// Release input[492] from Q4
vstrw.u32 Q3, [r12,#(-48)]
// input[496]: Already loaded as Q5
// input[752]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[496] from Q5
vmul.u32 Q2, Q0, r7
// input[240]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -12)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[752] from Q7
// input[244]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * -8)]
vadd.s32 Q6, Q2, Q1
// input[500]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * -4)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r12,#(-32)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r11,#(-16)]
vadd.s32 Q3, Q3, Q4
// Release input[240] from Q4
vstrw.u32 Q3, [r14,#(-48)]
// input[244]: Already loaded as Q5
// input[500]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[244] from Q5
vmul.u32 Q2, Q0, r7
// input[756]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * 0)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[500] from Q7
// input[760]: Load as Q5
vldrw.u32 Q5, [r11, #(4 * 4)]
vadd.s32 Q6, Q2, Q1
// input[248]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * -4)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r14,#(-32)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r12,#(-16)]
vadd.s32 Q3, Q3, Q4
// Release input[756] from Q4
vstrw.u32 Q3, [r11,#(0)]
// input[760]: Already loaded as Q5
// input[248]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[760] from Q5
vmul.u32 Q2, Q0, r7
// input[504]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 0)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[248] from Q7
// input[508]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * 4)]
vadd.s32 Q6, Q2, Q1
// input[764]: Load as Q7
vldrw.u32 Q7, [r11, #(4 * 8)]
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q6, [r11,#(16)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r14,#(-16)]
vadd.s32 Q3, Q3, Q4
// Release input[504] from Q4
vstrw.u32 Q3, [r12,#(0)]
// input[508]: Already loaded as Q5
// input[764]: Already loaded as Q7
vsub.s32 Q0, Q5, Q7
vqrdmulh.s32 Q1, Q0, r8
vadd.s32 Q3, Q5, Q7
// Release input[508] from Q5
vmul.u32 Q2, Q0, r7
// input[252]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 0)]
vqrdmlah.s32 Q1, Q2, r10
vsub.s32 Q2, Q4, Q7
// Release input[764] from Q7
vadd.s32 Q5, Q2, Q1
vsub.s32 Q2, Q2, Q1
vstrw.u32 Q5, [r12,#(16)]
vsub.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r11,#(32)]
vadd.s32 Q3, Q3, Q4
// Release input[252] from Q4
vstrw.u32 Q3, [r14,#(0)]
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[576]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * 72)]
// input[192]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -60)]
vsub.s32 Q2, Q0, Q1
vqrdmulh.s32 Q3, Q2, r4
// input[384]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -120)]
vadd.s32 Q0, Q0, Q1
// Release input[192] from Q1
// input[0]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 0)]
vsub.s32 Q5, Q1, Q4
// input[708]: Load as Q6
vldrw.u32 Q6, [r11, #(4 * -48)]
vadd.s32 Q1, Q1, Q4
// Release input[384] from Q4
vmul.u32 Q2, Q2, r3
vsub.s32 Q4, Q1, Q0
// input[324]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * 72)]
vqrdmlah.s32 Q3, Q2, r10
vstrw.u32 Q4, [r12,#(288)]
vadd.s32 Q1, Q1, Q0
// Release input[576] from Q0
vstrw.u32 Q1, [r0,#(0)]
// Release input[0] from Q1
vsub.s32 Q2, Q5, Q3
vstrw.u32 Q2, [r14,#(-240)]
vadd.s32 Q5, Q5, Q3
vstrw.u32 Q5, [r12,#(-480)]
// input[324]: Already loaded as Q7
// input[708]: Already loaded as Q6
vsub.s32 Q0, Q7, Q6
vqrdmulh.s32 Q1, Q0, r4
// input[132]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -120)]
vadd.s32 Q7, Q7, Q6
// Release input[708] from Q6
// input[516]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 12)]
vsub.s32 Q4, Q3, Q2
// input[456]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * -48)]
vadd.s32 Q3, Q3, Q2
// Release input[132] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q7
// input[72]: Load as Q6
vldrw.u32 Q6, [r0, #(4 * 72)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r14,#(288)]
vadd.s32 Q3, Q3, Q7
// Release input[324] from Q7
vstrw.u32 Q3, [r12,#(48)]
// Release input[516] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r11,#(-192)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r14,#(-480)]
// input[72]: Already loaded as Q6
// input[456]: Already loaded as Q5
vsub.s32 Q0, Q6, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[648]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -108)]
vadd.s32 Q6, Q6, Q5
// Release input[456] from Q5
// input[264]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 12)]
vsub.s32 Q4, Q3, Q2
// input[204]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * -48)]
vadd.s32 Q3, Q3, Q2
// Release input[648] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q6
// input[588]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * 84)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r0,#(288)]
vadd.s32 Q3, Q3, Q6
// Release input[72] from Q6
vstrw.u32 Q3, [r14,#(48)]
// Release input[264] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r12,#(-192)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r11,#(-432)]
// input[588]: Already loaded as Q7
// input[204]: Already loaded as Q5
vsub.s32 Q0, Q7, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[396]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -108)]
vadd.s32 Q7, Q7, Q5
// Release input[204] from Q5
// input[12]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 12)]
vsub.s32 Q4, Q3, Q2
// input[720]: Load as Q5
vldrw.u32 Q5, [r11, #(4 * -36)]
vadd.s32 Q3, Q3, Q2
// Release input[396] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q7
// input[336]: Load as Q6
vldrw.u32 Q6, [r14, #(4 * 84)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(336)]
vadd.s32 Q3, Q3, Q7
// Release input[588] from Q7
vstrw.u32 Q3, [r0,#(48)]
// Release input[12] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r14,#(-192)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r12,#(-432)]
// input[336]: Already loaded as Q6
// input[720]: Already loaded as Q5
vsub.s32 Q0, Q6, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[144]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -108)]
vadd.s32 Q6, Q6, Q5
// Release input[720] from Q5
// input[528]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 24)]
vsub.s32 Q4, Q3, Q2
// input[468]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * -36)]
vadd.s32 Q3, Q3, Q2
// Release input[144] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q6
// input[84]: Load as Q7
vldrw.u32 Q7, [r0, #(4 * 84)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r14,#(336)]
vadd.s32 Q3, Q3, Q6
// Release input[336] from Q6
vstrw.u32 Q3, [r12,#(96)]
// Release input[528] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r11,#(-144)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r14,#(-432)]
// input[84]: Already loaded as Q7
// input[468]: Already loaded as Q5
vsub.s32 Q0, Q7, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[660]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -96)]
vadd.s32 Q7, Q7, Q5
// Release input[468] from Q5
// input[276]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 24)]
vsub.s32 Q4, Q3, Q2
// input[216]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * -36)]
vadd.s32 Q3, Q3, Q2
// Release input[660] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q7
// input[600]: Load as Q6
vldrw.u32 Q6, [r12, #(4 * 96)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r0,#(336)]
vadd.s32 Q3, Q3, Q7
// Release input[84] from Q7
vstrw.u32 Q3, [r14,#(96)]
// Release input[276] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r12,#(-144)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r11,#(-384)]
// input[600]: Already loaded as Q6
// input[216]: Already loaded as Q5
vsub.s32 Q0, Q6, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[408]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -96)]
vadd.s32 Q6, Q6, Q5
// Release input[216] from Q5
// input[24]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 24)]
vsub.s32 Q4, Q3, Q2
// input[732]: Load as Q5
vldrw.u32 Q5, [r11, #(4 * -24)]
vadd.s32 Q3, Q3, Q2
// Release input[408] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q6
// input[348]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * 96)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(384)]
vadd.s32 Q3, Q3, Q6
// Release input[600] from Q6
vstrw.u32 Q3, [r0,#(96)]
// Release input[24] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r14,#(-144)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r12,#(-384)]
// input[348]: Already loaded as Q7
// input[732]: Already loaded as Q5
vsub.s32 Q0, Q7, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[156]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -96)]
vadd.s32 Q7, Q7, Q5
// Release input[732] from Q5
// input[540]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 36)]
vsub.s32 Q4, Q3, Q2
// input[480]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * -24)]
vadd.s32 Q3, Q3, Q2
// Release input[156] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q7
// input[96]: Load as Q6
vldrw.u32 Q6, [r0, #(4 * 96)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r14,#(384)]
vadd.s32 Q3, Q3, Q7
// Release input[348] from Q7
vstrw.u32 Q3, [r12,#(144)]
// Release input[540] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r11,#(-96)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r14,#(-384)]
// input[96]: Already loaded as Q6
// input[480]: Already loaded as Q5
vsub.s32 Q0, Q6, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[672]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -84)]
vadd.s32 Q6, Q6, Q5
// Release input[480] from Q5
// input[288]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 36)]
vsub.s32 Q4, Q3, Q2
// input[228]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * -24)]
vadd.s32 Q3, Q3, Q2
// Release input[672] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q6
// input[612]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * 108)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r0,#(384)]
vadd.s32 Q3, Q3, Q6
// Release input[96] from Q6
vstrw.u32 Q3, [r14,#(144)]
// Release input[288] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r12,#(-96)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r11,#(-336)]
// input[612]: Already loaded as Q7
// input[228]: Already loaded as Q5
vsub.s32 Q0, Q7, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[420]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -84)]
vadd.s32 Q7, Q7, Q5
// Release input[228] from Q5
// input[36]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 36)]
vsub.s32 Q4, Q3, Q2
// input[744]: Load as Q5
vldrw.u32 Q5, [r11, #(4 * -12)]
vadd.s32 Q3, Q3, Q2
// Release input[420] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q7
// input[360]: Load as Q6
vldrw.u32 Q6, [r14, #(4 * 108)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(432)]
vadd.s32 Q3, Q3, Q7
// Release input[612] from Q7
vstrw.u32 Q3, [r0,#(144)]
// Release input[36] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r14,#(-96)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r12,#(-336)]
// input[360]: Already loaded as Q6
// input[744]: Already loaded as Q5
vsub.s32 Q0, Q6, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[168]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -84)]
vadd.s32 Q6, Q6, Q5
// Release input[744] from Q5
// input[552]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 48)]
vsub.s32 Q4, Q3, Q2
// input[492]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * -12)]
vadd.s32 Q3, Q3, Q2
// Release input[168] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q6
// input[108]: Load as Q7
vldrw.u32 Q7, [r0, #(4 * 108)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r14,#(432)]
vadd.s32 Q3, Q3, Q6
// Release input[360] from Q6
vstrw.u32 Q3, [r12,#(192)]
// Release input[552] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r11,#(-48)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r14,#(-336)]
// input[108]: Already loaded as Q7
// input[492]: Already loaded as Q5
vsub.s32 Q0, Q7, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[684]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -72)]
vadd.s32 Q7, Q7, Q5
// Release input[492] from Q5
// input[300]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 48)]
vsub.s32 Q4, Q3, Q2
// input[240]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * -12)]
vadd.s32 Q3, Q3, Q2
// Release input[684] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q7
// input[624]: Load as Q6
vldrw.u32 Q6, [r12, #(4 * 120)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r0,#(432)]
vadd.s32 Q3, Q3, Q7
// Release input[108] from Q7
vstrw.u32 Q3, [r14,#(192)]
// Release input[300] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r12,#(-48)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r11,#(-288)]
// input[624]: Already loaded as Q6
// input[240]: Already loaded as Q5
vsub.s32 Q0, Q6, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[432]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -72)]
vadd.s32 Q6, Q6, Q5
// Release input[240] from Q5
// input[48]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 48)]
vsub.s32 Q4, Q3, Q2
// input[756]: Load as Q5
vldrw.u32 Q5, [r11, #(4 * 0)]
vadd.s32 Q3, Q3, Q2
// Release input[432] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q6
// input[372]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * 120)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(480)]
vadd.s32 Q3, Q3, Q6
// Release input[624] from Q6
vstrw.u32 Q3, [r0,#(192)]
// Release input[48] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r14,#(-48)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r12,#(-288)]
// input[372]: Already loaded as Q7
// input[756]: Already loaded as Q5
vsub.s32 Q0, Q7, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[180]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -72)]
vadd.s32 Q7, Q7, Q5
// Release input[756] from Q5
// input[564]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 60)]
vsub.s32 Q4, Q3, Q2
// input[504]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * 0)]
vadd.s32 Q3, Q3, Q2
// Release input[180] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q7
// input[120]: Load as Q6
vldrw.u32 Q6, [r0, #(4 * 120)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r14,#(480)]
vadd.s32 Q3, Q3, Q7
// Release input[372] from Q7
vstrw.u32 Q3, [r12,#(240)]
// Release input[564] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r11,#(0)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r14,#(-288)]
// input[120]: Already loaded as Q6
// input[504]: Already loaded as Q5
vsub.s32 Q0, Q6, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[696]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -60)]
vadd.s32 Q6, Q6, Q5
// Release input[504] from Q5
// input[312]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 60)]
vsub.s32 Q4, Q3, Q2
// input[252]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * 0)]
vadd.s32 Q3, Q3, Q2
// Release input[696] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q6
// input[636]: Load as Q7
vldrw.u32 Q7, [r11, #(4 * -120)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r0,#(480)]
vadd.s32 Q3, Q3, Q6
// Release input[120] from Q6
vstrw.u32 Q3, [r14,#(240)]
// Release input[312] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r12,#(0)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r11,#(-240)]
// input[636]: Already loaded as Q7
// input[252]: Already loaded as Q5
vsub.s32 Q0, Q7, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[444]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -60)]
vadd.s32 Q7, Q7, Q5
// Release input[252] from Q5
// input[60]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 60)]
vsub.s32 Q4, Q3, Q2
// input[448]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * -56)]
vadd.s32 Q3, Q3, Q2
// Release input[444] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q7
// input[64]: Load as Q6
vldrw.u32 Q6, [r0, #(4 * 64)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r11,#(-480)]
vadd.s32 Q3, Q3, Q7
// Release input[636] from Q7
vstrw.u32 Q3, [r0,#(240)]
// Release input[60] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r14,#(0)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r12,#(-240)]
// input[64]: Already loaded as Q6
// input[448]: Already loaded as Q5
vsub.s32 Q0, Q6, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[640]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -116)]
vadd.s32 Q6, Q6, Q5
// Release input[448] from Q5
// input[256]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 4)]
vsub.s32 Q4, Q3, Q2
// input[196]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * -56)]
vadd.s32 Q3, Q3, Q2
// Release input[640] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q6
// input[580]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * 76)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r0,#(256)]
vadd.s32 Q3, Q3, Q6
// Release input[64] from Q6
vstrw.u32 Q3, [r14,#(16)]
// Release input[256] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r12,#(-224)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r11,#(-464)]
// input[580]: Already loaded as Q7
// input[196]: Already loaded as Q5
vsub.s32 Q0, Q7, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[388]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -116)]
vadd.s32 Q7, Q7, Q5
// Release input[196] from Q5
// input[4]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 4)]
vsub.s32 Q4, Q3, Q2
// input[712]: Load as Q5
vldrw.u32 Q5, [r11, #(4 * -44)]
vadd.s32 Q3, Q3, Q2
// Release input[388] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q7
// input[328]: Load as Q6
vldrw.u32 Q6, [r14, #(4 * 76)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(304)]
vadd.s32 Q3, Q3, Q7
// Release input[580] from Q7
vstrw.u32 Q3, [r0,#(16)]
// Release input[4] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r14,#(-224)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r12,#(-464)]
// input[328]: Already loaded as Q6
// input[712]: Already loaded as Q5
vsub.s32 Q0, Q6, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[136]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -116)]
vadd.s32 Q6, Q6, Q5
// Release input[712] from Q5
// input[520]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 16)]
vsub.s32 Q4, Q3, Q2
// input[460]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * -44)]
vadd.s32 Q3, Q3, Q2
// Release input[136] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q6
// input[76]: Load as Q7
vldrw.u32 Q7, [r0, #(4 * 76)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r14,#(304)]
vadd.s32 Q3, Q3, Q6
// Release input[328] from Q6
vstrw.u32 Q3, [r12,#(64)]
// Release input[520] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r11,#(-176)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r14,#(-464)]
// input[76]: Already loaded as Q7
// input[460]: Already loaded as Q5
vsub.s32 Q0, Q7, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[652]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -104)]
vadd.s32 Q7, Q7, Q5
// Release input[460] from Q5
// input[268]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 16)]
vsub.s32 Q4, Q3, Q2
// input[208]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * -44)]
vadd.s32 Q3, Q3, Q2
// Release input[652] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q7
// input[592]: Load as Q6
vldrw.u32 Q6, [r12, #(4 * 88)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r0,#(304)]
vadd.s32 Q3, Q3, Q7
// Release input[76] from Q7
vstrw.u32 Q3, [r14,#(64)]
// Release input[268] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r12,#(-176)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r11,#(-416)]
// input[592]: Already loaded as Q6
// input[208]: Already loaded as Q5
vsub.s32 Q0, Q6, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[400]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -104)]
vadd.s32 Q6, Q6, Q5
// Release input[208] from Q5
// input[16]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 16)]
vsub.s32 Q4, Q3, Q2
// input[724]: Load as Q5
vldrw.u32 Q5, [r11, #(4 * -32)]
vadd.s32 Q3, Q3, Q2
// Release input[400] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q6
// input[340]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * 88)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(352)]
vadd.s32 Q3, Q3, Q6
// Release input[592] from Q6
vstrw.u32 Q3, [r0,#(64)]
// Release input[16] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r14,#(-176)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r12,#(-416)]
// input[340]: Already loaded as Q7
// input[724]: Already loaded as Q5
vsub.s32 Q0, Q7, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[148]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -104)]
vadd.s32 Q7, Q7, Q5
// Release input[724] from Q5
// input[532]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 28)]
vsub.s32 Q4, Q3, Q2
// input[472]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * -32)]
vadd.s32 Q3, Q3, Q2
// Release input[148] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q7
// input[88]: Load as Q6
vldrw.u32 Q6, [r0, #(4 * 88)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r14,#(352)]
vadd.s32 Q3, Q3, Q7
// Release input[340] from Q7
vstrw.u32 Q3, [r12,#(112)]
// Release input[532] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r11,#(-128)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r14,#(-416)]
// input[88]: Already loaded as Q6
// input[472]: Already loaded as Q5
vsub.s32 Q0, Q6, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[664]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -92)]
vadd.s32 Q6, Q6, Q5
// Release input[472] from Q5
// input[280]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 28)]
vsub.s32 Q4, Q3, Q2
// input[220]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * -32)]
vadd.s32 Q3, Q3, Q2
// Release input[664] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q6
// input[604]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * 100)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r0,#(352)]
vadd.s32 Q3, Q3, Q6
// Release input[88] from Q6
vstrw.u32 Q3, [r14,#(112)]
// Release input[280] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r12,#(-128)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r11,#(-368)]
// input[604]: Already loaded as Q7
// input[220]: Already loaded as Q5
vsub.s32 Q0, Q7, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[412]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -92)]
vadd.s32 Q7, Q7, Q5
// Release input[220] from Q5
// input[28]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 28)]
vsub.s32 Q4, Q3, Q2
// input[736]: Load as Q5
vldrw.u32 Q5, [r11, #(4 * -20)]
vadd.s32 Q3, Q3, Q2
// Release input[412] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q7
// input[352]: Load as Q6
vldrw.u32 Q6, [r14, #(4 * 100)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(400)]
vadd.s32 Q3, Q3, Q7
// Release input[604] from Q7
vstrw.u32 Q3, [r0,#(112)]
// Release input[28] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r14,#(-128)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r12,#(-368)]
// input[352]: Already loaded as Q6
// input[736]: Already loaded as Q5
vsub.s32 Q0, Q6, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[160]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -92)]
vadd.s32 Q6, Q6, Q5
// Release input[736] from Q5
// input[544]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 40)]
vsub.s32 Q4, Q3, Q2
// input[484]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * -20)]
vadd.s32 Q3, Q3, Q2
// Release input[160] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q6
// input[100]: Load as Q7
vldrw.u32 Q7, [r0, #(4 * 100)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r14,#(400)]
vadd.s32 Q3, Q3, Q6
// Release input[352] from Q6
vstrw.u32 Q3, [r12,#(160)]
// Release input[544] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r11,#(-80)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r14,#(-368)]
// input[100]: Already loaded as Q7
// input[484]: Already loaded as Q5
vsub.s32 Q0, Q7, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[676]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -80)]
vadd.s32 Q7, Q7, Q5
// Release input[484] from Q5
// input[292]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 40)]
vsub.s32 Q4, Q3, Q2
// input[232]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * -20)]
vadd.s32 Q3, Q3, Q2
// Release input[676] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q7
// input[616]: Load as Q6
vldrw.u32 Q6, [r12, #(4 * 112)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r0,#(400)]
vadd.s32 Q3, Q3, Q7
// Release input[100] from Q7
vstrw.u32 Q3, [r14,#(160)]
// Release input[292] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r12,#(-80)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r11,#(-320)]
// input[616]: Already loaded as Q6
// input[232]: Already loaded as Q5
vsub.s32 Q0, Q6, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[424]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -80)]
vadd.s32 Q6, Q6, Q5
// Release input[232] from Q5
// input[40]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 40)]
vsub.s32 Q4, Q3, Q2
// input[748]: Load as Q5
vldrw.u32 Q5, [r11, #(4 * -8)]
vadd.s32 Q3, Q3, Q2
// Release input[424] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q6
// input[364]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * 112)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(448)]
vadd.s32 Q3, Q3, Q6
// Release input[616] from Q6
vstrw.u32 Q3, [r0,#(160)]
// Release input[40] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r14,#(-80)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r12,#(-320)]
// input[364]: Already loaded as Q7
// input[748]: Already loaded as Q5
vsub.s32 Q0, Q7, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[172]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -80)]
vadd.s32 Q7, Q7, Q5
// Release input[748] from Q5
// input[556]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 52)]
vsub.s32 Q4, Q3, Q2
// input[496]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * -8)]
vadd.s32 Q3, Q3, Q2
// Release input[172] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q7
// input[112]: Load as Q6
vldrw.u32 Q6, [r0, #(4 * 112)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r14,#(448)]
vadd.s32 Q3, Q3, Q7
// Release input[364] from Q7
vstrw.u32 Q3, [r12,#(208)]
// Release input[556] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r11,#(-32)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r14,#(-320)]
// input[112]: Already loaded as Q6
// input[496]: Already loaded as Q5
vsub.s32 Q0, Q6, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[688]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -68)]
vadd.s32 Q6, Q6, Q5
// Release input[496] from Q5
// input[304]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 52)]
vsub.s32 Q4, Q3, Q2
// input[244]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * -8)]
vadd.s32 Q3, Q3, Q2
// Release input[688] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q6
// input[628]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * 124)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r0,#(448)]
vadd.s32 Q3, Q3, Q6
// Release input[112] from Q6
vstrw.u32 Q3, [r14,#(208)]
// Release input[304] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r12,#(-32)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r11,#(-272)]
// input[628]: Already loaded as Q7
// input[244]: Already loaded as Q5
vsub.s32 Q0, Q7, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[436]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -68)]
vadd.s32 Q7, Q7, Q5
// Release input[244] from Q5
// input[52]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 52)]
vsub.s32 Q4, Q3, Q2
// input[760]: Load as Q5
vldrw.u32 Q5, [r11, #(4 * 4)]
vadd.s32 Q3, Q3, Q2
// Release input[436] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q7
// input[376]: Load as Q6
vldrw.u32 Q6, [r14, #(4 * 124)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(496)]
vadd.s32 Q3, Q3, Q7
// Release input[628] from Q7
vstrw.u32 Q3, [r0,#(208)]
// Release input[52] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r14,#(-32)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r12,#(-272)]
// input[376]: Already loaded as Q6
// input[760]: Already loaded as Q5
vsub.s32 Q0, Q6, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[184]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -68)]
vadd.s32 Q6, Q6, Q5
// Release input[760] from Q5
// input[568]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 64)]
vsub.s32 Q4, Q3, Q2
// input[508]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * 4)]
vadd.s32 Q3, Q3, Q2
// Release input[184] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q6
// input[124]: Load as Q7
vldrw.u32 Q7, [r0, #(4 * 124)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r14,#(496)]
vadd.s32 Q3, Q3, Q6
// Release input[376] from Q6
vstrw.u32 Q3, [r12,#(256)]
// Release input[568] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r11,#(16)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r14,#(-272)]
// input[124]: Already loaded as Q7
// input[508]: Already loaded as Q5
vsub.s32 Q0, Q7, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[700]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -56)]
vadd.s32 Q7, Q7, Q5
// Release input[508] from Q5
// input[316]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 64)]
vsub.s32 Q4, Q3, Q2
// input[704]: Load as Q5
vldrw.u32 Q5, [r11, #(4 * -52)]
vadd.s32 Q3, Q3, Q2
// Release input[700] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q7
// input[320]: Load as Q6
vldrw.u32 Q6, [r14, #(4 * 68)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r0,#(496)]
vadd.s32 Q3, Q3, Q7
// Release input[124] from Q7
vstrw.u32 Q3, [r14,#(256)]
// Release input[316] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r12,#(16)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r11,#(-224)]
// input[320]: Already loaded as Q6
// input[704]: Already loaded as Q5
vsub.s32 Q0, Q6, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[128]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -124)]
vadd.s32 Q6, Q6, Q5
// Release input[704] from Q5
// input[512]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 8)]
vsub.s32 Q4, Q3, Q2
// input[452]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * -52)]
vadd.s32 Q3, Q3, Q2
// Release input[128] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q6
// input[68]: Load as Q7
vldrw.u32 Q7, [r0, #(4 * 68)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r14,#(272)]
vadd.s32 Q3, Q3, Q6
// Release input[320] from Q6
vstrw.u32 Q3, [r12,#(32)]
// Release input[512] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r11,#(-208)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r14,#(-496)]
// input[68]: Already loaded as Q7
// input[452]: Already loaded as Q5
vsub.s32 Q0, Q7, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[644]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -112)]
vadd.s32 Q7, Q7, Q5
// Release input[452] from Q5
// input[260]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 8)]
vsub.s32 Q4, Q3, Q2
// input[200]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * -52)]
vadd.s32 Q3, Q3, Q2
// Release input[644] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q7
// input[584]: Load as Q6
vldrw.u32 Q6, [r12, #(4 * 80)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r0,#(272)]
vadd.s32 Q3, Q3, Q7
// Release input[68] from Q7
vstrw.u32 Q3, [r14,#(32)]
// Release input[260] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r12,#(-208)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r11,#(-448)]
// input[584]: Already loaded as Q6
// input[200]: Already loaded as Q5
vsub.s32 Q0, Q6, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[392]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -112)]
vadd.s32 Q6, Q6, Q5
// Release input[200] from Q5
// input[8]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 8)]
vsub.s32 Q4, Q3, Q2
// input[716]: Load as Q5
vldrw.u32 Q5, [r11, #(4 * -40)]
vadd.s32 Q3, Q3, Q2
// Release input[392] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q6
// input[332]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * 80)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(320)]
vadd.s32 Q3, Q3, Q6
// Release input[584] from Q6
vstrw.u32 Q3, [r0,#(32)]
// Release input[8] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r14,#(-208)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r12,#(-448)]
// input[332]: Already loaded as Q7
// input[716]: Already loaded as Q5
vsub.s32 Q0, Q7, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[140]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -112)]
vadd.s32 Q7, Q7, Q5
// Release input[716] from Q5
// input[524]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 20)]
vsub.s32 Q4, Q3, Q2
// input[464]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * -40)]
vadd.s32 Q3, Q3, Q2
// Release input[140] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q7
// input[80]: Load as Q6
vldrw.u32 Q6, [r0, #(4 * 80)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r14,#(320)]
vadd.s32 Q3, Q3, Q7
// Release input[332] from Q7
vstrw.u32 Q3, [r12,#(80)]
// Release input[524] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r11,#(-160)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r14,#(-448)]
// input[80]: Already loaded as Q6
// input[464]: Already loaded as Q5
vsub.s32 Q0, Q6, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[656]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -100)]
vadd.s32 Q6, Q6, Q5
// Release input[464] from Q5
// input[272]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 20)]
vsub.s32 Q4, Q3, Q2
// input[212]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * -40)]
vadd.s32 Q3, Q3, Q2
// Release input[656] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q6
// input[596]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * 92)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r0,#(320)]
vadd.s32 Q3, Q3, Q6
// Release input[80] from Q6
vstrw.u32 Q3, [r14,#(80)]
// Release input[272] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r12,#(-160)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r11,#(-400)]
// input[596]: Already loaded as Q7
// input[212]: Already loaded as Q5
vsub.s32 Q0, Q7, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[404]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -100)]
vadd.s32 Q7, Q7, Q5
// Release input[212] from Q5
// input[20]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 20)]
vsub.s32 Q4, Q3, Q2
// input[728]: Load as Q5
vldrw.u32 Q5, [r11, #(4 * -28)]
vadd.s32 Q3, Q3, Q2
// Release input[404] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q7
// input[344]: Load as Q6
vldrw.u32 Q6, [r14, #(4 * 92)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(368)]
vadd.s32 Q3, Q3, Q7
// Release input[596] from Q7
vstrw.u32 Q3, [r0,#(80)]
// Release input[20] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r14,#(-160)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r12,#(-400)]
// input[344]: Already loaded as Q6
// input[728]: Already loaded as Q5
vsub.s32 Q0, Q6, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[152]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -100)]
vadd.s32 Q6, Q6, Q5
// Release input[728] from Q5
// input[536]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 32)]
vsub.s32 Q4, Q3, Q2
// input[476]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * -28)]
vadd.s32 Q3, Q3, Q2
// Release input[152] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q6
// input[92]: Load as Q7
vldrw.u32 Q7, [r0, #(4 * 92)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r14,#(368)]
vadd.s32 Q3, Q3, Q6
// Release input[344] from Q6
vstrw.u32 Q3, [r12,#(128)]
// Release input[536] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r11,#(-112)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r14,#(-400)]
// input[92]: Already loaded as Q7
// input[476]: Already loaded as Q5
vsub.s32 Q0, Q7, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[668]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -88)]
vadd.s32 Q7, Q7, Q5
// Release input[476] from Q5
// input[284]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 32)]
vsub.s32 Q4, Q3, Q2
// input[224]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * -28)]
vadd.s32 Q3, Q3, Q2
// Release input[668] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q7
// input[608]: Load as Q6
vldrw.u32 Q6, [r12, #(4 * 104)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r0,#(368)]
vadd.s32 Q3, Q3, Q7
// Release input[92] from Q7
vstrw.u32 Q3, [r14,#(128)]
// Release input[284] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r12,#(-112)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r11,#(-352)]
// input[608]: Already loaded as Q6
// input[224]: Already loaded as Q5
vsub.s32 Q0, Q6, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[416]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -88)]
vadd.s32 Q6, Q6, Q5
// Release input[224] from Q5
// input[32]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 32)]
vsub.s32 Q4, Q3, Q2
// input[740]: Load as Q5
vldrw.u32 Q5, [r11, #(4 * -16)]
vadd.s32 Q3, Q3, Q2
// Release input[416] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q6
// input[356]: Load as Q7
vldrw.u32 Q7, [r14, #(4 * 104)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(416)]
vadd.s32 Q3, Q3, Q6
// Release input[608] from Q6
vstrw.u32 Q3, [r0,#(128)]
// Release input[32] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r14,#(-112)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r12,#(-352)]
// input[356]: Already loaded as Q7
// input[740]: Already loaded as Q5
vsub.s32 Q0, Q7, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[164]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -88)]
vadd.s32 Q7, Q7, Q5
// Release input[740] from Q5
// input[548]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 44)]
vsub.s32 Q4, Q3, Q2
// input[488]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * -16)]
vadd.s32 Q3, Q3, Q2
// Release input[164] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q7
// input[104]: Load as Q6
vldrw.u32 Q6, [r0, #(4 * 104)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r14,#(416)]
vadd.s32 Q3, Q3, Q7
// Release input[356] from Q7
vstrw.u32 Q3, [r12,#(176)]
// Release input[548] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r11,#(-64)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r14,#(-352)]
// input[104]: Already loaded as Q6
// input[488]: Already loaded as Q5
vsub.s32 Q0, Q6, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[680]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -76)]
vadd.s32 Q6, Q6, Q5
// Release input[488] from Q5
// input[296]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 44)]
vsub.s32 Q4, Q3, Q2
// input[236]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * -16)]
vadd.s32 Q3, Q3, Q2
// Release input[680] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q6
// input[620]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * 116)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r0,#(416)]
vadd.s32 Q3, Q3, Q6
// Release input[104] from Q6
vstrw.u32 Q3, [r14,#(176)]
// Release input[296] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r12,#(-64)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r11,#(-304)]
// input[620]: Already loaded as Q7
// input[236]: Already loaded as Q5
vsub.s32 Q0, Q7, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[428]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -76)]
vadd.s32 Q7, Q7, Q5
// Release input[236] from Q5
// input[44]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 44)]
vsub.s32 Q4, Q3, Q2
// input[752]: Load as Q5
vldrw.u32 Q5, [r11, #(4 * -4)]
vadd.s32 Q3, Q3, Q2
// Release input[428] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q7
// input[368]: Load as Q6
vldrw.u32 Q6, [r14, #(4 * 116)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(464)]
vadd.s32 Q3, Q3, Q7
// Release input[620] from Q7
vstrw.u32 Q3, [r0,#(176)]
// Release input[44] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r14,#(-64)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r12,#(-304)]
// input[368]: Already loaded as Q6
// input[752]: Already loaded as Q5
vsub.s32 Q0, Q6, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[176]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -76)]
vadd.s32 Q6, Q6, Q5
// Release input[752] from Q5
// input[560]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 56)]
vsub.s32 Q4, Q3, Q2
// input[500]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * -4)]
vadd.s32 Q3, Q3, Q2
// Release input[176] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q6
// input[116]: Load as Q7
vldrw.u32 Q7, [r0, #(4 * 116)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r14,#(464)]
vadd.s32 Q3, Q3, Q6
// Release input[368] from Q6
vstrw.u32 Q3, [r12,#(224)]
// Release input[560] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r11,#(-16)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r14,#(-304)]
// input[116]: Already loaded as Q7
// input[500]: Already loaded as Q5
vsub.s32 Q0, Q7, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[692]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -64)]
vadd.s32 Q7, Q7, Q5
// Release input[500] from Q5
// input[308]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 56)]
vsub.s32 Q4, Q3, Q2
// input[248]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * -4)]
vadd.s32 Q3, Q3, Q2
// Release input[692] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q7
// input[632]: Load as Q6
vldrw.u32 Q6, [r11, #(4 * -124)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r0,#(464)]
vadd.s32 Q3, Q3, Q7
// Release input[116] from Q7
vstrw.u32 Q3, [r14,#(224)]
// Release input[308] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r12,#(-16)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r11,#(-256)]
// input[632]: Already loaded as Q6
// input[248]: Already loaded as Q5
vsub.s32 Q0, Q6, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[440]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -64)]
vadd.s32 Q6, Q6, Q5
// Release input[248] from Q5
// input[56]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 56)]
vsub.s32 Q4, Q3, Q2
// input[764]: Load as Q5
vldrw.u32 Q5, [r11, #(4 * 8)]
vadd.s32 Q3, Q3, Q2
// Release input[440] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q6
// input[380]: Load as Q7
vldrw.u32 Q7, [r12, #(4 * -124)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r11,#(-496)]
vadd.s32 Q3, Q3, Q6
// Release input[632] from Q6
vstrw.u32 Q3, [r0,#(224)]
// Release input[56] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r14,#(-16)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r12,#(-256)]
// input[380]: Already loaded as Q7
// input[764]: Already loaded as Q5
vsub.s32 Q0, Q7, Q5
vqrdmulh.s32 Q1, Q0, r4
// input[188]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -64)]
vadd.s32 Q7, Q7, Q5
// Release input[764] from Q5
// input[572]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 68)]
vsub.s32 Q4, Q3, Q2
// input[48]: Load as Q5
vldrw.u32 Q5, [r0, #(4 * 48)]
vadd.s32 Q3, Q3, Q2
// Release input[188] from Q2
vmul.u32 Q0, Q0, r3
vsub.s32 Q2, Q3, Q7
// input[528]: Load as Q6
vldrw.u32 Q6, [r12, #(4 * 24)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(-496)]
vadd.s32 Q3, Q3, Q7
// Release input[380] from Q7
vstrw.u32 Q3, [r12,#(272)]
// Release input[572] from Q3
vsub.s32 Q0, Q4, Q1
vstrw.u32 Q0, [r11,#(32)]
vadd.s32 Q4, Q4, Q1
vstrw.u32 Q4, [r14,#(-256)]
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[48]: Already loaded as Q5
vqrdmulh.s32 Q0, Q5, r8
// input[288]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 36)]
vmul.u32 Q5, Q5, r7
// input[528]: Already loaded as Q6
vqrdmlah.s32 Q0, Q5, r10
vqrdmulh.s32 Q2, Q1, r8
vsub.s32 Q5, Q6, Q0
vmul.u32 Q1, Q1, r7
vadd.s32 Q6, Q6, Q0
vqrdmlah.s32 Q2, Q1, r10
// input[0]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 0)]
vqrdmulh.s32 Q3, Q5, r4
vsub.s32 Q1, Q0, Q2
vmul.u32 Q5, Q5, r3
vadd.s32 Q0, Q0, Q2
vqrdmlah.s32 Q3, Q5, r10
// input[564]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 60)]
vqrdmulh.s32 Q4, Q6, r6
vsub.s32 Q5, Q1, Q3
vmul.u32 Q6, Q6, r5
vadd.s32 Q1, Q1, Q3
vstrw.u32 Q5, [r0,#(192)]
// Release input[48] from Q5
vqrdmlah.s32 Q4, Q6, r10
vstrw.u32 Q1, [r14,#(144)]
// Release input[288] from Q1
vsub.s32 Q6, Q0, Q4
vstrw.u32 Q6, [r12,#(96)]
// Release input[528] from Q6
vadd.s32 Q0, Q0, Q4
// input[564]: Already loaded as Q2
vqrdmulh.s32 Q1, Q2, r8
// input[36]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 36)]
vmul.u32 Q2, Q2, r7
// input[276]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 24)]
vqrdmlah.s32 Q1, Q2, r10
vstrw.u32 Q0, [r0,#(0)]
// Release input[0] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q2, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q0, Q3, r10
// input[516]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 12)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q1, Q0
vmul.u32 Q2, Q2, r3
vadd.s32 Q1, Q1, Q0
vqrdmlah.s32 Q5, Q2, r10
// input[312]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 60)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(240)]
// Release input[564] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(144)]
// Release input[36] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(96)]
// Release input[276] from Q4
vadd.s32 Q1, Q1, Q6
// input[312]: Already loaded as Q0
vqrdmulh.s32 Q2, Q0, r8
// input[552]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 48)]
vmul.u32 Q0, Q0, r7
// input[24]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 24)]
vqrdmlah.s32 Q2, Q0, r10
vstrw.u32 Q1, [r12,#(48)]
// Release input[516] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q0, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q1, Q3, r10
// input[264]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 12)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q2, Q1
vmul.u32 Q0, Q0, r3
vadd.s32 Q2, Q2, Q1
vqrdmlah.s32 Q5, Q0, r10
// input[60]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 60)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(240)]
// Release input[312] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(192)]
// Release input[552] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(96)]
// Release input[24] from Q4
vadd.s32 Q2, Q2, Q6
// input[60]: Already loaded as Q1
vqrdmulh.s32 Q0, Q1, r8
// input[300]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 48)]
vmul.u32 Q1, Q1, r7
// input[540]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 36)]
vqrdmlah.s32 Q0, Q1, r10
vstrw.u32 Q2, [r14,#(48)]
// Release input[264] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q1, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q2, Q3, r10
// input[12]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 12)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q0, Q2
vmul.u32 Q1, Q1, r3
vadd.s32 Q0, Q0, Q2
vqrdmlah.s32 Q5, Q1, r10
// input[304]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 52)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r0,#(240)]
// Release input[60] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(192)]
// Release input[300] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(144)]
// Release input[540] from Q4
vadd.s32 Q0, Q0, Q6
// input[304]: Already loaded as Q2
vqrdmulh.s32 Q1, Q2, r8
// input[544]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 40)]
vmul.u32 Q2, Q2, r7
// input[16]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 16)]
vqrdmlah.s32 Q1, Q2, r10
vstrw.u32 Q0, [r0,#(48)]
// Release input[12] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q2, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q0, Q3, r10
// input[256]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 4)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q1, Q0
vmul.u32 Q2, Q2, r3
vadd.s32 Q1, Q1, Q0
vqrdmlah.s32 Q5, Q2, r10
// input[52]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 52)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(208)]
// Release input[304] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(160)]
// Release input[544] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r0,#(64)]
// Release input[16] from Q4
vadd.s32 Q1, Q1, Q6
// input[52]: Already loaded as Q0
vqrdmulh.s32 Q2, Q0, r8
// input[292]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 40)]
vmul.u32 Q0, Q0, r7
// input[532]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 28)]
vqrdmlah.s32 Q2, Q0, r10
vstrw.u32 Q1, [r14,#(16)]
// Release input[256] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q0, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q1, Q3, r10
// input[4]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 4)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q2, Q1
vmul.u32 Q0, Q0, r3
vadd.s32 Q2, Q2, Q1
vqrdmlah.s32 Q5, Q0, r10
// input[568]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 64)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r0,#(208)]
// Release input[52] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(160)]
// Release input[292] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(112)]
// Release input[532] from Q4
vadd.s32 Q2, Q2, Q6
// input[568]: Already loaded as Q1
vqrdmulh.s32 Q0, Q1, r8
// input[40]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 40)]
vmul.u32 Q1, Q1, r7
// input[280]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 28)]
vqrdmlah.s32 Q0, Q1, r10
vstrw.u32 Q2, [r0,#(16)]
// Release input[4] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q1, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q2, Q3, r10
// input[520]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * 16)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q0, Q2
vmul.u32 Q1, Q1, r3
vadd.s32 Q0, Q0, Q2
vqrdmlah.s32 Q5, Q1, r10
// input[316]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 64)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(256)]
// Release input[568] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(160)]
// Release input[40] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(112)]
// Release input[280] from Q4
vadd.s32 Q0, Q0, Q6
// input[316]: Already loaded as Q2
vqrdmulh.s32 Q1, Q2, r8
// input[556]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 52)]
vmul.u32 Q2, Q2, r7
// input[28]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 28)]
vqrdmlah.s32 Q1, Q2, r10
vstrw.u32 Q0, [r12,#(64)]
// Release input[520] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q2, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q0, Q3, r10
// input[268]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 16)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q1, Q0
vmul.u32 Q2, Q2, r3
vadd.s32 Q1, Q1, Q0
vqrdmlah.s32 Q5, Q2, r10
// input[560]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * 56)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(256)]
// Release input[316] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(208)]
// Release input[556] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r0,#(112)]
// Release input[28] from Q4
vadd.s32 Q1, Q1, Q6
// input[560]: Already loaded as Q0
vqrdmulh.s32 Q2, Q0, r8
// input[32]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 32)]
vmul.u32 Q0, Q0, r7
// input[272]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 20)]
vqrdmlah.s32 Q2, Q0, r10
vstrw.u32 Q1, [r14,#(64)]
// Release input[268] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q0, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q1, Q3, r10
// input[512]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 8)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q2, Q1
vmul.u32 Q0, Q0, r3
vadd.s32 Q2, Q2, Q1
vqrdmlah.s32 Q5, Q0, r10
// input[308]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 56)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r12,#(224)]
// Release input[560] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(128)]
// Release input[32] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(80)]
// Release input[272] from Q4
vadd.s32 Q2, Q2, Q6
// input[308]: Already loaded as Q1
vqrdmulh.s32 Q0, Q1, r8
// input[548]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 44)]
vmul.u32 Q1, Q1, r7
// input[20]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 20)]
vqrdmlah.s32 Q0, Q1, r10
vstrw.u32 Q2, [r12,#(32)]
// Release input[512] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q1, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q2, Q3, r10
// input[260]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 8)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q0, Q2
vmul.u32 Q1, Q1, r3
vadd.s32 Q0, Q0, Q2
vqrdmlah.s32 Q5, Q1, r10
// input[56]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 56)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(224)]
// Release input[308] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(176)]
// Release input[548] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r0,#(80)]
// Release input[20] from Q4
vadd.s32 Q0, Q0, Q6
// input[56]: Already loaded as Q2
vqrdmulh.s32 Q1, Q2, r8
// input[296]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 44)]
vmul.u32 Q2, Q2, r7
// input[536]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 32)]
vqrdmlah.s32 Q1, Q2, r10
vstrw.u32 Q0, [r14,#(32)]
// Release input[260] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q2, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q0, Q3, r10
// input[8]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 8)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q1, Q0
vmul.u32 Q2, Q2, r3
vadd.s32 Q1, Q1, Q0
vqrdmlah.s32 Q5, Q2, r10
// input[572]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * 68)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r0,#(224)]
// Release input[56] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(176)]
// Release input[296] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(128)]
// Release input[536] from Q4
vadd.s32 Q1, Q1, Q6
// input[572]: Already loaded as Q0
vqrdmulh.s32 Q2, Q0, r8
// input[44]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 44)]
vmul.u32 Q0, Q0, r7
// input[284]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 32)]
vqrdmlah.s32 Q2, Q0, r10
vstrw.u32 Q1, [r0,#(32)]
// Release input[8] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q0, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q1, Q3, r10
// input[524]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 20)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q2, Q1
vmul.u32 Q0, Q0, r3
vadd.s32 Q2, Q2, Q1
vqrdmlah.s32 Q5, Q0, r10
// input[624]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 120)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r12,#(272)]
// Release input[572] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(176)]
// Release input[44] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(128)]
// Release input[284] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[624]: Already loaded as Q1
vqrdmulh.s32 Q0, Q1, r8
// input[96]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 96)]
vmul.u32 Q1, Q1, r7
// input[336]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 84)]
vqrdmlah.s32 Q0, Q1, r10
vstrw.u32 Q2, [r12,#(80)]
// Release input[524] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q1, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q2, Q3, r10
// input[576]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * 72)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q0, Q2
vmul.u32 Q1, Q1, r3
vadd.s32 Q0, Q0, Q2
vqrdmlah.s32 Q5, Q1, r10
// input[372]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 120)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(480)]
// Release input[624] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(384)]
// Release input[96] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(336)]
// Release input[336] from Q4
vadd.s32 Q0, Q0, Q6
// input[372]: Already loaded as Q2
vqrdmulh.s32 Q1, Q2, r8
// input[612]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 108)]
vmul.u32 Q2, Q2, r7
// input[84]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 84)]
vqrdmlah.s32 Q1, Q2, r10
vstrw.u32 Q0, [r12,#(288)]
// Release input[576] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q2, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q0, Q3, r10
// input[324]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 72)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q1, Q0
vmul.u32 Q2, Q2, r3
vadd.s32 Q1, Q1, Q0
vqrdmlah.s32 Q5, Q2, r10
// input[120]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 120)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(480)]
// Release input[372] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(432)]
// Release input[612] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r0,#(336)]
// Release input[84] from Q4
vadd.s32 Q1, Q1, Q6
// input[120]: Already loaded as Q0
vqrdmulh.s32 Q2, Q0, r8
// input[360]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 108)]
vmul.u32 Q0, Q0, r7
// input[600]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 96)]
vqrdmlah.s32 Q2, Q0, r10
vstrw.u32 Q1, [r14,#(288)]
// Release input[324] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q0, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q1, Q3, r10
// input[72]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 72)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q2, Q1
vmul.u32 Q0, Q0, r3
vadd.s32 Q2, Q2, Q1
vqrdmlah.s32 Q5, Q0, r10
// input[636]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -120)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r0,#(480)]
// Release input[120] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(432)]
// Release input[360] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(384)]
// Release input[600] from Q4
vadd.s32 Q2, Q2, Q6
// input[636]: Already loaded as Q1
vqrdmulh.s32 Q0, Q1, r8
// input[108]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 108)]
vmul.u32 Q1, Q1, r7
// input[348]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 96)]
vqrdmlah.s32 Q0, Q1, r10
vstrw.u32 Q2, [r0,#(288)]
// Release input[72] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q1, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q2, Q3, r10
// input[588]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * 84)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q0, Q2
vmul.u32 Q1, Q1, r3
vadd.s32 Q0, Q0, Q2
vqrdmlah.s32 Q5, Q1, r10
// input[112]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 112)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-480)]
// Release input[636] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(432)]
// Release input[108] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(384)]
// Release input[348] from Q4
vadd.s32 Q0, Q0, Q6
// input[112]: Already loaded as Q2
vqrdmulh.s32 Q1, Q2, r8
// input[352]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 100)]
vmul.u32 Q2, Q2, r7
// input[592]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 88)]
vqrdmlah.s32 Q1, Q2, r10
vstrw.u32 Q0, [r12,#(336)]
// Release input[588] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q2, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q0, Q3, r10
// input[64]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 64)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q1, Q0
vmul.u32 Q2, Q2, r3
vadd.s32 Q1, Q1, Q0
vqrdmlah.s32 Q5, Q2, r10
// input[628]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * 124)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r0,#(448)]
// Release input[112] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(400)]
// Release input[352] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(352)]
// Release input[592] from Q4
vadd.s32 Q1, Q1, Q6
// input[628]: Already loaded as Q0
vqrdmulh.s32 Q2, Q0, r8
// input[100]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 100)]
vmul.u32 Q0, Q0, r7
// input[340]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 88)]
vqrdmlah.s32 Q2, Q0, r10
vstrw.u32 Q1, [r0,#(256)]
// Release input[64] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q0, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q1, Q3, r10
// input[580]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 76)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q2, Q1
vmul.u32 Q0, Q0, r3
vadd.s32 Q2, Q2, Q1
vqrdmlah.s32 Q5, Q0, r10
// input[376]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 124)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r12,#(496)]
// Release input[628] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(400)]
// Release input[100] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(352)]
// Release input[340] from Q4
vadd.s32 Q2, Q2, Q6
// input[376]: Already loaded as Q1
vqrdmulh.s32 Q0, Q1, r8
// input[616]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 112)]
vmul.u32 Q1, Q1, r7
// input[88]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 88)]
vqrdmlah.s32 Q0, Q1, r10
vstrw.u32 Q2, [r12,#(304)]
// Release input[580] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q1, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q2, Q3, r10
// input[328]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 76)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q0, Q2
vmul.u32 Q1, Q1, r3
vadd.s32 Q0, Q0, Q2
vqrdmlah.s32 Q5, Q1, r10
// input[124]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 124)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(496)]
// Release input[376] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(448)]
// Release input[616] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r0,#(352)]
// Release input[88] from Q4
vadd.s32 Q0, Q0, Q6
// input[124]: Already loaded as Q2
vqrdmulh.s32 Q1, Q2, r8
// input[364]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 112)]
vmul.u32 Q2, Q2, r7
// input[604]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 100)]
vqrdmlah.s32 Q1, Q2, r10
vstrw.u32 Q0, [r14,#(304)]
// Release input[328] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q2, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q0, Q3, r10
// input[76]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 76)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q1, Q0
vmul.u32 Q2, Q2, r3
vadd.s32 Q1, Q1, Q0
vqrdmlah.s32 Q5, Q2, r10
// input[368]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 116)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r0,#(496)]
// Release input[124] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(448)]
// Release input[364] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(400)]
// Release input[604] from Q4
vadd.s32 Q1, Q1, Q6
// input[368]: Already loaded as Q0
vqrdmulh.s32 Q2, Q0, r8
// input[608]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 104)]
vmul.u32 Q0, Q0, r7
// input[80]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 80)]
vqrdmlah.s32 Q2, Q0, r10
vstrw.u32 Q1, [r0,#(304)]
// Release input[76] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q0, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q1, Q3, r10
// input[320]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 68)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q2, Q1
vmul.u32 Q0, Q0, r3
vadd.s32 Q2, Q2, Q1
vqrdmlah.s32 Q5, Q0, r10
// input[116]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 116)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(464)]
// Release input[368] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(416)]
// Release input[608] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(320)]
// Release input[80] from Q4
vadd.s32 Q2, Q2, Q6
// input[116]: Already loaded as Q1
vqrdmulh.s32 Q0, Q1, r8
// input[356]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 104)]
vmul.u32 Q1, Q1, r7
// input[596]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 92)]
vqrdmlah.s32 Q0, Q1, r10
vstrw.u32 Q2, [r14,#(272)]
// Release input[320] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q1, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q2, Q3, r10
// input[68]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 68)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q0, Q2
vmul.u32 Q1, Q1, r3
vadd.s32 Q0, Q0, Q2
vqrdmlah.s32 Q5, Q1, r10
// input[632]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -124)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r0,#(464)]
// Release input[116] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(416)]
// Release input[356] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(368)]
// Release input[596] from Q4
vadd.s32 Q0, Q0, Q6
// input[632]: Already loaded as Q2
vqrdmulh.s32 Q1, Q2, r8
// input[104]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 104)]
vmul.u32 Q2, Q2, r7
// input[344]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 92)]
vqrdmlah.s32 Q1, Q2, r10
vstrw.u32 Q0, [r0,#(272)]
// Release input[68] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q2, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q0, Q3, r10
// input[584]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 80)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q1, Q0
vmul.u32 Q2, Q2, r3
vadd.s32 Q1, Q1, Q0
vqrdmlah.s32 Q5, Q2, r10
// input[380]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -124)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r11,#(-496)]
// Release input[632] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(416)]
// Release input[104] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(368)]
// Release input[344] from Q4
vadd.s32 Q1, Q1, Q6
// input[380]: Already loaded as Q0
vqrdmulh.s32 Q2, Q0, r8
// input[620]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 116)]
vmul.u32 Q0, Q0, r7
// input[92]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 92)]
vqrdmlah.s32 Q2, Q0, r10
vstrw.u32 Q1, [r12,#(320)]
// Release input[584] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q0, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q1, Q3, r10
// input[332]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 80)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q2, Q1
vmul.u32 Q0, Q0, r3
vadd.s32 Q2, Q2, Q1
vqrdmlah.s32 Q5, Q0, r10
// input[432]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -72)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r12,#(-496)]
// Release input[380] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(464)]
// Release input[620] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(368)]
// Release input[92] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[432]: Already loaded as Q1
vqrdmulh.s32 Q0, Q1, r8
// input[672]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -84)]
vmul.u32 Q1, Q1, r7
// input[144]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -108)]
vqrdmlah.s32 Q0, Q1, r10
vstrw.u32 Q2, [r14,#(320)]
// Release input[332] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q1, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q2, Q3, r10
// input[384]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -120)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q0, Q2
vmul.u32 Q1, Q1, r3
vadd.s32 Q0, Q0, Q2
vqrdmlah.s32 Q5, Q1, r10
// input[180]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -72)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(-288)]
// Release input[432] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r11,#(-336)]
// Release input[672] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(-432)]
// Release input[144] from Q4
vadd.s32 Q0, Q0, Q6
// input[180]: Already loaded as Q2
vqrdmulh.s32 Q1, Q2, r8
// input[420]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -84)]
vmul.u32 Q2, Q2, r7
// input[660]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -96)]
vqrdmlah.s32 Q1, Q2, r10
vstrw.u32 Q0, [r12,#(-480)]
// Release input[384] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q2, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q0, Q3, r10
// input[132]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -120)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q1, Q0
vmul.u32 Q2, Q2, r3
vadd.s32 Q1, Q1, Q0
vqrdmlah.s32 Q5, Q2, r10
// input[696]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * -60)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(-288)]
// Release input[180] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-336)]
// Release input[420] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r11,#(-384)]
// Release input[660] from Q4
vadd.s32 Q1, Q1, Q6
// input[696]: Already loaded as Q0
vqrdmulh.s32 Q2, Q0, r8
// input[168]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -84)]
vmul.u32 Q0, Q0, r7
// input[408]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -96)]
vqrdmlah.s32 Q2, Q0, r10
vstrw.u32 Q1, [r14,#(-480)]
// Release input[132] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q0, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q1, Q3, r10
// input[648]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -108)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q2, Q1
vmul.u32 Q0, Q0, r3
vadd.s32 Q2, Q2, Q1
vqrdmlah.s32 Q5, Q0, r10
// input[444]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -60)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r11,#(-240)]
// Release input[696] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(-336)]
// Release input[168] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(-384)]
// Release input[408] from Q4
vadd.s32 Q2, Q2, Q6
// input[444]: Already loaded as Q1
vqrdmulh.s32 Q0, Q1, r8
// input[684]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -72)]
vmul.u32 Q1, Q1, r7
// input[156]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -96)]
vqrdmlah.s32 Q0, Q1, r10
vstrw.u32 Q2, [r11,#(-432)]
// Release input[648] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q1, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q2, Q3, r10
// input[396]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -108)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q0, Q2
vmul.u32 Q1, Q1, r3
vadd.s32 Q0, Q0, Q2
vqrdmlah.s32 Q5, Q1, r10
// input[688]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -68)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(-240)]
// Release input[444] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r11,#(-288)]
// Release input[684] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(-384)]
// Release input[156] from Q4
vadd.s32 Q0, Q0, Q6
// input[688]: Already loaded as Q2
vqrdmulh.s32 Q1, Q2, r8
// input[160]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -92)]
vmul.u32 Q2, Q2, r7
// input[400]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -104)]
vqrdmlah.s32 Q1, Q2, r10
vstrw.u32 Q0, [r12,#(-432)]
// Release input[396] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q2, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q0, Q3, r10
// input[640]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -116)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q1, Q0
vmul.u32 Q2, Q2, r3
vadd.s32 Q1, Q1, Q0
vqrdmlah.s32 Q5, Q2, r10
// input[436]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -68)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r11,#(-272)]
// Release input[688] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(-368)]
// Release input[160] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(-416)]
// Release input[400] from Q4
vadd.s32 Q1, Q1, Q6
// input[436]: Already loaded as Q0
vqrdmulh.s32 Q2, Q0, r8
// input[676]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -80)]
vmul.u32 Q0, Q0, r7
// input[148]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -104)]
vqrdmlah.s32 Q2, Q0, r10
vstrw.u32 Q1, [r11,#(-464)]
// Release input[640] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q0, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q1, Q3, r10
// input[388]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -116)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q2, Q1
vmul.u32 Q0, Q0, r3
vadd.s32 Q2, Q2, Q1
vqrdmlah.s32 Q5, Q0, r10
// input[184]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -68)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r12,#(-272)]
// Release input[436] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r11,#(-320)]
// Release input[676] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-416)]
// Release input[148] from Q4
vadd.s32 Q2, Q2, Q6
// input[184]: Already loaded as Q1
vqrdmulh.s32 Q0, Q1, r8
// input[424]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -80)]
vmul.u32 Q1, Q1, r7
// input[664]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -92)]
vqrdmlah.s32 Q0, Q1, r10
vstrw.u32 Q2, [r12,#(-464)]
// Release input[388] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q1, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q2, Q3, r10
// input[136]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -116)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q0, Q2
vmul.u32 Q1, Q1, r3
vadd.s32 Q0, Q0, Q2
vqrdmlah.s32 Q5, Q1, r10
// input[700]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -56)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(-272)]
// Release input[184] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-320)]
// Release input[424] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-368)]
// Release input[664] from Q4
vadd.s32 Q0, Q0, Q6
// input[700]: Already loaded as Q2
vqrdmulh.s32 Q1, Q2, r8
// input[172]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -80)]
vmul.u32 Q2, Q2, r7
// input[412]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -92)]
vqrdmlah.s32 Q1, Q2, r10
vstrw.u32 Q0, [r14,#(-464)]
// Release input[136] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q2, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q0, Q3, r10
// input[652]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -104)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q1, Q0
vmul.u32 Q2, Q2, r3
vadd.s32 Q1, Q1, Q0
vqrdmlah.s32 Q5, Q2, r10
// input[176]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -76)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r11,#(-224)]
// Release input[700] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(-320)]
// Release input[172] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(-368)]
// Release input[412] from Q4
vadd.s32 Q1, Q1, Q6
// input[176]: Already loaded as Q0
vqrdmulh.s32 Q2, Q0, r8
// input[416]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -88)]
vmul.u32 Q0, Q0, r7
// input[656]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -100)]
vqrdmlah.s32 Q2, Q0, r10
vstrw.u32 Q1, [r11,#(-416)]
// Release input[652] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q0, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q1, Q3, r10
// input[128]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -124)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q2, Q1
vmul.u32 Q0, Q0, r3
vadd.s32 Q2, Q2, Q1
vqrdmlah.s32 Q5, Q0, r10
// input[692]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -64)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-304)]
// Release input[176] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-352)]
// Release input[416] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r11,#(-400)]
// Release input[656] from Q4
vadd.s32 Q2, Q2, Q6
// input[692]: Already loaded as Q1
vqrdmulh.s32 Q0, Q1, r8
// input[164]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -88)]
vmul.u32 Q1, Q1, r7
// input[404]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -100)]
vqrdmlah.s32 Q0, Q1, r10
vstrw.u32 Q2, [r14,#(-496)]
// Release input[128] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q1, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q2, Q3, r10
// input[644]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * -112)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q0, Q2
vmul.u32 Q1, Q1, r3
vadd.s32 Q0, Q0, Q2
vqrdmlah.s32 Q5, Q1, r10
// input[440]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -64)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-256)]
// Release input[692] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(-352)]
// Release input[164] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(-400)]
// Release input[404] from Q4
vadd.s32 Q0, Q0, Q6
// input[440]: Already loaded as Q2
vqrdmulh.s32 Q1, Q2, r8
// input[680]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -76)]
vmul.u32 Q2, Q2, r7
// input[152]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -100)]
vqrdmlah.s32 Q1, Q2, r10
vstrw.u32 Q0, [r11,#(-448)]
// Release input[644] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q2, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q0, Q3, r10
// input[392]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -112)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q1, Q0
vmul.u32 Q2, Q2, r3
vadd.s32 Q1, Q1, Q0
vqrdmlah.s32 Q5, Q2, r10
// input[188]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -64)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(-256)]
// Release input[440] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r11,#(-304)]
// Release input[680] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(-400)]
// Release input[152] from Q4
vadd.s32 Q1, Q1, Q6
// input[188]: Already loaded as Q0
vqrdmulh.s32 Q2, Q0, r8
// input[428]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -76)]
vmul.u32 Q0, Q0, r7
// input[668]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -88)]
vqrdmlah.s32 Q2, Q0, r10
vstrw.u32 Q1, [r12,#(-448)]
// Release input[392] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q0, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q1, Q3, r10
// input[140]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -112)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q2, Q1
vmul.u32 Q0, Q0, r3
vadd.s32 Q2, Q2, Q1
vqrdmlah.s32 Q5, Q0, r10
// input[240]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -12)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-256)]
// Release input[188] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-304)]
// Release input[428] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r11,#(-352)]
// Release input[668] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[240]: Already loaded as Q1
vqrdmulh.s32 Q0, Q1, r8
// input[480]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -24)]
vmul.u32 Q1, Q1, r7
// input[720]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -36)]
vqrdmlah.s32 Q0, Q1, r10
vstrw.u32 Q2, [r14,#(-448)]
// Release input[140] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q1, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q2, Q3, r10
// input[192]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -60)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q0, Q2
vmul.u32 Q1, Q1, r3
vadd.s32 Q0, Q0, Q2
vqrdmlah.s32 Q5, Q1, r10
// input[756]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * 0)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(-48)]
// Release input[240] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-96)]
// Release input[480] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-144)]
// Release input[720] from Q4
vadd.s32 Q0, Q0, Q6
// input[756]: Already loaded as Q2
vqrdmulh.s32 Q1, Q2, r8
// input[228]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -24)]
vmul.u32 Q2, Q2, r7
// input[468]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -36)]
vqrdmlah.s32 Q1, Q2, r10
vstrw.u32 Q0, [r14,#(-240)]
// Release input[192] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q2, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q0, Q3, r10
// input[708]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -48)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q1, Q0
vmul.u32 Q2, Q2, r3
vadd.s32 Q1, Q1, Q0
vqrdmlah.s32 Q5, Q2, r10
// input[504]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * 0)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r11,#(0)]
// Release input[756] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(-96)]
// Release input[228] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(-144)]
// Release input[468] from Q4
vadd.s32 Q1, Q1, Q6
// input[504]: Already loaded as Q0
vqrdmulh.s32 Q2, Q0, r8
// input[744]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -12)]
vmul.u32 Q0, Q0, r7
// input[216]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -36)]
vqrdmlah.s32 Q2, Q0, r10
vstrw.u32 Q1, [r11,#(-192)]
// Release input[708] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q0, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q1, Q3, r10
// input[456]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -48)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q2, Q1
vmul.u32 Q0, Q0, r3
vadd.s32 Q2, Q2, Q1
vqrdmlah.s32 Q5, Q0, r10
// input[252]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 0)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r12,#(0)]
// Release input[504] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r11,#(-48)]
// Release input[744] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-144)]
// Release input[216] from Q4
vadd.s32 Q2, Q2, Q6
// input[252]: Already loaded as Q1
vqrdmulh.s32 Q0, Q1, r8
// input[492]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -12)]
vmul.u32 Q1, Q1, r7
// input[732]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -24)]
vqrdmlah.s32 Q0, Q1, r10
vstrw.u32 Q2, [r12,#(-192)]
// Release input[456] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q1, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q2, Q3, r10
// input[204]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -48)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q0, Q2
vmul.u32 Q1, Q1, r3
vadd.s32 Q0, Q0, Q2
vqrdmlah.s32 Q5, Q1, r10
// input[496]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -8)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(0)]
// Release input[252] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-48)]
// Release input[492] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-96)]
// Release input[732] from Q4
vadd.s32 Q0, Q0, Q6
// input[496]: Already loaded as Q2
vqrdmulh.s32 Q1, Q2, r8
// input[736]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -20)]
vmul.u32 Q2, Q2, r7
// input[208]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -44)]
vqrdmlah.s32 Q1, Q2, r10
vstrw.u32 Q0, [r14,#(-192)]
// Release input[204] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q2, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q0, Q3, r10
// input[448]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -56)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q1, Q0
vmul.u32 Q2, Q2, r3
vadd.s32 Q1, Q1, Q0
vqrdmlah.s32 Q5, Q2, r10
// input[244]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -8)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(-32)]
// Release input[496] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r11,#(-80)]
// Release input[736] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(-176)]
// Release input[208] from Q4
vadd.s32 Q1, Q1, Q6
// input[244]: Already loaded as Q0
vqrdmulh.s32 Q2, Q0, r8
// input[484]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -20)]
vmul.u32 Q0, Q0, r7
// input[724]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -32)]
vqrdmlah.s32 Q2, Q0, r10
vstrw.u32 Q1, [r12,#(-224)]
// Release input[448] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q0, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q1, Q3, r10
// input[196]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -56)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q2, Q1
vmul.u32 Q0, Q0, r3
vadd.s32 Q2, Q2, Q1
vqrdmlah.s32 Q5, Q0, r10
// input[760]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * 4)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-32)]
// Release input[244] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-80)]
// Release input[484] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r11,#(-128)]
// Release input[724] from Q4
vadd.s32 Q2, Q2, Q6
// input[760]: Already loaded as Q1
vqrdmulh.s32 Q0, Q1, r8
// input[232]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -20)]
vmul.u32 Q1, Q1, r7
// input[472]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -32)]
vqrdmlah.s32 Q0, Q1, r10
vstrw.u32 Q2, [r14,#(-224)]
// Release input[196] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q1, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q2, Q3, r10
// input[712]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * -44)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q0, Q2
vmul.u32 Q1, Q1, r3
vadd.s32 Q0, Q0, Q2
vqrdmlah.s32 Q5, Q1, r10
// input[508]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 4)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(16)]
// Release input[760] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(-80)]
// Release input[232] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(-128)]
// Release input[472] from Q4
vadd.s32 Q0, Q0, Q6
// input[508]: Already loaded as Q2
vqrdmulh.s32 Q1, Q2, r8
// input[748]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -8)]
vmul.u32 Q2, Q2, r7
// input[220]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -32)]
vqrdmlah.s32 Q1, Q2, r10
vstrw.u32 Q0, [r11,#(-176)]
// Release input[712] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q2, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q0, Q3, r10
// input[460]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -44)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q1, Q0
vmul.u32 Q2, Q2, r3
vadd.s32 Q1, Q1, Q0
vqrdmlah.s32 Q5, Q2, r10
// input[752]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * -4)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(16)]
// Release input[508] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r11,#(-32)]
// Release input[748] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(-128)]
// Release input[220] from Q4
vadd.s32 Q1, Q1, Q6
// input[752]: Already loaded as Q0
vqrdmulh.s32 Q2, Q0, r8
// input[224]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -28)]
vmul.u32 Q0, Q0, r7
// input[464]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -40)]
vqrdmlah.s32 Q2, Q0, r10
vstrw.u32 Q1, [r12,#(-176)]
// Release input[460] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q0, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q1, Q3, r10
// input[704]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -52)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q2, Q1
vmul.u32 Q0, Q0, r3
vadd.s32 Q2, Q2, Q1
vqrdmlah.s32 Q5, Q0, r10
// input[500]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -4)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r11,#(-16)]
// Release input[752] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(-112)]
// Release input[224] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(-160)]
// Release input[464] from Q4
vadd.s32 Q2, Q2, Q6
// input[500]: Already loaded as Q1
vqrdmulh.s32 Q0, Q1, r8
// input[740]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -16)]
vmul.u32 Q1, Q1, r7
// input[212]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -40)]
vqrdmlah.s32 Q0, Q1, r10
vstrw.u32 Q2, [r11,#(-208)]
// Release input[704] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q1, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q2, Q3, r10
// input[452]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -52)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q0, Q2
vmul.u32 Q1, Q1, r3
vadd.s32 Q0, Q0, Q2
vqrdmlah.s32 Q5, Q1, r10
// input[248]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -4)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(-16)]
// Release input[500] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r11,#(-64)]
// Release input[740] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(-160)]
// Release input[212] from Q4
vadd.s32 Q0, Q0, Q6
// input[248]: Already loaded as Q2
vqrdmulh.s32 Q1, Q2, r8
// input[488]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -16)]
vmul.u32 Q2, Q2, r7
// input[728]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -28)]
vqrdmlah.s32 Q1, Q2, r10
vstrw.u32 Q0, [r12,#(-208)]
// Release input[452] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q2, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q0, Q3, r10
// input[200]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -52)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q1, Q0
vmul.u32 Q2, Q2, r3
vadd.s32 Q1, Q1, Q0
vqrdmlah.s32 Q5, Q2, r10
// input[764]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * 8)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(-16)]
// Release input[248] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-64)]
// Release input[488] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r11,#(-112)]
// Release input[728] from Q4
vadd.s32 Q1, Q1, Q6
// input[764]: Already loaded as Q0
vqrdmulh.s32 Q2, Q0, r8
// input[236]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -16)]
vmul.u32 Q0, Q0, r7
// input[476]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -28)]
vqrdmlah.s32 Q2, Q0, r10
vstrw.u32 Q1, [r14,#(-208)]
// Release input[200] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q0, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q1, Q3, r10
// input[716]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -40)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q2, Q1
vmul.u32 Q0, Q0, r3
vadd.s32 Q2, Q2, Q1
vqrdmlah.s32 Q5, Q0, r10
// input[12]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 12)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r11,#(32)]
// Release input[764] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(-64)]
// Release input[236] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(-112)]
// Release input[476] from Q4
vadd.s32 Q2, Q2, Q6
vstrw.u32 Q2, [r11,#(-160)]
// Release input[716] from Q2
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[12]: Already loaded as Q1
vqrdmulh.s32 Q0, Q1, r8
// input[264]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 12)]
vmul.u32 Q1, Q1, r7
// input[516]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 12)]
vqrdmlah.s32 Q0, Q1, r10
vqrdmulh.s32 Q4, Q2, r8
vsub.s32 Q1, Q3, Q0
vmul.u32 Q2, Q2, r7
vadd.s32 Q3, Q3, Q0
vqrdmlah.s32 Q4, Q2, r10
// input[0]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 0)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q2, Q0, Q4
vmul.u32 Q1, Q1, r3
vadd.s32 Q0, Q0, Q4
vqrdmlah.s32 Q5, Q1, r10
// input[268]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 16)]
vqrdmulh.s32 Q6, Q3, r6
vsub.s32 Q1, Q2, Q5
vmul.u32 Q3, Q3, r5
vadd.s32 Q2, Q2, Q5
vstrw.u32 Q1, [r0,#(48)]
// Release input[12] from Q1
vqrdmlah.s32 Q6, Q3, r10
vstrw.u32 Q2, [r14,#(48)]
// Release input[264] from Q2
vsub.s32 Q3, Q0, Q6
vstrw.u32 Q3, [r12,#(48)]
// Release input[516] from Q3
vadd.s32 Q0, Q0, Q6
// input[268]: Already loaded as Q4
vqrdmulh.s32 Q1, Q4, r8
// input[520]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 16)]
vmul.u32 Q4, Q4, r7
// input[4]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 4)]
vqrdmlah.s32 Q1, Q4, r10
vstrw.u32 Q0, [r0,#(0)]
// Release input[0] from Q0
vqrdmulh.s32 Q0, Q2, r8
vsub.s32 Q4, Q3, Q1
vmul.u32 Q2, Q2, r7
vadd.s32 Q3, Q3, Q1
vqrdmlah.s32 Q0, Q2, r10
// input[256]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 4)]
vqrdmulh.s32 Q5, Q4, r4
vsub.s32 Q2, Q1, Q0
vmul.u32 Q4, Q4, r3
vadd.s32 Q1, Q1, Q0
vqrdmlah.s32 Q5, Q4, r10
// input[524]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * 20)]
vqrdmulh.s32 Q6, Q3, r6
vsub.s32 Q4, Q2, Q5
vmul.u32 Q3, Q3, r5
vadd.s32 Q2, Q2, Q5
vstrw.u32 Q4, [r14,#(64)]
// Release input[268] from Q4
vqrdmlah.s32 Q6, Q3, r10
vstrw.u32 Q2, [r12,#(64)]
// Release input[520] from Q2
vsub.s32 Q3, Q1, Q6
vstrw.u32 Q3, [r0,#(16)]
// Release input[4] from Q3
vadd.s32 Q1, Q1, Q6
// input[524]: Already loaded as Q0
vqrdmulh.s32 Q2, Q0, r8
// input[8]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 8)]
vmul.u32 Q0, Q0, r7
// input[260]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 8)]
vqrdmlah.s32 Q2, Q0, r10
vstrw.u32 Q1, [r14,#(16)]
// Release input[256] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q0, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q1, Q3, r10
// input[512]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 8)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q2, Q1
vmul.u32 Q0, Q0, r3
vadd.s32 Q2, Q2, Q1
vqrdmlah.s32 Q5, Q0, r10
// input[540]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 36)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r12,#(80)]
// Release input[524] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(32)]
// Release input[8] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(32)]
// Release input[260] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[540]: Already loaded as Q1
vqrdmulh.s32 Q0, Q1, r8
// input[24]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 24)]
vmul.u32 Q1, Q1, r7
// input[276]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 24)]
vqrdmlah.s32 Q0, Q1, r10
vstrw.u32 Q2, [r12,#(32)]
// Release input[512] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q1, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q2, Q3, r10
// input[528]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * 24)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q0, Q2
vmul.u32 Q1, Q1, r3
vadd.s32 Q0, Q0, Q2
vqrdmlah.s32 Q5, Q1, r10
// input[28]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 28)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(144)]
// Release input[540] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(96)]
// Release input[24] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(96)]
// Release input[276] from Q4
vadd.s32 Q0, Q0, Q6
// input[28]: Already loaded as Q2
vqrdmulh.s32 Q1, Q2, r8
// input[280]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 28)]
vmul.u32 Q2, Q2, r7
// input[532]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 28)]
vqrdmlah.s32 Q1, Q2, r10
vstrw.u32 Q0, [r12,#(96)]
// Release input[528] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q2, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q0, Q3, r10
// input[16]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 16)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q1, Q0
vmul.u32 Q2, Q2, r3
vadd.s32 Q1, Q1, Q0
vqrdmlah.s32 Q5, Q2, r10
// input[284]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 32)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r0,#(112)]
// Release input[28] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(112)]
// Release input[280] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(112)]
// Release input[532] from Q4
vadd.s32 Q1, Q1, Q6
// input[284]: Already loaded as Q0
vqrdmulh.s32 Q2, Q0, r8
// input[536]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 32)]
vmul.u32 Q0, Q0, r7
// input[20]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 20)]
vqrdmlah.s32 Q2, Q0, r10
vstrw.u32 Q1, [r0,#(64)]
// Release input[16] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q0, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q1, Q3, r10
// input[272]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 20)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q2, Q1
vmul.u32 Q0, Q0, r3
vadd.s32 Q2, Q2, Q1
vqrdmlah.s32 Q5, Q0, r10
// input[300]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 48)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(128)]
// Release input[284] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(128)]
// Release input[536] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(80)]
// Release input[20] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[300]: Already loaded as Q1
vqrdmulh.s32 Q0, Q1, r8
// input[552]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 48)]
vmul.u32 Q1, Q1, r7
// input[36]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 36)]
vqrdmlah.s32 Q0, Q1, r10
vstrw.u32 Q2, [r14,#(80)]
// Release input[272] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q1, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q2, Q3, r10
// input[288]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 36)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q0, Q2
vmul.u32 Q1, Q1, r3
vadd.s32 Q0, Q0, Q2
vqrdmlah.s32 Q5, Q1, r10
// input[556]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 52)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(192)]
// Release input[300] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(192)]
// Release input[552] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r0,#(144)]
// Release input[36] from Q4
vadd.s32 Q0, Q0, Q6
// input[556]: Already loaded as Q2
vqrdmulh.s32 Q1, Q2, r8
// input[40]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 40)]
vmul.u32 Q2, Q2, r7
// input[292]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 40)]
vqrdmlah.s32 Q1, Q2, r10
vstrw.u32 Q0, [r14,#(144)]
// Release input[288] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q2, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q0, Q3, r10
// input[544]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 40)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q1, Q0
vmul.u32 Q2, Q2, r3
vadd.s32 Q1, Q1, Q0
vqrdmlah.s32 Q5, Q2, r10
// input[44]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 44)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(208)]
// Release input[556] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(160)]
// Release input[40] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(160)]
// Release input[292] from Q4
vadd.s32 Q1, Q1, Q6
// input[44]: Already loaded as Q0
vqrdmulh.s32 Q2, Q0, r8
// input[296]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 44)]
vmul.u32 Q0, Q0, r7
// input[548]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 44)]
vqrdmlah.s32 Q2, Q0, r10
vstrw.u32 Q1, [r12,#(160)]
// Release input[544] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q0, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q1, Q3, r10
// input[32]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 32)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q2, Q1
vmul.u32 Q0, Q0, r3
vadd.s32 Q2, Q2, Q1
vqrdmlah.s32 Q5, Q0, r10
// input[60]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 60)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r0,#(176)]
// Release input[44] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(176)]
// Release input[296] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(176)]
// Release input[548] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[60]: Already loaded as Q1
vqrdmulh.s32 Q0, Q1, r8
// input[312]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 60)]
vmul.u32 Q1, Q1, r7
// input[564]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 60)]
vqrdmlah.s32 Q0, Q1, r10
vstrw.u32 Q2, [r0,#(128)]
// Release input[32] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q1, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q2, Q3, r10
// input[48]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 48)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q0, Q2
vmul.u32 Q1, Q1, r3
vadd.s32 Q0, Q0, Q2
vqrdmlah.s32 Q5, Q1, r10
// input[316]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 64)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r0,#(240)]
// Release input[60] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(240)]
// Release input[312] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(240)]
// Release input[564] from Q4
vadd.s32 Q0, Q0, Q6
// input[316]: Already loaded as Q2
vqrdmulh.s32 Q1, Q2, r8
// input[568]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 64)]
vmul.u32 Q2, Q2, r7
// input[52]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 52)]
vqrdmlah.s32 Q1, Q2, r10
vstrw.u32 Q0, [r0,#(192)]
// Release input[48] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q2, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q0, Q3, r10
// input[304]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 52)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q1, Q0
vmul.u32 Q2, Q2, r3
vadd.s32 Q1, Q1, Q0
vqrdmlah.s32 Q5, Q2, r10
// input[572]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * 68)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(256)]
// Release input[316] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(256)]
// Release input[568] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r0,#(208)]
// Release input[52] from Q4
vadd.s32 Q1, Q1, Q6
// input[572]: Already loaded as Q0
vqrdmulh.s32 Q2, Q0, r8
// input[56]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 56)]
vmul.u32 Q0, Q0, r7
// input[308]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 56)]
vqrdmlah.s32 Q2, Q0, r10
vstrw.u32 Q1, [r14,#(208)]
// Release input[304] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q0, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q1, Q3, r10
// input[560]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 56)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q2, Q1
vmul.u32 Q0, Q0, r3
vadd.s32 Q2, Q2, Q1
vqrdmlah.s32 Q5, Q0, r10
// input[588]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 84)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r12,#(272)]
// Release input[572] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(224)]
// Release input[56] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(224)]
// Release input[308] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[588]: Already loaded as Q1
vqrdmulh.s32 Q0, Q1, r8
// input[72]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 72)]
vmul.u32 Q1, Q1, r7
// input[324]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 72)]
vqrdmlah.s32 Q0, Q1, r10
vstrw.u32 Q2, [r12,#(224)]
// Release input[560] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q1, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q2, Q3, r10
// input[576]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * 72)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q0, Q2
vmul.u32 Q1, Q1, r3
vadd.s32 Q0, Q0, Q2
vqrdmlah.s32 Q5, Q1, r10
// input[76]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 76)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(336)]
// Release input[588] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(288)]
// Release input[72] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(288)]
// Release input[324] from Q4
vadd.s32 Q0, Q0, Q6
// input[76]: Already loaded as Q2
vqrdmulh.s32 Q1, Q2, r8
// input[328]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 76)]
vmul.u32 Q2, Q2, r7
// input[580]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 76)]
vqrdmlah.s32 Q1, Q2, r10
vstrw.u32 Q0, [r12,#(288)]
// Release input[576] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q2, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q0, Q3, r10
// input[64]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 64)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q1, Q0
vmul.u32 Q2, Q2, r3
vadd.s32 Q1, Q1, Q0
vqrdmlah.s32 Q5, Q2, r10
// input[332]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 80)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r0,#(304)]
// Release input[76] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(304)]
// Release input[328] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(304)]
// Release input[580] from Q4
vadd.s32 Q1, Q1, Q6
// input[332]: Already loaded as Q0
vqrdmulh.s32 Q2, Q0, r8
// input[584]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 80)]
vmul.u32 Q0, Q0, r7
// input[68]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 68)]
vqrdmlah.s32 Q2, Q0, r10
vstrw.u32 Q1, [r0,#(256)]
// Release input[64] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q0, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q1, Q3, r10
// input[320]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 68)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q2, Q1
vmul.u32 Q0, Q0, r3
vadd.s32 Q2, Q2, Q1
vqrdmlah.s32 Q5, Q0, r10
// input[348]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 96)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(320)]
// Release input[332] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(320)]
// Release input[584] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(272)]
// Release input[68] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[348]: Already loaded as Q1
vqrdmulh.s32 Q0, Q1, r8
// input[600]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 96)]
vmul.u32 Q1, Q1, r7
// input[84]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 84)]
vqrdmlah.s32 Q0, Q1, r10
vstrw.u32 Q2, [r14,#(272)]
// Release input[320] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q1, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q2, Q3, r10
// input[336]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 84)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q0, Q2
vmul.u32 Q1, Q1, r3
vadd.s32 Q0, Q0, Q2
vqrdmlah.s32 Q5, Q1, r10
// input[604]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 100)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(384)]
// Release input[348] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(384)]
// Release input[600] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r0,#(336)]
// Release input[84] from Q4
vadd.s32 Q0, Q0, Q6
// input[604]: Already loaded as Q2
vqrdmulh.s32 Q1, Q2, r8
// input[88]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 88)]
vmul.u32 Q2, Q2, r7
// input[340]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 88)]
vqrdmlah.s32 Q1, Q2, r10
vstrw.u32 Q0, [r14,#(336)]
// Release input[336] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q2, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q0, Q3, r10
// input[592]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 88)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q1, Q0
vmul.u32 Q2, Q2, r3
vadd.s32 Q1, Q1, Q0
vqrdmlah.s32 Q5, Q2, r10
// input[92]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 92)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(400)]
// Release input[604] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(352)]
// Release input[88] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(352)]
// Release input[340] from Q4
vadd.s32 Q1, Q1, Q6
// input[92]: Already loaded as Q0
vqrdmulh.s32 Q2, Q0, r8
// input[344]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 92)]
vmul.u32 Q0, Q0, r7
// input[596]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 92)]
vqrdmlah.s32 Q2, Q0, r10
vstrw.u32 Q1, [r12,#(352)]
// Release input[592] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q0, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q1, Q3, r10
// input[80]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 80)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q2, Q1
vmul.u32 Q0, Q0, r3
vadd.s32 Q2, Q2, Q1
vqrdmlah.s32 Q5, Q0, r10
// input[108]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 108)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r0,#(368)]
// Release input[92] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(368)]
// Release input[344] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(368)]
// Release input[596] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[108]: Already loaded as Q1
vqrdmulh.s32 Q0, Q1, r8
// input[360]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 108)]
vmul.u32 Q1, Q1, r7
// input[612]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 108)]
vqrdmlah.s32 Q0, Q1, r10
vstrw.u32 Q2, [r0,#(320)]
// Release input[80] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q1, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q2, Q3, r10
// input[96]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 96)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q0, Q2
vmul.u32 Q1, Q1, r3
vadd.s32 Q0, Q0, Q2
vqrdmlah.s32 Q5, Q1, r10
// input[364]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 112)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r0,#(432)]
// Release input[108] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(432)]
// Release input[360] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(432)]
// Release input[612] from Q4
vadd.s32 Q0, Q0, Q6
// input[364]: Already loaded as Q2
vqrdmulh.s32 Q1, Q2, r8
// input[616]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 112)]
vmul.u32 Q2, Q2, r7
// input[100]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 100)]
vqrdmlah.s32 Q1, Q2, r10
vstrw.u32 Q0, [r0,#(384)]
// Release input[96] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q2, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q0, Q3, r10
// input[352]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 100)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q1, Q0
vmul.u32 Q2, Q2, r3
vadd.s32 Q1, Q1, Q0
vqrdmlah.s32 Q5, Q2, r10
// input[620]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * 116)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(448)]
// Release input[364] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(448)]
// Release input[616] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r0,#(400)]
// Release input[100] from Q4
vadd.s32 Q1, Q1, Q6
// input[620]: Already loaded as Q0
vqrdmulh.s32 Q2, Q0, r8
// input[104]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 104)]
vmul.u32 Q0, Q0, r7
// input[356]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 104)]
vqrdmlah.s32 Q2, Q0, r10
vstrw.u32 Q1, [r14,#(400)]
// Release input[352] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q0, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q1, Q3, r10
// input[608]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 104)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q2, Q1
vmul.u32 Q0, Q0, r3
vadd.s32 Q2, Q2, Q1
vqrdmlah.s32 Q5, Q0, r10
// input[636]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -120)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r12,#(464)]
// Release input[620] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(416)]
// Release input[104] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(416)]
// Release input[356] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[636]: Already loaded as Q1
vqrdmulh.s32 Q0, Q1, r8
// input[120]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 120)]
vmul.u32 Q1, Q1, r7
// input[372]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 120)]
vqrdmlah.s32 Q0, Q1, r10
vstrw.u32 Q2, [r12,#(416)]
// Release input[608] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q1, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q2, Q3, r10
// input[624]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * 120)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q0, Q2
vmul.u32 Q1, Q1, r3
vadd.s32 Q0, Q0, Q2
vqrdmlah.s32 Q5, Q1, r10
// input[124]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 124)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-480)]
// Release input[636] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(480)]
// Release input[120] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(480)]
// Release input[372] from Q4
vadd.s32 Q0, Q0, Q6
// input[124]: Already loaded as Q2
vqrdmulh.s32 Q1, Q2, r8
// input[376]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 124)]
vmul.u32 Q2, Q2, r7
// input[628]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 124)]
vqrdmlah.s32 Q1, Q2, r10
vstrw.u32 Q0, [r12,#(480)]
// Release input[624] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q2, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q0, Q3, r10
// input[112]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 112)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q1, Q0
vmul.u32 Q2, Q2, r3
vadd.s32 Q1, Q1, Q0
vqrdmlah.s32 Q5, Q2, r10
// input[380]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -124)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r0,#(496)]
// Release input[124] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(496)]
// Release input[376] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(496)]
// Release input[628] from Q4
vadd.s32 Q1, Q1, Q6
// input[380]: Already loaded as Q0
vqrdmulh.s32 Q2, Q0, r8
// input[632]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -124)]
vmul.u32 Q0, Q0, r7
// input[116]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 116)]
vqrdmlah.s32 Q2, Q0, r10
vstrw.u32 Q1, [r0,#(448)]
// Release input[112] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q0, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q1, Q3, r10
// input[368]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 116)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q2, Q1
vmul.u32 Q0, Q0, r3
vadd.s32 Q2, Q2, Q1
vqrdmlah.s32 Q5, Q0, r10
// input[396]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -108)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r12,#(-496)]
// Release input[380] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r11,#(-496)]
// Release input[632] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(464)]
// Release input[116] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[396]: Already loaded as Q1
vqrdmulh.s32 Q0, Q1, r8
// input[648]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -108)]
vmul.u32 Q1, Q1, r7
// input[132]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -120)]
vqrdmlah.s32 Q0, Q1, r10
vstrw.u32 Q2, [r14,#(464)]
// Release input[368] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q1, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q2, Q3, r10
// input[384]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -120)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q0, Q2
vmul.u32 Q1, Q1, r3
vadd.s32 Q0, Q0, Q2
vqrdmlah.s32 Q5, Q1, r10
// input[652]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -104)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(-432)]
// Release input[396] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r11,#(-432)]
// Release input[648] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(-480)]
// Release input[132] from Q4
vadd.s32 Q0, Q0, Q6
// input[652]: Already loaded as Q2
vqrdmulh.s32 Q1, Q2, r8
// input[136]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -116)]
vmul.u32 Q2, Q2, r7
// input[388]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -116)]
vqrdmlah.s32 Q1, Q2, r10
vstrw.u32 Q0, [r12,#(-480)]
// Release input[384] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q2, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q0, Q3, r10
// input[640]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -116)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q1, Q0
vmul.u32 Q2, Q2, r3
vadd.s32 Q1, Q1, Q0
vqrdmlah.s32 Q5, Q2, r10
// input[140]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -112)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r11,#(-416)]
// Release input[652] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(-464)]
// Release input[136] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(-464)]
// Release input[388] from Q4
vadd.s32 Q1, Q1, Q6
// input[140]: Already loaded as Q0
vqrdmulh.s32 Q2, Q0, r8
// input[392]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -112)]
vmul.u32 Q0, Q0, r7
// input[644]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -112)]
vqrdmlah.s32 Q2, Q0, r10
vstrw.u32 Q1, [r11,#(-464)]
// Release input[640] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q0, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q1, Q3, r10
// input[128]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -124)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q2, Q1
vmul.u32 Q0, Q0, r3
vadd.s32 Q2, Q2, Q1
vqrdmlah.s32 Q5, Q0, r10
// input[156]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -96)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-448)]
// Release input[140] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-448)]
// Release input[392] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r11,#(-448)]
// Release input[644] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[156]: Already loaded as Q1
vqrdmulh.s32 Q0, Q1, r8
// input[408]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -96)]
vmul.u32 Q1, Q1, r7
// input[660]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -96)]
vqrdmlah.s32 Q0, Q1, r10
vstrw.u32 Q2, [r14,#(-496)]
// Release input[128] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q1, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q2, Q3, r10
// input[144]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -108)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q0, Q2
vmul.u32 Q1, Q1, r3
vadd.s32 Q0, Q0, Q2
vqrdmlah.s32 Q5, Q1, r10
// input[412]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -92)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(-384)]
// Release input[156] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-384)]
// Release input[408] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-384)]
// Release input[660] from Q4
vadd.s32 Q0, Q0, Q6
// input[412]: Already loaded as Q2
vqrdmulh.s32 Q1, Q2, r8
// input[664]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -92)]
vmul.u32 Q2, Q2, r7
// input[148]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -104)]
vqrdmlah.s32 Q1, Q2, r10
vstrw.u32 Q0, [r14,#(-432)]
// Release input[144] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q2, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q0, Q3, r10
// input[400]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -104)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q1, Q0
vmul.u32 Q2, Q2, r3
vadd.s32 Q1, Q1, Q0
vqrdmlah.s32 Q5, Q2, r10
// input[668]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * -88)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(-368)]
// Release input[412] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r11,#(-368)]
// Release input[664] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(-416)]
// Release input[148] from Q4
vadd.s32 Q1, Q1, Q6
// input[668]: Already loaded as Q0
vqrdmulh.s32 Q2, Q0, r8
// input[152]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -100)]
vmul.u32 Q0, Q0, r7
// input[404]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -100)]
vqrdmlah.s32 Q2, Q0, r10
vstrw.u32 Q1, [r12,#(-416)]
// Release input[400] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q0, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q1, Q3, r10
// input[656]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -100)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q2, Q1
vmul.u32 Q0, Q0, r3
vadd.s32 Q2, Q2, Q1
vqrdmlah.s32 Q5, Q0, r10
// input[684]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -72)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r11,#(-352)]
// Release input[668] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(-400)]
// Release input[152] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(-400)]
// Release input[404] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[684]: Already loaded as Q1
vqrdmulh.s32 Q0, Q1, r8
// input[168]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -84)]
vmul.u32 Q1, Q1, r7
// input[420]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -84)]
vqrdmlah.s32 Q0, Q1, r10
vstrw.u32 Q2, [r11,#(-400)]
// Release input[656] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q1, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q2, Q3, r10
// input[672]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * -84)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q0, Q2
vmul.u32 Q1, Q1, r3
vadd.s32 Q0, Q0, Q2
vqrdmlah.s32 Q5, Q1, r10
// input[172]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -80)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-288)]
// Release input[684] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(-336)]
// Release input[168] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(-336)]
// Release input[420] from Q4
vadd.s32 Q0, Q0, Q6
// input[172]: Already loaded as Q2
vqrdmulh.s32 Q1, Q2, r8
// input[424]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -80)]
vmul.u32 Q2, Q2, r7
// input[676]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -80)]
vqrdmlah.s32 Q1, Q2, r10
vstrw.u32 Q0, [r11,#(-336)]
// Release input[672] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q2, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q0, Q3, r10
// input[160]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -92)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q1, Q0
vmul.u32 Q2, Q2, r3
vadd.s32 Q1, Q1, Q0
vqrdmlah.s32 Q5, Q2, r10
// input[428]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -76)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(-320)]
// Release input[172] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-320)]
// Release input[424] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r11,#(-320)]
// Release input[676] from Q4
vadd.s32 Q1, Q1, Q6
// input[428]: Already loaded as Q0
vqrdmulh.s32 Q2, Q0, r8
// input[680]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -76)]
vmul.u32 Q0, Q0, r7
// input[164]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -88)]
vqrdmlah.s32 Q2, Q0, r10
vstrw.u32 Q1, [r14,#(-368)]
// Release input[160] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q0, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q1, Q3, r10
// input[416]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -88)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q2, Q1
vmul.u32 Q0, Q0, r3
vadd.s32 Q2, Q2, Q1
vqrdmlah.s32 Q5, Q0, r10
// input[444]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -60)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r12,#(-304)]
// Release input[428] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r11,#(-304)]
// Release input[680] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-352)]
// Release input[164] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[444]: Already loaded as Q1
vqrdmulh.s32 Q0, Q1, r8
// input[696]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -60)]
vmul.u32 Q1, Q1, r7
// input[180]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -72)]
vqrdmlah.s32 Q0, Q1, r10
vstrw.u32 Q2, [r12,#(-352)]
// Release input[416] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q1, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q2, Q3, r10
// input[432]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -72)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q0, Q2
vmul.u32 Q1, Q1, r3
vadd.s32 Q0, Q0, Q2
vqrdmlah.s32 Q5, Q1, r10
// input[700]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -56)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(-240)]
// Release input[444] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r11,#(-240)]
// Release input[696] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(-288)]
// Release input[180] from Q4
vadd.s32 Q0, Q0, Q6
// input[700]: Already loaded as Q2
vqrdmulh.s32 Q1, Q2, r8
// input[184]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -68)]
vmul.u32 Q2, Q2, r7
// input[436]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -68)]
vqrdmlah.s32 Q1, Q2, r10
vstrw.u32 Q0, [r12,#(-288)]
// Release input[432] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q2, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q0, Q3, r10
// input[688]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -68)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q1, Q0
vmul.u32 Q2, Q2, r3
vadd.s32 Q1, Q1, Q0
vqrdmlah.s32 Q5, Q2, r10
// input[188]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -64)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r11,#(-224)]
// Release input[700] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(-272)]
// Release input[184] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(-272)]
// Release input[436] from Q4
vadd.s32 Q1, Q1, Q6
// input[188]: Already loaded as Q0
vqrdmulh.s32 Q2, Q0, r8
// input[440]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -64)]
vmul.u32 Q0, Q0, r7
// input[692]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -64)]
vqrdmlah.s32 Q2, Q0, r10
vstrw.u32 Q1, [r11,#(-272)]
// Release input[688] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q0, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q1, Q3, r10
// input[176]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -76)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q2, Q1
vmul.u32 Q0, Q0, r3
vadd.s32 Q2, Q2, Q1
vqrdmlah.s32 Q5, Q0, r10
// input[204]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -48)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-256)]
// Release input[188] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-256)]
// Release input[440] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r11,#(-256)]
// Release input[692] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[204]: Already loaded as Q1
vqrdmulh.s32 Q0, Q1, r8
// input[456]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -48)]
vmul.u32 Q1, Q1, r7
// input[708]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -48)]
vqrdmlah.s32 Q0, Q1, r10
vstrw.u32 Q2, [r14,#(-304)]
// Release input[176] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q1, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q2, Q3, r10
// input[192]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -60)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q0, Q2
vmul.u32 Q1, Q1, r3
vadd.s32 Q0, Q0, Q2
vqrdmlah.s32 Q5, Q1, r10
// input[460]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -44)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(-192)]
// Release input[204] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-192)]
// Release input[456] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-192)]
// Release input[708] from Q4
vadd.s32 Q0, Q0, Q6
// input[460]: Already loaded as Q2
vqrdmulh.s32 Q1, Q2, r8
// input[712]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -44)]
vmul.u32 Q2, Q2, r7
// input[196]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -56)]
vqrdmlah.s32 Q1, Q2, r10
vstrw.u32 Q0, [r14,#(-240)]
// Release input[192] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q2, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q0, Q3, r10
// input[448]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -56)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q1, Q0
vmul.u32 Q2, Q2, r3
vadd.s32 Q1, Q1, Q0
vqrdmlah.s32 Q5, Q2, r10
// input[716]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * -40)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(-176)]
// Release input[460] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r11,#(-176)]
// Release input[712] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(-224)]
// Release input[196] from Q4
vadd.s32 Q1, Q1, Q6
// input[716]: Already loaded as Q0
vqrdmulh.s32 Q2, Q0, r8
// input[200]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -52)]
vmul.u32 Q0, Q0, r7
// input[452]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -52)]
vqrdmlah.s32 Q2, Q0, r10
vstrw.u32 Q1, [r12,#(-224)]
// Release input[448] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q0, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q1, Q3, r10
// input[704]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -52)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q2, Q1
vmul.u32 Q0, Q0, r3
vadd.s32 Q2, Q2, Q1
vqrdmlah.s32 Q5, Q0, r10
// input[732]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -24)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r11,#(-160)]
// Release input[716] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(-208)]
// Release input[200] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(-208)]
// Release input[452] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[732]: Already loaded as Q1
vqrdmulh.s32 Q0, Q1, r8
// input[216]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -36)]
vmul.u32 Q1, Q1, r7
// input[468]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -36)]
vqrdmlah.s32 Q0, Q1, r10
vstrw.u32 Q2, [r11,#(-208)]
// Release input[704] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q1, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q2, Q3, r10
// input[720]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * -36)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q0, Q2
vmul.u32 Q1, Q1, r3
vadd.s32 Q0, Q0, Q2
vqrdmlah.s32 Q5, Q1, r10
// input[220]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -32)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-96)]
// Release input[732] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(-144)]
// Release input[216] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(-144)]
// Release input[468] from Q4
vadd.s32 Q0, Q0, Q6
// input[220]: Already loaded as Q2
vqrdmulh.s32 Q1, Q2, r8
// input[472]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -32)]
vmul.u32 Q2, Q2, r7
// input[724]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -32)]
vqrdmlah.s32 Q1, Q2, r10
vstrw.u32 Q0, [r11,#(-144)]
// Release input[720] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q2, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q0, Q3, r10
// input[208]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -44)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q1, Q0
vmul.u32 Q2, Q2, r3
vadd.s32 Q1, Q1, Q0
vqrdmlah.s32 Q5, Q2, r10
// input[476]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -28)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(-128)]
// Release input[220] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-128)]
// Release input[472] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r11,#(-128)]
// Release input[724] from Q4
vadd.s32 Q1, Q1, Q6
// input[476]: Already loaded as Q0
vqrdmulh.s32 Q2, Q0, r8
// input[728]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -28)]
vmul.u32 Q0, Q0, r7
// input[212]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -40)]
vqrdmlah.s32 Q2, Q0, r10
vstrw.u32 Q1, [r14,#(-176)]
// Release input[208] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q0, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q1, Q3, r10
// input[464]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -40)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q2, Q1
vmul.u32 Q0, Q0, r3
vadd.s32 Q2, Q2, Q1
vqrdmlah.s32 Q5, Q0, r10
// input[492]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -12)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r12,#(-112)]
// Release input[476] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r11,#(-112)]
// Release input[728] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-160)]
// Release input[212] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[492]: Already loaded as Q1
vqrdmulh.s32 Q0, Q1, r8
// input[744]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -12)]
vmul.u32 Q1, Q1, r7
// input[228]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -24)]
vqrdmlah.s32 Q0, Q1, r10
vstrw.u32 Q2, [r12,#(-160)]
// Release input[464] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q1, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q2, Q3, r10
// input[480]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -24)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q0, Q2
vmul.u32 Q1, Q1, r3
vadd.s32 Q0, Q0, Q2
vqrdmlah.s32 Q5, Q1, r10
// input[748]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -8)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(-48)]
// Release input[492] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r11,#(-48)]
// Release input[744] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(-96)]
// Release input[228] from Q4
vadd.s32 Q0, Q0, Q6
// input[748]: Already loaded as Q2
vqrdmulh.s32 Q1, Q2, r8
// input[232]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -20)]
vmul.u32 Q2, Q2, r7
// input[484]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -20)]
vqrdmlah.s32 Q1, Q2, r10
vstrw.u32 Q0, [r12,#(-96)]
// Release input[480] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q2, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q0, Q3, r10
// input[736]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -20)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q1, Q0
vmul.u32 Q2, Q2, r3
vadd.s32 Q1, Q1, Q0
vqrdmlah.s32 Q5, Q2, r10
// input[236]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -16)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r11,#(-32)]
// Release input[748] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(-80)]
// Release input[232] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(-80)]
// Release input[484] from Q4
vadd.s32 Q1, Q1, Q6
// input[236]: Already loaded as Q0
vqrdmulh.s32 Q2, Q0, r8
// input[488]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -16)]
vmul.u32 Q0, Q0, r7
// input[740]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -16)]
vqrdmlah.s32 Q2, Q0, r10
vstrw.u32 Q1, [r11,#(-80)]
// Release input[736] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q0, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q1, Q3, r10
// input[224]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -28)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q2, Q1
vmul.u32 Q0, Q0, r3
vadd.s32 Q2, Q2, Q1
vqrdmlah.s32 Q5, Q0, r10
// input[252]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 0)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-64)]
// Release input[236] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-64)]
// Release input[488] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r11,#(-64)]
// Release input[740] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[252]: Already loaded as Q1
vqrdmulh.s32 Q0, Q1, r8
// input[504]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 0)]
vmul.u32 Q1, Q1, r7
// input[756]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * 0)]
vqrdmlah.s32 Q0, Q1, r10
vstrw.u32 Q2, [r14,#(-112)]
// Release input[224] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q1, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q2, Q3, r10
// input[240]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -12)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q0, Q2
vmul.u32 Q1, Q1, r3
vadd.s32 Q0, Q0, Q2
vqrdmlah.s32 Q5, Q1, r10
// input[508]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 4)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(0)]
// Release input[252] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(0)]
// Release input[504] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(0)]
// Release input[756] from Q4
vadd.s32 Q0, Q0, Q6
// input[508]: Already loaded as Q2
vqrdmulh.s32 Q1, Q2, r8
// input[760]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * 4)]
vmul.u32 Q2, Q2, r7
// input[244]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -8)]
vqrdmlah.s32 Q1, Q2, r10
vstrw.u32 Q0, [r14,#(-48)]
// Release input[240] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q2, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q0, Q3, r10
// input[496]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -8)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q1, Q0
vmul.u32 Q2, Q2, r3
vadd.s32 Q1, Q1, Q0
vqrdmlah.s32 Q5, Q2, r10
// input[764]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * 8)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(16)]
// Release input[508] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r11,#(16)]
// Release input[760] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(-32)]
// Release input[244] from Q4
vadd.s32 Q1, Q1, Q6
// input[764]: Already loaded as Q0
vqrdmulh.s32 Q2, Q0, r8
// input[248]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -4)]
vmul.u32 Q0, Q0, r7
// input[500]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -4)]
vqrdmlah.s32 Q2, Q0, r10
vstrw.u32 Q1, [r12,#(-32)]
// Release input[496] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q0, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q1, Q3, r10
// input[752]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -4)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q2, Q1
vmul.u32 Q0, Q0, r3
vadd.s32 Q2, Q2, Q1
vqrdmlah.s32 Q5, Q0, r10
vqrdmulh.s32 Q1, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r11,#(32)]
// Release input[764] from Q0
vqrdmlah.s32 Q1, Q4, r10
vstrw.u32 Q3, [r14,#(-16)]
// Release input[248] from Q3
vsub.s32 Q4, Q2, Q1
vstrw.u32 Q4, [r12,#(-16)]
// Release input[500] from Q4
vadd.s32 Q2, Q2, Q1
vstrw.u32 Q2, [r11,#(-16)]
// Release input[752] from Q2
.equ modulus_inv, 3919317503
movw r8, #:lower16:modulus_inv
movt r8, #:upper16:modulus_inv
// Restore MVE vector registers
vpop {d8-d15}
// Restore GPRs
pop {r4-r11,lr}
bx lr

// Line count:        7097
// Instruction count: 5236