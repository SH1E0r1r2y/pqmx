
///
/// Copyright (c) 2021 Arm Limited
/// SPDX-License-Identifier: MIT
///
/// Permission is hereby granted, free of charge, to any person obtaining a copy
/// of this software and associated documentation files (the "Software"), to deal
/// in the Software without restriction, including without limitation the rights
/// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
/// copies of the Software, and to permit persons to whom the Software is
/// furnished to do so, subject to the following conditions:
///
/// The above copyright notice and this permission notice shall be included in all
/// copies or substantial portions of the Software.
///
/// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
/// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
/// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
/// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
/// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
/// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
/// SOFTWARE.
///



///
/// This assembly code has been auto-generated.
/// Don't modify it directly.
///

.data
roots:
.word     893127 /// zeta^256 * 2^31 = 299353^256 * 2^31 = 8518431 * 2^31
.word 2692621625 /// zeta^256 * f(q^(-1) mod 2^32) * 2^31 = 299353^256 * 375649793 * 2^31
.word   66384763 /// zeta^512 * 2^31 = 299353^512 * 2^31 = 25038561 * 2^31
.word 3749829253 /// zeta^512 * f(q^(-1) mod 2^32) * 2^31 = 299353^512 * 375649793 * 2^31
.word   33393089 // zeta^  0 * 2^31 = 299353^  0 * 2^31 = 1 * 2^31
.word 2147483711 // zeta^  0 * f(q^(-1) mod 2^32) * 2^31 = 299353^  0 * 375649793 * 2^31
.word   33393089 // zeta^  0 * 2^31 = 299353^  0 * 2^31 = 1 * 2^31
.word 2147483711 // zeta^  0 * f(q^(-1) mod 2^32) * 2^31 = 299353^  0 * 375649793 * 2^31
.word   38018305 // zeta^192 * 2^31 = 299353^192 * 2^31 = 15854702 * 2^31
.word 1014623487 // zeta^192 * f(q^(-1) mod 2^32) * 2^31 = 299353^192 * 375649793 * 2^31
.word     729223 // zeta^128 * 2^31 = 299353^128 * 2^31 = 8518432 * 2^31
.word  545138041 // zeta^128 * f(q^(-1) mod 2^32) * 2^31 = 299353^128 * 375649793 * 2^31
.word   16802007 // zeta^ 64 * 2^31 = 299353^ 64 * 2^31 = 13841461 * 2^31
.word 3033269545 // zeta^ 64 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 64 * 375649793 * 2^31
.word     893127 // zeta^256 * 2^31 = 299353^256 * 2^31 = 8518431 * 2^31
.word 2692621625 // zeta^256 * f(q^(-1) mod 2^32) * 2^31 = 299353^256 * 375649793 * 2^31
.word     893127 // zeta^256 * 2^31 = 299353^256 * 2^31 = 8518431 * 2^31
.word 2692621625 // zeta^256 * f(q^(-1) mod 2^32) * 2^31 = 299353^256 * 375649793 * 2^31
.word     729223 // zeta^128 * 2^31 = 299353^128 * 2^31 = 8518432 * 2^31
.word  545138041 // zeta^128 * f(q^(-1) mod 2^32) * 2^31 = 299353^128 * 375649793 * 2^31
.word   54773291 // zeta^320 * 2^31 = 299353^320 * 2^31 = 2013241 * 2^31
.word 2276321237 // zeta^320 * f(q^(-1) mod 2^32) * 2^31 = 299353^320 * 375649793 * 2^31
.word   33393089 // zeta^  0 * 2^31 = 299353^  0 * 2^31 = 1 * 2^31
.word 2147483711 // zeta^  0 * f(q^(-1) mod 2^32) * 2^31 = 299353^  0 * 375649793 * 2^31
.word   33393089 // zeta^  0 * 2^31 = 299353^  0 * 2^31 = 1 * 2^31
.word 2147483711 // zeta^  0 * f(q^(-1) mod 2^32) * 2^31 = 299353^  0 * 375649793 * 2^31
.word   38018305 // zeta^192 * 2^31 = 299353^192 * 2^31 = 15854702 * 2^31
.word 1014623487 // zeta^192 * f(q^(-1) mod 2^32) * 2^31 = 299353^192 * 375649793 * 2^31
.word   38018305 // zeta^192 * 2^31 = 299353^192 * 2^31 = 15854702 * 2^31
.word 1014623487 // zeta^192 * f(q^(-1) mod 2^32) * 2^31 = 299353^192 * 375649793 * 2^31
.word   43317805 // zeta^ 96 * 2^31 = 299353^ 96 * 2^31 = 14579576 * 2^31
.word  933021651 // zeta^ 96 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 96 * 375649793 * 2^31
.word   14476917 // zeta^288 * 2^31 = 299353^288 * 2^31 = 3260327 * 2^31
.word 2356128651 // zeta^288 * f(q^(-1) mod 2^32) * 2^31 = 299353^288 * 375649793 * 2^31
.word   43317805 // zeta^ 96 * 2^31 = 299353^ 96 * 2^31 = 14579576 * 2^31
.word  933021651 // zeta^ 96 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 96 * 375649793 * 2^31
.word   64683161 // zeta^ 48 * 2^31 = 299353^ 48 * 2^31 = 14745691 * 2^31
.word 3091135847 // zeta^ 48 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 48 * 375649793 * 2^31
.word   32686385 // zeta^240 * 2^31 = 299353^240 * 2^31 = 20044445 * 2^31
.word 3430230223 // zeta^240 * f(q^(-1) mod 2^32) * 2^31 = 299353^240 * 375649793 * 2^31
.word   14476917 // zeta^288 * 2^31 = 299353^288 * 2^31 = 3260327 * 2^31
.word 2356128651 // zeta^288 * f(q^(-1) mod 2^32) * 2^31 = 299353^288 * 375649793 * 2^31
.word   48515911 // zeta^144 * 2^31 = 299353^144 * 2^31 = 26823146 * 2^31
.word 1716550329 // zeta^144 * f(q^(-1) mod 2^32) * 2^31 = 299353^144 * 375649793 * 2^31
.word    4885007 // zeta^336 * 2^31 = 299353^336 * 2^31 = 12909577 * 2^31
.word 2973633521 // zeta^336 * f(q^(-1) mod 2^32) * 2^31 = 299353^336 * 375649793 * 2^31
.word    7518129 // zeta^ 32 * 2^31 = 299353^ 32 * 2^31 = 940305 * 2^31
.word 2207658575 // zeta^ 32 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 32 * 375649793 * 2^31
.word   29170123 // zeta^ 16 * 2^31 = 299353^ 16 * 2^31 = 24111745 * 2^31
.word 3690517557 // zeta^ 16 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 16 * 375649793 * 2^31
.word   22561577 // zeta^208 * 2^31 = 299353^208 * 2^31 = 12390669 * 2^31
.word 2940425943 // zeta^208 * f(q^(-1) mod 2^32) * 2^31 = 299353^208 * 375649793 * 2^31
.word     728237 // zeta^224 * 2^31 = 299353^224 * 2^31 = 24511972 * 2^31
.word 1568646483 // zeta^224 * f(q^(-1) mod 2^32) * 2^31 = 299353^224 * 375649793 * 2^31
.word   18052069 // zeta^112 * 2^31 = 299353^112 * 2^31 = 20448273 * 2^31
.word 3456073243 // zeta^112 * f(q^(-1) mod 2^32) * 2^31 = 299353^112 * 375649793 * 2^31
.word   64406963 // zeta^304 * 2^31 = 299353^304 * 2^31 = 17817137 * 2^31
.word 3287693389 // zeta^304 * f(q^(-1) mod 2^32) * 2^31 = 299353^304 * 375649793 * 2^31
.word     729223 // zeta^128 * 2^31 = 299353^128 * 2^31 = 8518432 * 2^31
.word  545138041 // zeta^128 * f(q^(-1) mod 2^32) * 2^31 = 299353^128 * 375649793 * 2^31
.word   16802007 // zeta^ 64 * 2^31 = 299353^ 64 * 2^31 = 13841461 * 2^31
.word 3033269545 // zeta^ 64 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 64 * 375649793 * 2^31
.word     893127 // zeta^256 * 2^31 = 299353^256 * 2^31 = 8518431 * 2^31
.word 2692621625 // zeta^256 * f(q^(-1) mod 2^32) * 2^31 = 299353^256 * 375649793 * 2^31
.word   54773291 // zeta^320 * 2^31 = 299353^320 * 2^31 = 2013241 * 2^31
.word 2276321237 // zeta^320 * f(q^(-1) mod 2^32) * 2^31 = 299353^320 * 375649793 * 2^31
.word   55552039 // zeta^160 * 2^31 = 299353^160 * 2^31 = 4200632 * 2^31
.word  268819929 // zeta^160 * f(q^(-1) mod 2^32) * 2^31 = 299353^160 * 375649793 * 2^31
.word   58081411 // zeta^352 * 2^31 = 299353^352 * 2^31 = 9932396 * 2^31
.word  635624829 // zeta^352 * f(q^(-1) mod 2^32) * 2^31 = 299353^352 * 375649793 * 2^31
.word   16802007 // zeta^ 64 * 2^31 = 299353^ 64 * 2^31 = 13841461 * 2^31
.word 3033269545 // zeta^ 64 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 64 * 375649793 * 2^31
.word    7518129 // zeta^ 32 * 2^31 = 299353^ 32 * 2^31 = 940305 * 2^31
.word 2207658575 // zeta^ 32 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 32 * 375649793 * 2^31
.word     728237 // zeta^224 * 2^31 = 299353^224 * 2^31 = 24511972 * 2^31
.word 1568646483 // zeta^224 * f(q^(-1) mod 2^32) * 2^31 = 299353^224 * 375649793 * 2^31
.word     893127 // zeta^256 * 2^31 = 299353^256 * 2^31 = 8518431 * 2^31
.word 2692621625 // zeta^256 * f(q^(-1) mod 2^32) * 2^31 = 299353^256 * 375649793 * 2^31
.word     729223 // zeta^128 * 2^31 = 299353^128 * 2^31 = 8518432 * 2^31
.word  545138041 // zeta^128 * f(q^(-1) mod 2^32) * 2^31 = 299353^128 * 375649793 * 2^31
.word   54773291 // zeta^320 * 2^31 = 299353^320 * 2^31 = 2013241 * 2^31
.word 2276321237 // zeta^320 * f(q^(-1) mod 2^32) * 2^31 = 299353^320 * 375649793 * 2^31
.word   55552039 // zeta^160 * 2^31 = 299353^160 * 2^31 = 4200632 * 2^31
.word  268819929 // zeta^160 * f(q^(-1) mod 2^32) * 2^31 = 299353^160 * 375649793 * 2^31
.word   51233563 // zeta^ 80 * 2^31 = 299353^ 80 * 2^31 = 33038085 * 2^31
.word 4261759717 // zeta^ 80 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 80 * 375649793 * 2^31
.word   52902781 // zeta^272 * 2^31 = 299353^272 * 2^31 = 2711401 * 2^31
.word 2321000067 // zeta^272 * f(q^(-1) mod 2^32) * 2^31 = 299353^272 * 375649793 * 2^31
.word   58081411 // zeta^352 * 2^31 = 299353^352 * 2^31 = 9932396 * 2^31
.word  635624829 // zeta^352 * f(q^(-1) mod 2^32) * 2^31 = 299353^352 * 375649793 * 2^31
.word   28419145 // zeta^176 * 2^31 = 299353^176 * 2^31 = 32562828 * 2^31
.word 2083861943 // zeta^176 * f(q^(-1) mod 2^32) * 2^31 = 299353^176 * 375649793 * 2^31
.word   48191309 // zeta^368 * 2^31 = 299353^368 * 2^31 = 33153165 * 2^31
.word 4269124275 // zeta^368 * f(q^(-1) mod 2^32) * 2^31 = 299353^368 * 375649793 * 2^31
.word   33393089 // zeta^  0 * 2^31 = 299353^  0 * 2^31 = 1 * 2^31
.word 2147483711 // zeta^  0 * f(q^(-1) mod 2^32) * 2^31 = 299353^  0 * 375649793 * 2^31
.word   33393089 // zeta^  0 * 2^31 = 299353^  0 * 2^31 = 1 * 2^31
.word 2147483711 // zeta^  0 * f(q^(-1) mod 2^32) * 2^31 = 299353^  0 * 375649793 * 2^31
.word   38018305 // zeta^192 * 2^31 = 299353^192 * 2^31 = 15854702 * 2^31
.word 1014623487 // zeta^192 * f(q^(-1) mod 2^32) * 2^31 = 299353^192 * 375649793 * 2^31
.word   38018305 // zeta^192 * 2^31 = 299353^192 * 2^31 = 15854702 * 2^31
.word 1014623487 // zeta^192 * f(q^(-1) mod 2^32) * 2^31 = 299353^192 * 375649793 * 2^31
.word   43317805 // zeta^ 96 * 2^31 = 299353^ 96 * 2^31 = 14579576 * 2^31
.word  933021651 // zeta^ 96 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 96 * 375649793 * 2^31
.word   14476917 // zeta^288 * 2^31 = 299353^288 * 2^31 = 3260327 * 2^31
.word 2356128651 // zeta^288 * f(q^(-1) mod 2^32) * 2^31 = 299353^288 * 375649793 * 2^31
.word   43317805 // zeta^ 96 * 2^31 = 299353^ 96 * 2^31 = 14579576 * 2^31
.word  933021651 // zeta^ 96 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 96 * 375649793 * 2^31
.word   64683161 // zeta^ 48 * 2^31 = 299353^ 48 * 2^31 = 14745691 * 2^31
.word 3091135847 // zeta^ 48 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 48 * 375649793 * 2^31
.word   32686385 // zeta^240 * 2^31 = 299353^240 * 2^31 = 20044445 * 2^31
.word 3430230223 // zeta^240 * f(q^(-1) mod 2^32) * 2^31 = 299353^240 * 375649793 * 2^31
.word   14476917 // zeta^288 * 2^31 = 299353^288 * 2^31 = 3260327 * 2^31
.word 2356128651 // zeta^288 * f(q^(-1) mod 2^32) * 2^31 = 299353^288 * 375649793 * 2^31
.word   48515911 // zeta^144 * 2^31 = 299353^144 * 2^31 = 26823146 * 2^31
.word 1716550329 // zeta^144 * f(q^(-1) mod 2^32) * 2^31 = 299353^144 * 375649793 * 2^31
.word    4885007 // zeta^336 * 2^31 = 299353^336 * 2^31 = 12909577 * 2^31
.word 2973633521 // zeta^336 * f(q^(-1) mod 2^32) * 2^31 = 299353^336 * 375649793 * 2^31
.word   64683161 // zeta^ 48 * 2^31 = 299353^ 48 * 2^31 = 14745691 * 2^31
.word 3091135847 // zeta^ 48 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 48 * 375649793 * 2^31
.word   59281651 // zeta^ 24 * 2^31 = 299353^ 24 * 2^31 = 21289485 * 2^31
.word 3509906701 // zeta^ 24 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 24 * 375649793 * 2^31
.word   26613973 // zeta^216 * 2^31 = 299353^216 * 2^31 = 23642097 * 2^31
.word 3660462379 // zeta^216 * f(q^(-1) mod 2^32) * 2^31 = 299353^216 * 375649793 * 2^31
.word   32686385 // zeta^240 * 2^31 = 299353^240 * 2^31 = 20044445 * 2^31
.word 3430230223 // zeta^240 * f(q^(-1) mod 2^32) * 2^31 = 299353^240 * 375649793 * 2^31
.word    8356523 // zeta^120 * 2^31 = 299353^120 * 2^31 = 16204162 * 2^31
.word 1036987221 // zeta^120 * f(q^(-1) mod 2^32) * 2^31 = 299353^120 * 375649793 * 2^31
.word   25917637 // zeta^312 * 2^31 = 299353^312 * 2^31 = 22603682 * 2^31
.word 1446525243 // zeta^312 * f(q^(-1) mod 2^32) * 2^31 = 299353^312 * 375649793 * 2^31
.word   48515911 // zeta^144 * 2^31 = 299353^144 * 2^31 = 26823146 * 2^31
.word 1716550329 // zeta^144 * f(q^(-1) mod 2^32) * 2^31 = 299353^144 * 375649793 * 2^31
.word   45317587 // zeta^ 72 * 2^31 = 299353^ 72 * 2^31 = 14626653 * 2^31
.word 3083517997 // zeta^ 72 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 72 * 375649793 * 2^31
.word   39999747 // zeta^264 * 2^31 = 299353^264 * 2^31 = 20428075 * 2^31
.word 3454780669 // zeta^264 * f(q^(-1) mod 2^32) * 2^31 = 299353^264 * 375649793 * 2^31
.word    4885007 // zeta^336 * 2^31 = 299353^336 * 2^31 = 12909577 * 2^31
.word 2973633521 // zeta^336 * f(q^(-1) mod 2^32) * 2^31 = 299353^336 * 375649793 * 2^31
.word   18302687 // zeta^168 * 2^31 = 299353^168 * 2^31 = 3819232 * 2^31
.word  244412193 // zeta^168 * f(q^(-1) mod 2^32) * 2^31 = 299353^168 * 375649793 * 2^31
.word   54571669 // zeta^360 * 2^31 = 299353^360 * 2^31 = 30285189 * 2^31
.word 4085587819 // zeta^360 * f(q^(-1) mod 2^32) * 2^31 = 299353^360 * 375649793 * 2^31
.word   59281651 // zeta^ 24 * 2^31 = 299353^ 24 * 2^31 = 21289485 * 2^31
.word 3509906701 // zeta^ 24 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 24 * 375649793 * 2^31
.word   40872659 // zeta^ 12 * 2^31 = 299353^ 12 * 2^31 = 32984098 * 2^31
.word 2110821165 // zeta^ 12 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 12 * 375649793 * 2^31
.word    5033605 // zeta^204 * 2^31 = 299353^204 * 2^31 = 26691971 * 2^31
.word 3855639419 // zeta^204 * f(q^(-1) mod 2^32) * 2^31 = 299353^204 * 375649793 * 2^31
.word   26613973 // zeta^216 * 2^31 = 299353^216 * 2^31 = 23642097 * 2^31
.word 3660462379 // zeta^216 * f(q^(-1) mod 2^32) * 2^31 = 299353^216 * 375649793 * 2^31
.word   50479773 // zeta^108 * 2^31 = 299353^108 * 2^31 = 4264131 * 2^31
.word 2420367203 // zeta^108 * f(q^(-1) mod 2^32) * 2^31 = 299353^108 * 375649793 * 2^31
.word   58797193 // zeta^300 * 2^31 = 299353^300 * 2^31 = 24307701 * 2^31
.word 3703057783 // zeta^300 * f(q^(-1) mod 2^32) * 2^31 = 299353^300 * 375649793 * 2^31
.word    8356523 // zeta^120 * 2^31 = 299353^120 * 2^31 = 16204162 * 2^31
.word 1036987221 // zeta^120 * f(q^(-1) mod 2^32) * 2^31 = 299353^120 * 375649793 * 2^31
.word   59392861 // zeta^ 60 * 2^31 = 299353^ 60 * 2^31 = 5443354 * 2^31
.word  348348067 // zeta^ 60 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 60 * 375649793 * 2^31
.word    9383201 // zeta^252 * 2^31 = 299353^252 * 2^31 = 8471290 * 2^31
.word  542121183 // zeta^252 * f(q^(-1) mod 2^32) * 2^31 = 299353^252 * 375649793 * 2^31
.word   25917637 // zeta^312 * 2^31 = 299353^312 * 2^31 = 22603682 * 2^31
.word 1446525243 // zeta^312 * f(q^(-1) mod 2^32) * 2^31 = 299353^312 * 375649793 * 2^31
.word   63329695 // zeta^156 * 2^31 = 299353^156 * 2^31 = 8247799 * 2^31
.word 2675302497 // zeta^156 * f(q^(-1) mod 2^32) * 2^31 = 299353^156 * 375649793 * 2^31
.word   57130935 // zeta^348 * 2^31 = 299353^348 * 2^31 = 28470806 * 2^31
.word 1821992521 // zeta^348 * f(q^(-1) mod 2^32) * 2^31 = 299353^348 * 375649793 * 2^31
.word   45317587 // zeta^ 72 * 2^31 = 299353^ 72 * 2^31 = 14626653 * 2^31
.word 3083517997 // zeta^ 72 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 72 * 375649793 * 2^31
.word   65797823 // zeta^ 36 * 2^31 = 299353^ 36 * 2^31 = 18723698 * 2^31
.word 1198225217 // zeta^ 36 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 36 * 375649793 * 2^31
.word   10391631 // zeta^228 * 2^31 = 299353^228 * 2^31 = 2138810 * 2^31
.word  136873393 // zeta^228 * f(q^(-1) mod 2^32) * 2^31 = 299353^228 * 375649793 * 2^31
.word   39999747 // zeta^264 * 2^31 = 299353^264 * 2^31 = 20428075 * 2^31
.word 3454780669 // zeta^264 * f(q^(-1) mod 2^32) * 2^31 = 299353^264 * 375649793 * 2^31
.word   31719253 // zeta^132 * 2^31 = 299353^132 * 2^31 = 23825509 * 2^31
.word 3672199851 // zeta^132 * f(q^(-1) mod 2^32) * 2^31 = 299353^132 * 375649793 * 2^31
.word   12271567 // zeta^324 * 2^31 = 299353^324 * 2^31 = 6528331 * 2^31
.word 2565264945 // zeta^324 * f(q^(-1) mod 2^32) * 2^31 = 299353^324 * 375649793 * 2^31
.word   18302687 // zeta^168 * 2^31 = 299353^168 * 2^31 = 3819232 * 2^31
.word  244412193 // zeta^168 * f(q^(-1) mod 2^32) * 2^31 = 299353^168 * 375649793 * 2^31
.word   21111903 // zeta^ 84 * 2^31 = 299353^ 84 * 2^31 = 13908588 * 2^31
.word  890081697 // zeta^ 84 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 84 * 375649793 * 2^31
.word   12778219 // zeta^276 * 2^31 = 299353^276 * 2^31 = 27066590 * 2^31
.word 1732129557 // zeta^276 * f(q^(-1) mod 2^32) * 2^31 = 299353^276 * 375649793 * 2^31
.word   54571669 // zeta^360 * 2^31 = 299353^360 * 2^31 = 30285189 * 2^31
.word 4085587819 // zeta^360 * f(q^(-1) mod 2^32) * 2^31 = 299353^360 * 375649793 * 2^31
.word   35733845 // zeta^180 * 2^31 = 299353^180 * 2^31 = 31254932 * 2^31
.word 2000162987 // zeta^180 * f(q^(-1) mod 2^32) * 2^31 = 299353^180 * 375649793 * 2^31
.word    6014597 // zeta^372 * 2^31 = 299353^372 * 2^31 = 7194579 * 2^31
.word 2607901563 // zeta^372 * f(q^(-1) mod 2^32) * 2^31 = 299353^372 * 375649793 * 2^31
.word   65310821 // zeta^  8 * 2^31 = 299353^  8 * 2^31 = 22098973 * 2^31
.word 3561709979 // zeta^  8 * f(q^(-1) mod 2^32) * 2^31 = 299353^  8 * 375649793 * 2^31
.word   22138503 // zeta^  4 * 2^31 = 299353^  4 * 2^31 = 27792935 * 2^31
.word 3926095737 // zeta^  4 * f(q^(-1) mod 2^32) * 2^31 = 299353^  4 * 375649793 * 2^31
.word   33080685 // zeta^196 * 2^31 = 299353^196 * 2^31 = 14985834 * 2^31
.word  959020179 // zeta^196 * f(q^(-1) mod 2^32) * 2^31 = 299353^196 * 375649793 * 2^31
.word    1555569 // zeta^200 * 2^31 = 299353^200 * 2^31 = 7111893 * 2^31
.word 2602610063 // zeta^200 * f(q^(-1) mod 2^32) * 2^31 = 299353^200 * 375649793 * 2^31
.word    2867655 // zeta^100 * 2^31 = 299353^100 * 2^31 = 27701331 * 2^31
.word 3920233529 // zeta^100 * f(q^(-1) mod 2^32) * 2^31 = 299353^100 * 375649793 * 2^31
.word   16116991 // zeta^292 * 2^31 = 299353^292 * 2^31 = 7520866 * 2^31
.word  481298689 // zeta^292 * f(q^(-1) mod 2^32) * 2^31 = 299353^292 * 375649793 * 2^31
.word    6082985 // zeta^104 * 2^31 = 299353^104 * 2^31 = 13583150 * 2^31
.word  869255255 // zeta^104 * f(q^(-1) mod 2^32) * 2^31 = 299353^104 * 375649793 * 2^31
.word   62987623 // zeta^ 52 * 2^31 = 299353^ 52 * 2^31 = 12887930 * 2^31
.word  824764569 // zeta^ 52 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 52 * 375649793 * 2^31
.word   21603065 // zeta^244 * 2^31 = 299353^244 * 2^31 = 20924057 * 2^31
.word 3486521095 // zeta^244 * f(q^(-1) mod 2^32) * 2^31 = 299353^244 * 375649793 * 2^31
.word    9182701 // zeta^296 * 2^31 = 299353^296 * 2^31 = 27800794 * 2^31
.word 1779115027 // zeta^296 * f(q^(-1) mod 2^32) * 2^31 = 299353^296 * 375649793 * 2^31
.word   52075375 // zeta^148 * 2^31 = 299353^148 * 2^31 = 18248795 * 2^31
.word 3315317393 // zeta^148 * f(q^(-1) mod 2^32) * 2^31 = 299353^148 * 375649793 * 2^31
.word   41362929 // zeta^340 * 2^31 = 299353^340 * 2^31 = 7570258 * 2^31
.word  484459535 // zeta^340 * f(q^(-1) mod 2^32) * 2^31 = 299353^340 * 375649793 * 2^31
.word   36605521 // zeta^ 56 * 2^31 = 299353^ 56 * 2^31 = 17233810 * 2^31
.word 1102879663 // zeta^ 56 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 56 * 375649793 * 2^31
.word   32011901 // zeta^ 28 * 2^31 = 299353^ 28 * 2^31 = 3117724 * 2^31
.word  199519107 // zeta^ 28 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 28 * 375649793 * 2^31
.word     794339 // zeta^220 * 2^31 = 299353^220 * 2^31 = 26868479 * 2^31
.word 3866935069 // zeta^220 * f(q^(-1) mod 2^32) * 2^31 = 299353^220 * 375649793 * 2^31
.word   57238029 // zeta^248 * 2^31 = 299353^248 * 2^31 = 12410931 * 2^31
.word 2941722611 // zeta^248 * f(q^(-1) mod 2^32) * 2^31 = 299353^248 * 375649793 * 2^31
.word   56716901 // zeta^124 * 2^31 = 299353^124 * 2^31 = 32895965 * 2^31
.word 4252664731 // zeta^124 * f(q^(-1) mod 2^32) * 2^31 = 299353^124 * 375649793 * 2^31
.word   37067083 // zeta^316 * 2^31 = 299353^316 * 2^31 = 17429125 * 2^31
.word 3262862517 // zeta^316 * f(q^(-1) mod 2^32) * 2^31 = 299353^316 * 375649793 * 2^31
.word   41992621 // zeta^152 * 2^31 = 299353^152 * 2^31 = 33421816 * 2^31
.word 2138832979 // zeta^152 * f(q^(-1) mod 2^32) * 2^31 = 299353^152 * 375649793 * 2^31
.word   37641785 // zeta^ 76 * 2^31 = 299353^ 76 * 2^31 = 14988263 * 2^31
.word 3106659271 // zeta^ 76 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 76 * 375649793 * 2^31
.word    9036599 // zeta^268 * 2^31 = 299353^268 * 2^31 = 26964245 * 2^31
.word 3873063625 // zeta^268 * f(q^(-1) mod 2^32) * 2^31 = 299353^268 * 375649793 * 2^31
.word   53062965 // zeta^344 * 2^31 = 299353^344 * 2^31 = 26976670 * 2^31
.word 1726375115 // zeta^344 * f(q^(-1) mod 2^32) * 2^31 = 299353^344 * 375649793 * 2^31
.word   33892281 // zeta^172 * 2^31 = 299353^172 * 2^31 = 18683355 * 2^31
.word 3343127111 // zeta^172 * f(q^(-1) mod 2^32) * 2^31 = 299353^172 * 375649793 * 2^31
.word   27392067 // zeta^364 * 2^31 = 299353^364 * 2^31 = 5739597 * 2^31
.word 2514789821 // zeta^364 * f(q^(-1) mod 2^32) * 2^31 = 299353^364 * 375649793 * 2^31
.word    7518129 // zeta^ 32 * 2^31 = 299353^ 32 * 2^31 = 940305 * 2^31
.word 2207658575 // zeta^ 32 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 32 * 375649793 * 2^31
.word   29170123 // zeta^ 16 * 2^31 = 299353^ 16 * 2^31 = 24111745 * 2^31
.word 3690517557 // zeta^ 16 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 16 * 375649793 * 2^31
.word   22561577 // zeta^208 * 2^31 = 299353^208 * 2^31 = 12390669 * 2^31
.word 2940425943 // zeta^208 * f(q^(-1) mod 2^32) * 2^31 = 299353^208 * 375649793 * 2^31
.word     728237 // zeta^224 * 2^31 = 299353^224 * 2^31 = 24511972 * 2^31
.word 1568646483 // zeta^224 * f(q^(-1) mod 2^32) * 2^31 = 299353^224 * 375649793 * 2^31
.word   18052069 // zeta^112 * 2^31 = 299353^112 * 2^31 = 20448273 * 2^31
.word 3456073243 // zeta^112 * f(q^(-1) mod 2^32) * 2^31 = 299353^112 * 375649793 * 2^31
.word   64406963 // zeta^304 * 2^31 = 299353^304 * 2^31 = 17817137 * 2^31
.word 3287693389 // zeta^304 * f(q^(-1) mod 2^32) * 2^31 = 299353^304 * 375649793 * 2^31
.word     729223 // zeta^128 * 2^31 = 299353^128 * 2^31 = 8518432 * 2^31
.word  545138041 // zeta^128 * f(q^(-1) mod 2^32) * 2^31 = 299353^128 * 375649793 * 2^31
.word   16802007 // zeta^ 64 * 2^31 = 299353^ 64 * 2^31 = 13841461 * 2^31
.word 3033269545 // zeta^ 64 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 64 * 375649793 * 2^31
.word     893127 // zeta^256 * 2^31 = 299353^256 * 2^31 = 8518431 * 2^31
.word 2692621625 // zeta^256 * f(q^(-1) mod 2^32) * 2^31 = 299353^256 * 375649793 * 2^31
.word   54773291 // zeta^320 * 2^31 = 299353^320 * 2^31 = 2013241 * 2^31
.word 2276321237 // zeta^320 * f(q^(-1) mod 2^32) * 2^31 = 299353^320 * 375649793 * 2^31
.word   55552039 // zeta^160 * 2^31 = 299353^160 * 2^31 = 4200632 * 2^31
.word  268819929 // zeta^160 * f(q^(-1) mod 2^32) * 2^31 = 299353^160 * 375649793 * 2^31
.word   58081411 // zeta^352 * 2^31 = 299353^352 * 2^31 = 9932396 * 2^31
.word  635624829 // zeta^352 * f(q^(-1) mod 2^32) * 2^31 = 299353^352 * 375649793 * 2^31
.word   51233563 // zeta^ 80 * 2^31 = 299353^ 80 * 2^31 = 33038085 * 2^31
.word 4261759717 // zeta^ 80 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 80 * 375649793 * 2^31
.word   42676979 // zeta^ 40 * 2^31 = 299353^ 40 * 2^31 = 9575431 * 2^31
.word 2760264461 // zeta^ 40 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 40 * 375649793 * 2^31
.word   27097661 // zeta^232 * 2^31 = 299353^232 * 2^31 = 10311346 * 2^31
.word  659875779 // zeta^232 * f(q^(-1) mod 2^32) * 2^31 = 299353^232 * 375649793 * 2^31
.word   52902781 // zeta^272 * 2^31 = 299353^272 * 2^31 = 2711401 * 2^31
.word 2321000067 // zeta^272 * f(q^(-1) mod 2^32) * 2^31 = 299353^272 * 375649793 * 2^31
.word    4639589 // zeta^136 * 2^31 = 299353^136 * 2^31 = 8970055 * 2^31
.word 2721523355 // zeta^136 * f(q^(-1) mod 2^32) * 2^31 = 299353^136 * 375649793 * 2^31
.word   56908961 // zeta^328 * 2^31 = 299353^328 * 2^31 = 26042233 * 2^31
.word 3814059359 // zeta^328 * f(q^(-1) mod 2^32) * 2^31 = 299353^328 * 375649793 * 2^31
.word   28419145 // zeta^176 * 2^31 = 299353^176 * 2^31 = 32562828 * 2^31
.word 2083861943 // zeta^176 * f(q^(-1) mod 2^32) * 2^31 = 299353^176 * 375649793 * 2^31
.word    7108001 // zeta^ 88 * 2^31 = 299353^ 88 * 2^31 = 30222420 * 2^31
.word 1934087263 // zeta^ 88 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 88 * 375649793 * 2^31
.word   16267963 // zeta^280 * 2^31 = 299353^280 * 2^31 = 12132331 * 2^31
.word 2923893573 // zeta^280 * f(q^(-1) mod 2^32) * 2^31 = 299353^280 * 375649793 * 2^31
.word   48191309 // zeta^368 * 2^31 = 299353^368 * 2^31 = 33153165 * 2^31
.word 4269124275 // zeta^368 * f(q^(-1) mod 2^32) * 2^31 = 299353^368 * 375649793 * 2^31
.word   28966165 // zeta^184 * 2^31 = 299353^184 * 2^31 = 6280499 * 2^31
.word 2549404907 // zeta^184 * f(q^(-1) mod 2^32) * 2^31 = 299353^184 * 375649793 * 2^31
.word   15324513 // zeta^376 * 2^31 = 299353^376 * 2^31 = 29763762 * 2^31
.word 1904735391 // zeta^376 * f(q^(-1) mod 2^32) * 2^31 = 299353^376 * 375649793 * 2^31
.word   29170123 // zeta^ 16 * 2^31 = 299353^ 16 * 2^31 = 24111745 * 2^31
.word 3690517557 // zeta^ 16 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 16 * 375649793 * 2^31
.word   65310821 // zeta^  8 * 2^31 = 299353^  8 * 2^31 = 22098973 * 2^31
.word 3561709979 // zeta^  8 * f(q^(-1) mod 2^32) * 2^31 = 299353^  8 * 375649793 * 2^31
.word    1555569 // zeta^200 * 2^31 = 299353^200 * 2^31 = 7111893 * 2^31
.word 2602610063 // zeta^200 * f(q^(-1) mod 2^32) * 2^31 = 299353^200 * 375649793 * 2^31
.word   22561577 // zeta^208 * 2^31 = 299353^208 * 2^31 = 12390669 * 2^31
.word 2940425943 // zeta^208 * f(q^(-1) mod 2^32) * 2^31 = 299353^208 * 375649793 * 2^31
.word    6082985 // zeta^104 * 2^31 = 299353^104 * 2^31 = 13583150 * 2^31
.word  869255255 // zeta^104 * f(q^(-1) mod 2^32) * 2^31 = 299353^104 * 375649793 * 2^31
.word    9182701 // zeta^296 * 2^31 = 299353^296 * 2^31 = 27800794 * 2^31
.word 1779115027 // zeta^296 * f(q^(-1) mod 2^32) * 2^31 = 299353^296 * 375649793 * 2^31
.word   18052069 // zeta^112 * 2^31 = 299353^112 * 2^31 = 20448273 * 2^31
.word 3456073243 // zeta^112 * f(q^(-1) mod 2^32) * 2^31 = 299353^112 * 375649793 * 2^31
.word   36605521 // zeta^ 56 * 2^31 = 299353^ 56 * 2^31 = 17233810 * 2^31
.word 1102879663 // zeta^ 56 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 56 * 375649793 * 2^31
.word   57238029 // zeta^248 * 2^31 = 299353^248 * 2^31 = 12410931 * 2^31
.word 2941722611 // zeta^248 * f(q^(-1) mod 2^32) * 2^31 = 299353^248 * 375649793 * 2^31
.word   64406963 // zeta^304 * 2^31 = 299353^304 * 2^31 = 17817137 * 2^31
.word 3287693389 // zeta^304 * f(q^(-1) mod 2^32) * 2^31 = 299353^304 * 375649793 * 2^31
.word   41992621 // zeta^152 * 2^31 = 299353^152 * 2^31 = 33421816 * 2^31
.word 2138832979 // zeta^152 * f(q^(-1) mod 2^32) * 2^31 = 299353^152 * 375649793 * 2^31
.word   53062965 // zeta^344 * 2^31 = 299353^344 * 2^31 = 26976670 * 2^31
.word 1726375115 // zeta^344 * f(q^(-1) mod 2^32) * 2^31 = 299353^344 * 375649793 * 2^31
.word   16802007 // zeta^ 64 * 2^31 = 299353^ 64 * 2^31 = 13841461 * 2^31
.word 3033269545 // zeta^ 64 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 64 * 375649793 * 2^31
.word    7518129 // zeta^ 32 * 2^31 = 299353^ 32 * 2^31 = 940305 * 2^31
.word 2207658575 // zeta^ 32 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 32 * 375649793 * 2^31
.word     728237 // zeta^224 * 2^31 = 299353^224 * 2^31 = 24511972 * 2^31
.word 1568646483 // zeta^224 * f(q^(-1) mod 2^32) * 2^31 = 299353^224 * 375649793 * 2^31
.word     893127 // zeta^256 * 2^31 = 299353^256 * 2^31 = 8518431 * 2^31
.word 2692621625 // zeta^256 * f(q^(-1) mod 2^32) * 2^31 = 299353^256 * 375649793 * 2^31
.word     729223 // zeta^128 * 2^31 = 299353^128 * 2^31 = 8518432 * 2^31
.word  545138041 // zeta^128 * f(q^(-1) mod 2^32) * 2^31 = 299353^128 * 375649793 * 2^31
.word   54773291 // zeta^320 * 2^31 = 299353^320 * 2^31 = 2013241 * 2^31
.word 2276321237 // zeta^320 * f(q^(-1) mod 2^32) * 2^31 = 299353^320 * 375649793 * 2^31
.word   55552039 // zeta^160 * 2^31 = 299353^160 * 2^31 = 4200632 * 2^31
.word  268819929 // zeta^160 * f(q^(-1) mod 2^32) * 2^31 = 299353^160 * 375649793 * 2^31
.word   51233563 // zeta^ 80 * 2^31 = 299353^ 80 * 2^31 = 33038085 * 2^31
.word 4261759717 // zeta^ 80 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 80 * 375649793 * 2^31
.word   52902781 // zeta^272 * 2^31 = 299353^272 * 2^31 = 2711401 * 2^31
.word 2321000067 // zeta^272 * f(q^(-1) mod 2^32) * 2^31 = 299353^272 * 375649793 * 2^31
.word   58081411 // zeta^352 * 2^31 = 299353^352 * 2^31 = 9932396 * 2^31
.word  635624829 // zeta^352 * f(q^(-1) mod 2^32) * 2^31 = 299353^352 * 375649793 * 2^31
.word   28419145 // zeta^176 * 2^31 = 299353^176 * 2^31 = 32562828 * 2^31
.word 2083861943 // zeta^176 * f(q^(-1) mod 2^32) * 2^31 = 299353^176 * 375649793 * 2^31
.word   48191309 // zeta^368 * 2^31 = 299353^368 * 2^31 = 33153165 * 2^31
.word 4269124275 // zeta^368 * f(q^(-1) mod 2^32) * 2^31 = 299353^368 * 375649793 * 2^31
.word   42676979 // zeta^ 40 * 2^31 = 299353^ 40 * 2^31 = 9575431 * 2^31
.word 2760264461 // zeta^ 40 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 40 * 375649793 * 2^31
.word    5740163 // zeta^ 20 * 2^31 = 299353^ 20 * 2^31 = 24739198 * 2^31
.word 1583187837 // zeta^ 20 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 20 * 375649793 * 2^31
.word   28917839 // zeta^212 * 2^31 = 299353^212 * 2^31 = 21478846 * 2^31
.word 1374541233 // zeta^212 * f(q^(-1) mod 2^32) * 2^31 = 299353^212 * 375649793 * 2^31
.word   27097661 // zeta^232 * 2^31 = 299353^232 * 2^31 = 10311346 * 2^31
.word  659875779 // zeta^232 * f(q^(-1) mod 2^32) * 2^31 = 299353^232 * 375649793 * 2^31
.word   49145461 // zeta^116 * 2^31 = 299353^116 * 2^31 = 13729478 * 2^31
.word  878619531 // zeta^116 * f(q^(-1) mod 2^32) * 2^31 = 299353^116 * 375649793 * 2^31
.word    6303215 // zeta^308 * 2^31 = 299353^308 * 2^31 = 18367002 * 2^31
.word 1175398417 // zeta^308 * f(q^(-1) mod 2^32) * 2^31 = 299353^308 * 375649793 * 2^31
.word    4639589 // zeta^136 * 2^31 = 299353^136 * 2^31 = 8970055 * 2^31
.word 2721523355 // zeta^136 * f(q^(-1) mod 2^32) * 2^31 = 299353^136 * 375649793 * 2^31
.word   54366111 // zeta^ 68 * 2^31 = 299353^ 68 * 2^31 = 8457503 * 2^31
.word 2688722529 // zeta^ 68 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 68 * 375649793 * 2^31
.word   43137743 // zeta^260 * 2^31 = 299353^260 * 2^31 = 29589567 * 2^31
.word 4041071409 // zeta^260 * f(q^(-1) mod 2^32) * 2^31 = 299353^260 * 375649793 * 2^31
.word   56908961 // zeta^328 * 2^31 = 299353^328 * 2^31 = 26042233 * 2^31
.word 3814059359 // zeta^328 * f(q^(-1) mod 2^32) * 2^31 = 299353^328 * 375649793 * 2^31
.word   48357821 // zeta^164 * 2^31 = 299353^164 * 2^31 = 26244564 * 2^31
.word 1679523907 // zeta^164 * f(q^(-1) mod 2^32) * 2^31 = 299353^164 * 375649793 * 2^31
.word   41080969 // zeta^356 * 2^31 = 299353^356 * 2^31 = 7994472 * 2^31
.word  511607159 // zeta^356 * f(q^(-1) mod 2^32) * 2^31 = 299353^356 * 375649793 * 2^31
.word    7108001 // zeta^ 88 * 2^31 = 299353^ 88 * 2^31 = 30222420 * 2^31
.word 1934087263 // zeta^ 88 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 88 * 375649793 * 2^31
.word    8652081 // zeta^ 44 * 2^31 = 299353^ 44 * 2^31 = 27932647 * 2^31
.word 3935036623 // zeta^ 44 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 44 * 375649793 * 2^31
.word   44314847 // zeta^236 * 2^31 = 299353^236 * 2^31 = 10003728 * 2^31
.word  640189729 // zeta^236 * f(q^(-1) mod 2^32) * 2^31 = 299353^236 * 375649793 * 2^31
.word   16267963 // zeta^280 * 2^31 = 299353^280 * 2^31 = 12132331 * 2^31
.word 2923893573 // zeta^280 * f(q^(-1) mod 2^32) * 2^31 = 299353^280 * 375649793 * 2^31
.word   16352265 // zeta^140 * 2^31 = 299353^140 * 2^31 = 26391350 * 2^31
.word 1688917495 // zeta^140 * f(q^(-1) mod 2^32) * 2^31 = 299353^140 * 375649793 * 2^31
.word     948813 // zeta^332 * 2^31 = 299353^332 * 2^31 = 11703708 * 2^31
.word  748980147 // zeta^332 * f(q^(-1) mod 2^32) * 2^31 = 299353^332 * 375649793 * 2^31
.word   28966165 // zeta^184 * 2^31 = 299353^184 * 2^31 = 6280499 * 2^31
.word 2549404907 // zeta^184 * f(q^(-1) mod 2^32) * 2^31 = 299353^184 * 375649793 * 2^31
.word   44334383 // zeta^ 92 * 2^31 = 299353^ 92 * 2^31 = 31954666 * 2^31
.word 2044942545 // zeta^ 92 * f(q^(-1) mod 2^32) * 2^31 = 299353^ 92 * 375649793 * 2^31
.word   64874787 // zeta^284 * 2^31 = 299353^284 * 2^31 = 5130075 * 2^31
.word 2475783389 // zeta^284 * f(q^(-1) mod 2^32) * 2^31 = 299353^284 * 375649793 * 2^31
.word   15324513 // zeta^376 * 2^31 = 299353^376 * 2^31 = 29763762 * 2^31
.word 1904735391 // zeta^376 * f(q^(-1) mod 2^32) * 2^31 = 299353^376 * 375649793 * 2^31
.word   62902951 // zeta^188 * 2^31 = 299353^188 * 2^31 = 22872479 * 2^31
.word 3611210585 // zeta^188 * f(q^(-1) mod 2^32) * 2^31 = 299353^188 * 375649793 * 2^31
.word   53337279 // zeta^380 * 2^31 = 299353^380 * 2^31 = 9132318 * 2^31
.word  584423745 // zeta^380 * f(q^(-1) mod 2^32) * 2^31 = 299353^380 * 375649793 * 2^31
.text
rev4: .byte 3*4
      .byte 2*4
      .byte 1*4
      .byte 0*4
.align 4
roots_addr: .word roots
.syntax unified
.type ntt_768_u32_33556993_299353_incomplete_rev4, %function
.global ntt_768_u32_33556993_299353_incomplete_rev4
ntt_768_u32_33556993_299353_incomplete_rev4:
// Save GPRs
push {r4-r11,lr}
// Save MVE vector registers
vpush {d8-d15}
adr r4, rev4
vldrb.u32 Q0, [r4]
vadd.u32 Q0, Q0, r0
// Use r14 as marker for r0 + 1008
add r14, r0, #1008
// Use r12 as marker for r0 + 2016
add r12, r14, #1008
// Use r11 as marker for r0 + 3024
add r11, r12, #1008
.equ modulus, 33556993
movw r10, #:lower16:modulus
movt r10, #:upper16:modulus
ldr r9, roots_addr
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
// input[0]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 0)]
// input[256]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 4)]
// input[512]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 8)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r0,#(0)]
vsub.s32 Q4, Q1, Q3
// Release input[0] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r14,#(16)]
// Release input[256] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r12,#(32)]
// Release input[512] from Q3
// input[4]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 4)]
// input[260]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 8)]
// input[516]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 12)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r0,#(16)]
vsub.s32 Q4, Q1, Q3
// Release input[4] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r14,#(32)]
// Release input[260] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r12,#(48)]
// Release input[516] from Q3
// input[8]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 8)]
// input[264]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 12)]
// input[520]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 16)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r0,#(32)]
vsub.s32 Q4, Q1, Q3
// Release input[8] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r14,#(48)]
// Release input[264] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r12,#(64)]
// Release input[520] from Q3
// input[12]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 12)]
// input[268]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 16)]
// input[524]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 20)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r0,#(48)]
vsub.s32 Q4, Q1, Q3
// Release input[12] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r14,#(64)]
// Release input[268] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r12,#(80)]
// Release input[524] from Q3
// input[16]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 16)]
// input[272]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 20)]
// input[528]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 24)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r0,#(64)]
vsub.s32 Q4, Q1, Q3
// Release input[16] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r14,#(80)]
// Release input[272] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r12,#(96)]
// Release input[528] from Q3
// input[20]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 20)]
// input[276]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 24)]
// input[532]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 28)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r0,#(80)]
vsub.s32 Q4, Q1, Q3
// Release input[20] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r14,#(96)]
// Release input[276] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r12,#(112)]
// Release input[532] from Q3
// input[24]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 24)]
// input[280]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 28)]
// input[536]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 32)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r0,#(96)]
vsub.s32 Q4, Q1, Q3
// Release input[24] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r14,#(112)]
// Release input[280] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r12,#(128)]
// Release input[536] from Q3
// input[28]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 28)]
// input[284]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 32)]
// input[540]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 36)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r0,#(112)]
vsub.s32 Q4, Q1, Q3
// Release input[28] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r14,#(128)]
// Release input[284] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r12,#(144)]
// Release input[540] from Q3
// input[32]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 32)]
// input[288]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 36)]
// input[544]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 40)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r0,#(128)]
vsub.s32 Q4, Q1, Q3
// Release input[32] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r14,#(144)]
// Release input[288] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r12,#(160)]
// Release input[544] from Q3
// input[36]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 36)]
// input[292]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 40)]
// input[548]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 44)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r0,#(144)]
vsub.s32 Q4, Q1, Q3
// Release input[36] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r14,#(160)]
// Release input[292] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r12,#(176)]
// Release input[548] from Q3
// input[40]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 40)]
// input[296]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 44)]
// input[552]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 48)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r0,#(160)]
vsub.s32 Q4, Q1, Q3
// Release input[40] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r14,#(176)]
// Release input[296] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r12,#(192)]
// Release input[552] from Q3
// input[44]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 44)]
// input[300]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 48)]
// input[556]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 52)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r0,#(176)]
vsub.s32 Q4, Q1, Q3
// Release input[44] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r14,#(192)]
// Release input[300] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r12,#(208)]
// Release input[556] from Q3
// input[48]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 48)]
// input[304]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 52)]
// input[560]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 56)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r0,#(192)]
vsub.s32 Q4, Q1, Q3
// Release input[48] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r14,#(208)]
// Release input[304] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r12,#(224)]
// Release input[560] from Q3
// input[52]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 52)]
// input[308]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 56)]
// input[564]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 60)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r0,#(208)]
vsub.s32 Q4, Q1, Q3
// Release input[52] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r14,#(224)]
// Release input[308] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r12,#(240)]
// Release input[564] from Q3
// input[56]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 56)]
// input[312]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 60)]
// input[568]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 64)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r0,#(224)]
vsub.s32 Q4, Q1, Q3
// Release input[56] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r14,#(240)]
// Release input[312] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r12,#(256)]
// Release input[568] from Q3
// input[60]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 60)]
// input[316]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 64)]
// input[572]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 68)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r0,#(240)]
vsub.s32 Q4, Q1, Q3
// Release input[60] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r14,#(256)]
// Release input[316] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r12,#(272)]
// Release input[572] from Q3
// input[64]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 64)]
// input[320]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 68)]
// input[576]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 72)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r0,#(256)]
vsub.s32 Q4, Q1, Q3
// Release input[64] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r14,#(272)]
// Release input[320] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r12,#(288)]
// Release input[576] from Q3
// input[68]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 68)]
// input[324]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 72)]
// input[580]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 76)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r0,#(272)]
vsub.s32 Q4, Q1, Q3
// Release input[68] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r14,#(288)]
// Release input[324] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r12,#(304)]
// Release input[580] from Q3
// input[72]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 72)]
// input[328]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 76)]
// input[584]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 80)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r0,#(288)]
vsub.s32 Q4, Q1, Q3
// Release input[72] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r14,#(304)]
// Release input[328] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r12,#(320)]
// Release input[584] from Q3
// input[76]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 76)]
// input[332]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 80)]
// input[588]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 84)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r0,#(304)]
vsub.s32 Q4, Q1, Q3
// Release input[76] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r14,#(320)]
// Release input[332] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r12,#(336)]
// Release input[588] from Q3
// input[80]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 80)]
// input[336]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 84)]
// input[592]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 88)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r0,#(320)]
vsub.s32 Q4, Q1, Q3
// Release input[80] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r14,#(336)]
// Release input[336] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r12,#(352)]
// Release input[592] from Q3
// input[84]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 84)]
// input[340]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 88)]
// input[596]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 92)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r0,#(336)]
vsub.s32 Q4, Q1, Q3
// Release input[84] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r14,#(352)]
// Release input[340] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r12,#(368)]
// Release input[596] from Q3
// input[88]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 88)]
// input[344]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 92)]
// input[600]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 96)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r0,#(352)]
vsub.s32 Q4, Q1, Q3
// Release input[88] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r14,#(368)]
// Release input[344] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r12,#(384)]
// Release input[600] from Q3
// input[92]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 92)]
// input[348]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 96)]
// input[604]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 100)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r0,#(368)]
vsub.s32 Q4, Q1, Q3
// Release input[92] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r14,#(384)]
// Release input[348] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r12,#(400)]
// Release input[604] from Q3
// input[96]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 96)]
// input[352]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 100)]
// input[608]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 104)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r0,#(384)]
vsub.s32 Q4, Q1, Q3
// Release input[96] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r14,#(400)]
// Release input[352] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r12,#(416)]
// Release input[608] from Q3
// input[100]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 100)]
// input[356]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 104)]
// input[612]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 108)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r0,#(400)]
vsub.s32 Q4, Q1, Q3
// Release input[100] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r14,#(416)]
// Release input[356] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r12,#(432)]
// Release input[612] from Q3
// input[104]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 104)]
// input[360]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 108)]
// input[616]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 112)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r0,#(416)]
vsub.s32 Q4, Q1, Q3
// Release input[104] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r14,#(432)]
// Release input[360] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r12,#(448)]
// Release input[616] from Q3
// input[108]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 108)]
// input[364]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 112)]
// input[620]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 116)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r0,#(432)]
vsub.s32 Q4, Q1, Q3
// Release input[108] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r14,#(448)]
// Release input[364] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r12,#(464)]
// Release input[620] from Q3
// input[112]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 112)]
// input[368]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 116)]
// input[624]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 120)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r0,#(448)]
vsub.s32 Q4, Q1, Q3
// Release input[112] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r14,#(464)]
// Release input[368] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r12,#(480)]
// Release input[624] from Q3
// input[116]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 116)]
// input[372]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 120)]
// input[628]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 124)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r0,#(464)]
vsub.s32 Q4, Q1, Q3
// Release input[116] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r14,#(480)]
// Release input[372] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r12,#(496)]
// Release input[628] from Q3
// input[120]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 120)]
// input[376]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 124)]
// input[632]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -124)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r0,#(480)]
vsub.s32 Q4, Q1, Q3
// Release input[120] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r14,#(496)]
// Release input[376] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r11,#(-496)]
// Release input[632] from Q3
// input[124]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 124)]
// input[380]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -124)]
// input[636]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -120)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r0,#(496)]
vsub.s32 Q4, Q1, Q3
// Release input[124] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r12,#(-496)]
// Release input[380] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r11,#(-480)]
// Release input[636] from Q3
// input[128]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -124)]
// input[384]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -120)]
// input[640]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -116)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r14,#(-496)]
vsub.s32 Q4, Q1, Q3
// Release input[128] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r12,#(-480)]
// Release input[384] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r11,#(-464)]
// Release input[640] from Q3
// input[132]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -120)]
// input[388]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -116)]
// input[644]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -112)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r14,#(-480)]
vsub.s32 Q4, Q1, Q3
// Release input[132] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r12,#(-464)]
// Release input[388] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r11,#(-448)]
// Release input[644] from Q3
// input[136]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -116)]
// input[392]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -112)]
// input[648]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -108)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r14,#(-464)]
vsub.s32 Q4, Q1, Q3
// Release input[136] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r12,#(-448)]
// Release input[392] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r11,#(-432)]
// Release input[648] from Q3
// input[140]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -112)]
// input[396]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -108)]
// input[652]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -104)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r14,#(-448)]
vsub.s32 Q4, Q1, Q3
// Release input[140] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r12,#(-432)]
// Release input[396] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r11,#(-416)]
// Release input[652] from Q3
// input[144]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -108)]
// input[400]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -104)]
// input[656]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -100)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r14,#(-432)]
vsub.s32 Q4, Q1, Q3
// Release input[144] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r12,#(-416)]
// Release input[400] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r11,#(-400)]
// Release input[656] from Q3
// input[148]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -104)]
// input[404]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -100)]
// input[660]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -96)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r14,#(-416)]
vsub.s32 Q4, Q1, Q3
// Release input[148] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r12,#(-400)]
// Release input[404] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r11,#(-384)]
// Release input[660] from Q3
// input[152]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -100)]
// input[408]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -96)]
// input[664]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -92)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r14,#(-400)]
vsub.s32 Q4, Q1, Q3
// Release input[152] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r12,#(-384)]
// Release input[408] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r11,#(-368)]
// Release input[664] from Q3
// input[156]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -96)]
// input[412]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -92)]
// input[668]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -88)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r14,#(-384)]
vsub.s32 Q4, Q1, Q3
// Release input[156] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r12,#(-368)]
// Release input[412] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r11,#(-352)]
// Release input[668] from Q3
// input[160]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -92)]
// input[416]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -88)]
// input[672]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -84)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r14,#(-368)]
vsub.s32 Q4, Q1, Q3
// Release input[160] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r12,#(-352)]
// Release input[416] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r11,#(-336)]
// Release input[672] from Q3
// input[164]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -88)]
// input[420]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -84)]
// input[676]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -80)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r14,#(-352)]
vsub.s32 Q4, Q1, Q3
// Release input[164] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r12,#(-336)]
// Release input[420] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r11,#(-320)]
// Release input[676] from Q3
// input[168]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -84)]
// input[424]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -80)]
// input[680]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -76)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r14,#(-336)]
vsub.s32 Q4, Q1, Q3
// Release input[168] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r12,#(-320)]
// Release input[424] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r11,#(-304)]
// Release input[680] from Q3
// input[172]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -80)]
// input[428]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -76)]
// input[684]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -72)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r14,#(-320)]
vsub.s32 Q4, Q1, Q3
// Release input[172] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r12,#(-304)]
// Release input[428] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r11,#(-288)]
// Release input[684] from Q3
// input[176]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -76)]
// input[432]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -72)]
// input[688]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -68)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r14,#(-304)]
vsub.s32 Q4, Q1, Q3
// Release input[176] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r12,#(-288)]
// Release input[432] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r11,#(-272)]
// Release input[688] from Q3
// input[180]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -72)]
// input[436]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -68)]
// input[692]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -64)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r14,#(-288)]
vsub.s32 Q4, Q1, Q3
// Release input[180] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r12,#(-272)]
// Release input[436] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r11,#(-256)]
// Release input[692] from Q3
// input[184]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -68)]
// input[440]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -64)]
// input[696]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -60)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r14,#(-272)]
vsub.s32 Q4, Q1, Q3
// Release input[184] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r12,#(-256)]
// Release input[440] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r11,#(-240)]
// Release input[696] from Q3
// input[188]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -64)]
// input[444]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -60)]
// input[700]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -56)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r14,#(-256)]
vsub.s32 Q4, Q1, Q3
// Release input[188] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r12,#(-240)]
// Release input[444] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r11,#(-224)]
// Release input[700] from Q3
// input[192]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -60)]
// input[448]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -56)]
// input[704]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -52)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r14,#(-240)]
vsub.s32 Q4, Q1, Q3
// Release input[192] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r12,#(-224)]
// Release input[448] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r11,#(-208)]
// Release input[704] from Q3
// input[196]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -56)]
// input[452]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -52)]
// input[708]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -48)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r14,#(-224)]
vsub.s32 Q4, Q1, Q3
// Release input[196] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r12,#(-208)]
// Release input[452] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r11,#(-192)]
// Release input[708] from Q3
// input[200]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -52)]
// input[456]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -48)]
// input[712]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -44)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r14,#(-208)]
vsub.s32 Q4, Q1, Q3
// Release input[200] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r12,#(-192)]
// Release input[456] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r11,#(-176)]
// Release input[712] from Q3
// input[204]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -48)]
// input[460]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -44)]
// input[716]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -40)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r14,#(-192)]
vsub.s32 Q4, Q1, Q3
// Release input[204] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r12,#(-176)]
// Release input[460] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r11,#(-160)]
// Release input[716] from Q3
// input[208]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -44)]
// input[464]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -40)]
// input[720]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -36)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r14,#(-176)]
vsub.s32 Q4, Q1, Q3
// Release input[208] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r12,#(-160)]
// Release input[464] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r11,#(-144)]
// Release input[720] from Q3
// input[212]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -40)]
// input[468]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -36)]
// input[724]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -32)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r14,#(-160)]
vsub.s32 Q4, Q1, Q3
// Release input[212] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r12,#(-144)]
// Release input[468] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r11,#(-128)]
// Release input[724] from Q3
// input[216]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -36)]
// input[472]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -32)]
// input[728]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -28)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r14,#(-144)]
vsub.s32 Q4, Q1, Q3
// Release input[216] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r12,#(-128)]
// Release input[472] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r11,#(-112)]
// Release input[728] from Q3
// input[220]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -32)]
// input[476]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -28)]
// input[732]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -24)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r14,#(-128)]
vsub.s32 Q4, Q1, Q3
// Release input[220] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r12,#(-112)]
// Release input[476] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r11,#(-96)]
// Release input[732] from Q3
// input[224]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -28)]
// input[480]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -24)]
// input[736]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -20)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r14,#(-112)]
vsub.s32 Q4, Q1, Q3
// Release input[224] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r12,#(-96)]
// Release input[480] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r11,#(-80)]
// Release input[736] from Q3
// input[228]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -24)]
// input[484]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -20)]
// input[740]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -16)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r14,#(-96)]
vsub.s32 Q4, Q1, Q3
// Release input[228] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r12,#(-80)]
// Release input[484] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r11,#(-64)]
// Release input[740] from Q3
// input[232]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -20)]
// input[488]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -16)]
// input[744]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -12)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r14,#(-80)]
vsub.s32 Q4, Q1, Q3
// Release input[232] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r12,#(-64)]
// Release input[488] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r11,#(-48)]
// Release input[744] from Q3
// input[236]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -16)]
// input[492]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -12)]
// input[748]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -8)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r14,#(-64)]
vsub.s32 Q4, Q1, Q3
// Release input[236] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r12,#(-48)]
// Release input[492] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r11,#(-32)]
// Release input[748] from Q3
// input[240]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -12)]
// input[496]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -8)]
// input[752]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -4)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r14,#(-48)]
vsub.s32 Q4, Q1, Q3
// Release input[240] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r12,#(-32)]
// Release input[496] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r11,#(-16)]
// Release input[752] from Q3
// input[244]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -8)]
// input[500]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -4)]
// input[756]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * 0)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r14,#(-32)]
vsub.s32 Q4, Q1, Q3
// Release input[244] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r12,#(-16)]
// Release input[500] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r11,#(0)]
// Release input[756] from Q3
// input[248]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -4)]
// input[504]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 0)]
// input[760]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * 4)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r14,#(-16)]
vsub.s32 Q4, Q1, Q3
// Release input[248] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r12,#(0)]
// Release input[504] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r11,#(16)]
// Release input[760] from Q3
// input[252]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 0)]
// input[508]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 4)]
// input[764]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * 8)]
vadd.s32 Q4, Q1, Q2
vadd.s32 Q4, Q4, Q3
vstrw.u32 Q4, [r14,#(0)]
vsub.s32 Q4, Q1, Q3
// Release input[252] from Q1
vsub.s32 Q1, Q2, Q3
vqrdmulh.s32 Q5, Q1, r8
vmul.u32 Q6, Q1, r7
vqrdmlah.s32 Q5, Q6, r10
vadd.s32 Q2, Q4, Q5
vstrw.u32 Q2, [r12,#(16)]
// Release input[508] from Q2
vsub.s32 Q3, Q4, Q5
vsub.s32 Q3, Q3, Q1
vstrw.u32 Q3, [r11,#(32)]
// Release input[764] from Q3
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[192]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -60)]
vqrdmulh.s32 Q2, Q1, r8
// input[128]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -124)]
vmul.u32 Q1, Q1, r7
// input[64]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 64)]
vqrdmlah.s32 Q2, Q1, r10
vqrdmulh.s32 Q5, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q5, Q3, r10
// input[0]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 0)]
vqrdmulh.s32 Q6, Q1, r4
vsub.s32 Q3, Q2, Q5
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q5
vqrdmlah.s32 Q6, Q1, r10
// input[196]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * -56)]
vqrdmulh.s32 Q7, Q4, r6
vsub.s32 Q1, Q3, Q6
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q6
vstrw.u32 Q1, [r14,#(-240)]
// Release input[192] from Q1
vqrdmlah.s32 Q7, Q4, r10
vstrw.u32 Q3, [r14,#(-496)]
// Release input[128] from Q3
vsub.s32 Q4, Q2, Q7
vstrw.u32 Q4, [r0,#(256)]
// Release input[64] from Q4
vadd.s32 Q2, Q2, Q7
// input[196]: Already loaded as Q5
vqrdmulh.s32 Q1, Q5, r8
// input[132]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -120)]
vmul.u32 Q5, Q5, r7
// input[68]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 68)]
vqrdmlah.s32 Q1, Q5, r10
vstrw.u32 Q2, [r0,#(0)]
// Release input[0] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q5, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[4]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 4)]
vqrdmulh.s32 Q6, Q5, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q5, Q5, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q6, Q5, r10
// input[200]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -52)]
vqrdmulh.s32 Q7, Q4, r6
vsub.s32 Q5, Q3, Q6
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q6
vstrw.u32 Q5, [r14,#(-224)]
// Release input[196] from Q5
vqrdmlah.s32 Q7, Q4, r10
vstrw.u32 Q3, [r14,#(-480)]
// Release input[132] from Q3
vsub.s32 Q4, Q1, Q7
vstrw.u32 Q4, [r0,#(272)]
// Release input[68] from Q4
vadd.s32 Q1, Q1, Q7
// input[200]: Already loaded as Q2
vqrdmulh.s32 Q3, Q2, r8
// input[136]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -116)]
vmul.u32 Q2, Q2, r7
// input[72]: Load as Q5
vldrw.u32 Q5, [r0, #(4 * 72)]
vqrdmlah.s32 Q3, Q2, r10
vstrw.u32 Q1, [r0,#(16)]
// Release input[4] from Q1
vqrdmulh.s32 Q1, Q4, r8
vsub.s32 Q2, Q5, Q3
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q3
vqrdmlah.s32 Q1, Q4, r10
// input[8]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 8)]
vqrdmulh.s32 Q6, Q2, r4
vsub.s32 Q4, Q3, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q3, Q3, Q1
vqrdmlah.s32 Q6, Q2, r10
// input[204]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -48)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q2, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q2, [r14,#(-208)]
// Release input[200] from Q2
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r14,#(-464)]
// Release input[136] from Q4
vsub.s32 Q5, Q3, Q7
vstrw.u32 Q5, [r0,#(288)]
// Release input[72] from Q5
vadd.s32 Q3, Q3, Q7
// input[204]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[140]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -112)]
vmul.u32 Q1, Q1, r7
// input[76]: Load as Q5
vldrw.u32 Q5, [r0, #(4 * 76)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q3, [r0,#(32)]
// Release input[8] from Q3
vqrdmulh.s32 Q3, Q4, r8
vsub.s32 Q1, Q5, Q2
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q2
vqrdmlah.s32 Q3, Q4, r10
// input[12]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 12)]
vqrdmulh.s32 Q6, Q1, r4
vsub.s32 Q4, Q2, Q3
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q3
vqrdmlah.s32 Q6, Q1, r10
// input[208]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -44)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q1, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q1, [r14,#(-192)]
// Release input[204] from Q1
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r14,#(-448)]
// Release input[140] from Q4
vsub.s32 Q5, Q2, Q7
vstrw.u32 Q5, [r0,#(304)]
// Release input[76] from Q5
vadd.s32 Q2, Q2, Q7
// input[208]: Already loaded as Q3
vqrdmulh.s32 Q1, Q3, r8
// input[144]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -108)]
vmul.u32 Q3, Q3, r7
// input[80]: Load as Q5
vldrw.u32 Q5, [r0, #(4 * 80)]
vqrdmlah.s32 Q1, Q3, r10
vstrw.u32 Q2, [r0,#(48)]
// Release input[12] from Q2
vqrdmulh.s32 Q2, Q4, r8
vsub.s32 Q3, Q5, Q1
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q1
vqrdmlah.s32 Q2, Q4, r10
// input[16]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 16)]
vqrdmulh.s32 Q6, Q3, r4
vsub.s32 Q4, Q1, Q2
vmul.u32 Q3, Q3, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q6, Q3, r10
// input[212]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -40)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q3, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q3, [r14,#(-176)]
// Release input[208] from Q3
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r14,#(-432)]
// Release input[144] from Q4
vsub.s32 Q5, Q1, Q7
vstrw.u32 Q5, [r0,#(320)]
// Release input[80] from Q5
vadd.s32 Q1, Q1, Q7
// input[212]: Already loaded as Q2
vqrdmulh.s32 Q3, Q2, r8
// input[148]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -104)]
vmul.u32 Q2, Q2, r7
// input[84]: Load as Q5
vldrw.u32 Q5, [r0, #(4 * 84)]
vqrdmlah.s32 Q3, Q2, r10
vstrw.u32 Q1, [r0,#(64)]
// Release input[16] from Q1
vqrdmulh.s32 Q1, Q4, r8
vsub.s32 Q2, Q5, Q3
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q3
vqrdmlah.s32 Q1, Q4, r10
// input[20]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 20)]
vqrdmulh.s32 Q6, Q2, r4
vsub.s32 Q4, Q3, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q3, Q3, Q1
vqrdmlah.s32 Q6, Q2, r10
// input[216]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -36)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q2, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q2, [r14,#(-160)]
// Release input[212] from Q2
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r14,#(-416)]
// Release input[148] from Q4
vsub.s32 Q5, Q3, Q7
vstrw.u32 Q5, [r0,#(336)]
// Release input[84] from Q5
vadd.s32 Q3, Q3, Q7
// input[216]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[152]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -100)]
vmul.u32 Q1, Q1, r7
// input[88]: Load as Q5
vldrw.u32 Q5, [r0, #(4 * 88)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q3, [r0,#(80)]
// Release input[20] from Q3
vqrdmulh.s32 Q3, Q4, r8
vsub.s32 Q1, Q5, Q2
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q2
vqrdmlah.s32 Q3, Q4, r10
// input[24]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 24)]
vqrdmulh.s32 Q6, Q1, r4
vsub.s32 Q4, Q2, Q3
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q3
vqrdmlah.s32 Q6, Q1, r10
// input[220]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -32)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q1, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q1, [r14,#(-144)]
// Release input[216] from Q1
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r14,#(-400)]
// Release input[152] from Q4
vsub.s32 Q5, Q2, Q7
vstrw.u32 Q5, [r0,#(352)]
// Release input[88] from Q5
vadd.s32 Q2, Q2, Q7
// input[220]: Already loaded as Q3
vqrdmulh.s32 Q1, Q3, r8
// input[156]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -96)]
vmul.u32 Q3, Q3, r7
// input[92]: Load as Q5
vldrw.u32 Q5, [r0, #(4 * 92)]
vqrdmlah.s32 Q1, Q3, r10
vstrw.u32 Q2, [r0,#(96)]
// Release input[24] from Q2
vqrdmulh.s32 Q2, Q4, r8
vsub.s32 Q3, Q5, Q1
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q1
vqrdmlah.s32 Q2, Q4, r10
// input[28]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 28)]
vqrdmulh.s32 Q6, Q3, r4
vsub.s32 Q4, Q1, Q2
vmul.u32 Q3, Q3, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q6, Q3, r10
// input[224]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -28)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q3, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q3, [r14,#(-128)]
// Release input[220] from Q3
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r14,#(-384)]
// Release input[156] from Q4
vsub.s32 Q5, Q1, Q7
vstrw.u32 Q5, [r0,#(368)]
// Release input[92] from Q5
vadd.s32 Q1, Q1, Q7
// input[224]: Already loaded as Q2
vqrdmulh.s32 Q3, Q2, r8
// input[160]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -92)]
vmul.u32 Q2, Q2, r7
// input[96]: Load as Q5
vldrw.u32 Q5, [r0, #(4 * 96)]
vqrdmlah.s32 Q3, Q2, r10
vstrw.u32 Q1, [r0,#(112)]
// Release input[28] from Q1
vqrdmulh.s32 Q1, Q4, r8
vsub.s32 Q2, Q5, Q3
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q3
vqrdmlah.s32 Q1, Q4, r10
// input[32]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 32)]
vqrdmulh.s32 Q6, Q2, r4
vsub.s32 Q4, Q3, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q3, Q3, Q1
vqrdmlah.s32 Q6, Q2, r10
// input[228]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -24)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q2, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q2, [r14,#(-112)]
// Release input[224] from Q2
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r14,#(-368)]
// Release input[160] from Q4
vsub.s32 Q5, Q3, Q7
vstrw.u32 Q5, [r0,#(384)]
// Release input[96] from Q5
vadd.s32 Q3, Q3, Q7
// input[228]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[164]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -88)]
vmul.u32 Q1, Q1, r7
// input[100]: Load as Q5
vldrw.u32 Q5, [r0, #(4 * 100)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q3, [r0,#(128)]
// Release input[32] from Q3
vqrdmulh.s32 Q3, Q4, r8
vsub.s32 Q1, Q5, Q2
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q2
vqrdmlah.s32 Q3, Q4, r10
// input[36]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 36)]
vqrdmulh.s32 Q6, Q1, r4
vsub.s32 Q4, Q2, Q3
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q3
vqrdmlah.s32 Q6, Q1, r10
// input[232]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -20)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q1, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q1, [r14,#(-96)]
// Release input[228] from Q1
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r14,#(-352)]
// Release input[164] from Q4
vsub.s32 Q5, Q2, Q7
vstrw.u32 Q5, [r0,#(400)]
// Release input[100] from Q5
vadd.s32 Q2, Q2, Q7
// input[232]: Already loaded as Q3
vqrdmulh.s32 Q1, Q3, r8
// input[168]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -84)]
vmul.u32 Q3, Q3, r7
// input[104]: Load as Q5
vldrw.u32 Q5, [r0, #(4 * 104)]
vqrdmlah.s32 Q1, Q3, r10
vstrw.u32 Q2, [r0,#(144)]
// Release input[36] from Q2
vqrdmulh.s32 Q2, Q4, r8
vsub.s32 Q3, Q5, Q1
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q1
vqrdmlah.s32 Q2, Q4, r10
// input[40]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 40)]
vqrdmulh.s32 Q6, Q3, r4
vsub.s32 Q4, Q1, Q2
vmul.u32 Q3, Q3, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q6, Q3, r10
// input[236]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -16)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q3, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q3, [r14,#(-80)]
// Release input[232] from Q3
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r14,#(-336)]
// Release input[168] from Q4
vsub.s32 Q5, Q1, Q7
vstrw.u32 Q5, [r0,#(416)]
// Release input[104] from Q5
vadd.s32 Q1, Q1, Q7
// input[236]: Already loaded as Q2
vqrdmulh.s32 Q3, Q2, r8
// input[172]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -80)]
vmul.u32 Q2, Q2, r7
// input[108]: Load as Q5
vldrw.u32 Q5, [r0, #(4 * 108)]
vqrdmlah.s32 Q3, Q2, r10
vstrw.u32 Q1, [r0,#(160)]
// Release input[40] from Q1
vqrdmulh.s32 Q1, Q4, r8
vsub.s32 Q2, Q5, Q3
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q3
vqrdmlah.s32 Q1, Q4, r10
// input[44]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 44)]
vqrdmulh.s32 Q6, Q2, r4
vsub.s32 Q4, Q3, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q3, Q3, Q1
vqrdmlah.s32 Q6, Q2, r10
// input[240]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -12)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q2, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q2, [r14,#(-64)]
// Release input[236] from Q2
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r14,#(-320)]
// Release input[172] from Q4
vsub.s32 Q5, Q3, Q7
vstrw.u32 Q5, [r0,#(432)]
// Release input[108] from Q5
vadd.s32 Q3, Q3, Q7
// input[240]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[176]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -76)]
vmul.u32 Q1, Q1, r7
// input[112]: Load as Q5
vldrw.u32 Q5, [r0, #(4 * 112)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q3, [r0,#(176)]
// Release input[44] from Q3
vqrdmulh.s32 Q3, Q4, r8
vsub.s32 Q1, Q5, Q2
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q2
vqrdmlah.s32 Q3, Q4, r10
// input[48]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 48)]
vqrdmulh.s32 Q6, Q1, r4
vsub.s32 Q4, Q2, Q3
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q3
vqrdmlah.s32 Q6, Q1, r10
// input[244]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -8)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q1, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q1, [r14,#(-48)]
// Release input[240] from Q1
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r14,#(-304)]
// Release input[176] from Q4
vsub.s32 Q5, Q2, Q7
vstrw.u32 Q5, [r0,#(448)]
// Release input[112] from Q5
vadd.s32 Q2, Q2, Q7
// input[244]: Already loaded as Q3
vqrdmulh.s32 Q1, Q3, r8
// input[180]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -72)]
vmul.u32 Q3, Q3, r7
// input[116]: Load as Q5
vldrw.u32 Q5, [r0, #(4 * 116)]
vqrdmlah.s32 Q1, Q3, r10
vstrw.u32 Q2, [r0,#(192)]
// Release input[48] from Q2
vqrdmulh.s32 Q2, Q4, r8
vsub.s32 Q3, Q5, Q1
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q1
vqrdmlah.s32 Q2, Q4, r10
// input[52]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 52)]
vqrdmulh.s32 Q6, Q3, r4
vsub.s32 Q4, Q1, Q2
vmul.u32 Q3, Q3, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q6, Q3, r10
// input[248]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -4)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q3, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q3, [r14,#(-32)]
// Release input[244] from Q3
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r14,#(-288)]
// Release input[180] from Q4
vsub.s32 Q5, Q1, Q7
vstrw.u32 Q5, [r0,#(464)]
// Release input[116] from Q5
vadd.s32 Q1, Q1, Q7
// input[248]: Already loaded as Q2
vqrdmulh.s32 Q3, Q2, r8
// input[184]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -68)]
vmul.u32 Q2, Q2, r7
// input[120]: Load as Q5
vldrw.u32 Q5, [r0, #(4 * 120)]
vqrdmlah.s32 Q3, Q2, r10
vstrw.u32 Q1, [r0,#(208)]
// Release input[52] from Q1
vqrdmulh.s32 Q1, Q4, r8
vsub.s32 Q2, Q5, Q3
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q3
vqrdmlah.s32 Q1, Q4, r10
// input[56]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 56)]
vqrdmulh.s32 Q6, Q2, r4
vsub.s32 Q4, Q3, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q3, Q3, Q1
vqrdmlah.s32 Q6, Q2, r10
// input[252]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 0)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q2, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q2, [r14,#(-16)]
// Release input[248] from Q2
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r14,#(-272)]
// Release input[184] from Q4
vsub.s32 Q5, Q3, Q7
vstrw.u32 Q5, [r0,#(480)]
// Release input[120] from Q5
vadd.s32 Q3, Q3, Q7
// input[252]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[188]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -64)]
vmul.u32 Q1, Q1, r7
// input[124]: Load as Q5
vldrw.u32 Q5, [r0, #(4 * 124)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q3, [r0,#(224)]
// Release input[56] from Q3
vqrdmulh.s32 Q3, Q4, r8
vsub.s32 Q1, Q5, Q2
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q2
vqrdmlah.s32 Q3, Q4, r10
// input[60]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 60)]
vqrdmulh.s32 Q6, Q1, r4
vsub.s32 Q4, Q2, Q3
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q3
vqrdmlah.s32 Q6, Q1, r10
// input[448]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -56)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q1, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q1, [r14,#(0)]
// Release input[252] from Q1
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r14,#(-256)]
// Release input[188] from Q4
vsub.s32 Q5, Q2, Q7
vstrw.u32 Q5, [r0,#(496)]
// Release input[124] from Q5
vadd.s32 Q2, Q2, Q7
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[448]: Already loaded as Q3
vqrdmulh.s32 Q1, Q3, r8
// input[384]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -120)]
vmul.u32 Q3, Q3, r7
// input[320]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * 68)]
vqrdmlah.s32 Q1, Q3, r10
vstrw.u32 Q2, [r0,#(240)]
// Release input[60] from Q2
vqrdmulh.s32 Q2, Q4, r8
vsub.s32 Q3, Q5, Q1
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q1
vqrdmlah.s32 Q2, Q4, r10
// input[256]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 4)]
vqrdmulh.s32 Q6, Q3, r4
vsub.s32 Q4, Q1, Q2
vmul.u32 Q3, Q3, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q6, Q3, r10
// input[452]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -52)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q3, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q3, [r12,#(-224)]
// Release input[448] from Q3
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r12,#(-480)]
// Release input[384] from Q4
vsub.s32 Q5, Q1, Q7
vstrw.u32 Q5, [r14,#(272)]
// Release input[320] from Q5
vadd.s32 Q1, Q1, Q7
// input[452]: Already loaded as Q2
vqrdmulh.s32 Q3, Q2, r8
// input[388]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -116)]
vmul.u32 Q2, Q2, r7
// input[324]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * 72)]
vqrdmlah.s32 Q3, Q2, r10
vstrw.u32 Q1, [r14,#(16)]
// Release input[256] from Q1
vqrdmulh.s32 Q1, Q4, r8
vsub.s32 Q2, Q5, Q3
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q3
vqrdmlah.s32 Q1, Q4, r10
// input[260]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 8)]
vqrdmulh.s32 Q6, Q2, r4
vsub.s32 Q4, Q3, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q3, Q3, Q1
vqrdmlah.s32 Q6, Q2, r10
// input[456]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -48)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q2, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q2, [r12,#(-208)]
// Release input[452] from Q2
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r12,#(-464)]
// Release input[388] from Q4
vsub.s32 Q5, Q3, Q7
vstrw.u32 Q5, [r14,#(288)]
// Release input[324] from Q5
vadd.s32 Q3, Q3, Q7
// input[456]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[392]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -112)]
vmul.u32 Q1, Q1, r7
// input[328]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * 76)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q3, [r14,#(32)]
// Release input[260] from Q3
vqrdmulh.s32 Q3, Q4, r8
vsub.s32 Q1, Q5, Q2
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q2
vqrdmlah.s32 Q3, Q4, r10
// input[264]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 12)]
vqrdmulh.s32 Q6, Q1, r4
vsub.s32 Q4, Q2, Q3
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q3
vqrdmlah.s32 Q6, Q1, r10
// input[460]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -44)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q1, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q1, [r12,#(-192)]
// Release input[456] from Q1
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r12,#(-448)]
// Release input[392] from Q4
vsub.s32 Q5, Q2, Q7
vstrw.u32 Q5, [r14,#(304)]
// Release input[328] from Q5
vadd.s32 Q2, Q2, Q7
// input[460]: Already loaded as Q3
vqrdmulh.s32 Q1, Q3, r8
// input[396]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -108)]
vmul.u32 Q3, Q3, r7
// input[332]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * 80)]
vqrdmlah.s32 Q1, Q3, r10
vstrw.u32 Q2, [r14,#(48)]
// Release input[264] from Q2
vqrdmulh.s32 Q2, Q4, r8
vsub.s32 Q3, Q5, Q1
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q1
vqrdmlah.s32 Q2, Q4, r10
// input[268]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 16)]
vqrdmulh.s32 Q6, Q3, r4
vsub.s32 Q4, Q1, Q2
vmul.u32 Q3, Q3, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q6, Q3, r10
// input[464]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -40)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q3, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q3, [r12,#(-176)]
// Release input[460] from Q3
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r12,#(-432)]
// Release input[396] from Q4
vsub.s32 Q5, Q1, Q7
vstrw.u32 Q5, [r14,#(320)]
// Release input[332] from Q5
vadd.s32 Q1, Q1, Q7
// input[464]: Already loaded as Q2
vqrdmulh.s32 Q3, Q2, r8
// input[400]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -104)]
vmul.u32 Q2, Q2, r7
// input[336]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * 84)]
vqrdmlah.s32 Q3, Q2, r10
vstrw.u32 Q1, [r14,#(64)]
// Release input[268] from Q1
vqrdmulh.s32 Q1, Q4, r8
vsub.s32 Q2, Q5, Q3
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q3
vqrdmlah.s32 Q1, Q4, r10
// input[272]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 20)]
vqrdmulh.s32 Q6, Q2, r4
vsub.s32 Q4, Q3, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q3, Q3, Q1
vqrdmlah.s32 Q6, Q2, r10
// input[468]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -36)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q2, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q2, [r12,#(-160)]
// Release input[464] from Q2
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r12,#(-416)]
// Release input[400] from Q4
vsub.s32 Q5, Q3, Q7
vstrw.u32 Q5, [r14,#(336)]
// Release input[336] from Q5
vadd.s32 Q3, Q3, Q7
// input[468]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[404]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -100)]
vmul.u32 Q1, Q1, r7
// input[340]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * 88)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q3, [r14,#(80)]
// Release input[272] from Q3
vqrdmulh.s32 Q3, Q4, r8
vsub.s32 Q1, Q5, Q2
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q2
vqrdmlah.s32 Q3, Q4, r10
// input[276]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 24)]
vqrdmulh.s32 Q6, Q1, r4
vsub.s32 Q4, Q2, Q3
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q3
vqrdmlah.s32 Q6, Q1, r10
// input[472]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -32)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q1, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q1, [r12,#(-144)]
// Release input[468] from Q1
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r12,#(-400)]
// Release input[404] from Q4
vsub.s32 Q5, Q2, Q7
vstrw.u32 Q5, [r14,#(352)]
// Release input[340] from Q5
vadd.s32 Q2, Q2, Q7
// input[472]: Already loaded as Q3
vqrdmulh.s32 Q1, Q3, r8
// input[408]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -96)]
vmul.u32 Q3, Q3, r7
// input[344]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * 92)]
vqrdmlah.s32 Q1, Q3, r10
vstrw.u32 Q2, [r14,#(96)]
// Release input[276] from Q2
vqrdmulh.s32 Q2, Q4, r8
vsub.s32 Q3, Q5, Q1
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q1
vqrdmlah.s32 Q2, Q4, r10
// input[280]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 28)]
vqrdmulh.s32 Q6, Q3, r4
vsub.s32 Q4, Q1, Q2
vmul.u32 Q3, Q3, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q6, Q3, r10
// input[476]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -28)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q3, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q3, [r12,#(-128)]
// Release input[472] from Q3
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r12,#(-384)]
// Release input[408] from Q4
vsub.s32 Q5, Q1, Q7
vstrw.u32 Q5, [r14,#(368)]
// Release input[344] from Q5
vadd.s32 Q1, Q1, Q7
// input[476]: Already loaded as Q2
vqrdmulh.s32 Q3, Q2, r8
// input[412]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -92)]
vmul.u32 Q2, Q2, r7
// input[348]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * 96)]
vqrdmlah.s32 Q3, Q2, r10
vstrw.u32 Q1, [r14,#(112)]
// Release input[280] from Q1
vqrdmulh.s32 Q1, Q4, r8
vsub.s32 Q2, Q5, Q3
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q3
vqrdmlah.s32 Q1, Q4, r10
// input[284]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 32)]
vqrdmulh.s32 Q6, Q2, r4
vsub.s32 Q4, Q3, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q3, Q3, Q1
vqrdmlah.s32 Q6, Q2, r10
// input[480]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -24)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q2, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q2, [r12,#(-112)]
// Release input[476] from Q2
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r12,#(-368)]
// Release input[412] from Q4
vsub.s32 Q5, Q3, Q7
vstrw.u32 Q5, [r14,#(384)]
// Release input[348] from Q5
vadd.s32 Q3, Q3, Q7
// input[480]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[416]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -88)]
vmul.u32 Q1, Q1, r7
// input[352]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * 100)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q3, [r14,#(128)]
// Release input[284] from Q3
vqrdmulh.s32 Q3, Q4, r8
vsub.s32 Q1, Q5, Q2
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q2
vqrdmlah.s32 Q3, Q4, r10
// input[288]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 36)]
vqrdmulh.s32 Q6, Q1, r4
vsub.s32 Q4, Q2, Q3
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q3
vqrdmlah.s32 Q6, Q1, r10
// input[484]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -20)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q1, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q1, [r12,#(-96)]
// Release input[480] from Q1
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r12,#(-352)]
// Release input[416] from Q4
vsub.s32 Q5, Q2, Q7
vstrw.u32 Q5, [r14,#(400)]
// Release input[352] from Q5
vadd.s32 Q2, Q2, Q7
// input[484]: Already loaded as Q3
vqrdmulh.s32 Q1, Q3, r8
// input[420]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -84)]
vmul.u32 Q3, Q3, r7
// input[356]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * 104)]
vqrdmlah.s32 Q1, Q3, r10
vstrw.u32 Q2, [r14,#(144)]
// Release input[288] from Q2
vqrdmulh.s32 Q2, Q4, r8
vsub.s32 Q3, Q5, Q1
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q1
vqrdmlah.s32 Q2, Q4, r10
// input[292]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 40)]
vqrdmulh.s32 Q6, Q3, r4
vsub.s32 Q4, Q1, Q2
vmul.u32 Q3, Q3, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q6, Q3, r10
// input[488]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -16)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q3, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q3, [r12,#(-80)]
// Release input[484] from Q3
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r12,#(-336)]
// Release input[420] from Q4
vsub.s32 Q5, Q1, Q7
vstrw.u32 Q5, [r14,#(416)]
// Release input[356] from Q5
vadd.s32 Q1, Q1, Q7
// input[488]: Already loaded as Q2
vqrdmulh.s32 Q3, Q2, r8
// input[424]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -80)]
vmul.u32 Q2, Q2, r7
// input[360]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * 108)]
vqrdmlah.s32 Q3, Q2, r10
vstrw.u32 Q1, [r14,#(160)]
// Release input[292] from Q1
vqrdmulh.s32 Q1, Q4, r8
vsub.s32 Q2, Q5, Q3
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q3
vqrdmlah.s32 Q1, Q4, r10
// input[296]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 44)]
vqrdmulh.s32 Q6, Q2, r4
vsub.s32 Q4, Q3, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q3, Q3, Q1
vqrdmlah.s32 Q6, Q2, r10
// input[492]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -12)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q2, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q2, [r12,#(-64)]
// Release input[488] from Q2
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r12,#(-320)]
// Release input[424] from Q4
vsub.s32 Q5, Q3, Q7
vstrw.u32 Q5, [r14,#(432)]
// Release input[360] from Q5
vadd.s32 Q3, Q3, Q7
// input[492]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[428]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -76)]
vmul.u32 Q1, Q1, r7
// input[364]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * 112)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q3, [r14,#(176)]
// Release input[296] from Q3
vqrdmulh.s32 Q3, Q4, r8
vsub.s32 Q1, Q5, Q2
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q2
vqrdmlah.s32 Q3, Q4, r10
// input[300]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 48)]
vqrdmulh.s32 Q6, Q1, r4
vsub.s32 Q4, Q2, Q3
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q3
vqrdmlah.s32 Q6, Q1, r10
// input[496]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -8)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q1, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q1, [r12,#(-48)]
// Release input[492] from Q1
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r12,#(-304)]
// Release input[428] from Q4
vsub.s32 Q5, Q2, Q7
vstrw.u32 Q5, [r14,#(448)]
// Release input[364] from Q5
vadd.s32 Q2, Q2, Q7
// input[496]: Already loaded as Q3
vqrdmulh.s32 Q1, Q3, r8
// input[432]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -72)]
vmul.u32 Q3, Q3, r7
// input[368]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * 116)]
vqrdmlah.s32 Q1, Q3, r10
vstrw.u32 Q2, [r14,#(192)]
// Release input[300] from Q2
vqrdmulh.s32 Q2, Q4, r8
vsub.s32 Q3, Q5, Q1
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q1
vqrdmlah.s32 Q2, Q4, r10
// input[304]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 52)]
vqrdmulh.s32 Q6, Q3, r4
vsub.s32 Q4, Q1, Q2
vmul.u32 Q3, Q3, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q6, Q3, r10
// input[500]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -4)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q3, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q3, [r12,#(-32)]
// Release input[496] from Q3
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r12,#(-288)]
// Release input[432] from Q4
vsub.s32 Q5, Q1, Q7
vstrw.u32 Q5, [r14,#(464)]
// Release input[368] from Q5
vadd.s32 Q1, Q1, Q7
// input[500]: Already loaded as Q2
vqrdmulh.s32 Q3, Q2, r8
// input[436]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -68)]
vmul.u32 Q2, Q2, r7
// input[372]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * 120)]
vqrdmlah.s32 Q3, Q2, r10
vstrw.u32 Q1, [r14,#(208)]
// Release input[304] from Q1
vqrdmulh.s32 Q1, Q4, r8
vsub.s32 Q2, Q5, Q3
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q3
vqrdmlah.s32 Q1, Q4, r10
// input[308]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 56)]
vqrdmulh.s32 Q6, Q2, r4
vsub.s32 Q4, Q3, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q3, Q3, Q1
vqrdmlah.s32 Q6, Q2, r10
// input[504]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 0)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q2, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q2, [r12,#(-16)]
// Release input[500] from Q2
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r12,#(-272)]
// Release input[436] from Q4
vsub.s32 Q5, Q3, Q7
vstrw.u32 Q5, [r14,#(480)]
// Release input[372] from Q5
vadd.s32 Q3, Q3, Q7
// input[504]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[440]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -64)]
vmul.u32 Q1, Q1, r7
// input[376]: Load as Q5
vldrw.u32 Q5, [r14, #(4 * 124)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q3, [r14,#(224)]
// Release input[308] from Q3
vqrdmulh.s32 Q3, Q4, r8
vsub.s32 Q1, Q5, Q2
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q2
vqrdmlah.s32 Q3, Q4, r10
// input[312]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 60)]
vqrdmulh.s32 Q6, Q1, r4
vsub.s32 Q4, Q2, Q3
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q3
vqrdmlah.s32 Q6, Q1, r10
// input[508]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 4)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q1, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q1, [r12,#(0)]
// Release input[504] from Q1
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r12,#(-256)]
// Release input[440] from Q4
vsub.s32 Q5, Q2, Q7
vstrw.u32 Q5, [r14,#(496)]
// Release input[376] from Q5
vadd.s32 Q2, Q2, Q7
// input[508]: Already loaded as Q3
vqrdmulh.s32 Q1, Q3, r8
// input[444]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -60)]
vmul.u32 Q3, Q3, r7
// input[380]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * -124)]
vqrdmlah.s32 Q1, Q3, r10
vstrw.u32 Q2, [r14,#(240)]
// Release input[312] from Q2
vqrdmulh.s32 Q2, Q4, r8
vsub.s32 Q3, Q5, Q1
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q1
vqrdmlah.s32 Q2, Q4, r10
// input[316]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 64)]
vqrdmulh.s32 Q6, Q3, r4
vsub.s32 Q4, Q1, Q2
vmul.u32 Q3, Q3, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q6, Q3, r10
// input[704]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -52)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q3, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q3, [r12,#(16)]
// Release input[508] from Q3
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r12,#(-240)]
// Release input[444] from Q4
vsub.s32 Q5, Q1, Q7
vstrw.u32 Q5, [r12,#(-496)]
// Release input[380] from Q5
vadd.s32 Q1, Q1, Q7
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[704]: Already loaded as Q2
vqrdmulh.s32 Q3, Q2, r8
// input[640]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -116)]
vmul.u32 Q2, Q2, r7
// input[576]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * 72)]
vqrdmlah.s32 Q3, Q2, r10
vstrw.u32 Q1, [r14,#(256)]
// Release input[316] from Q1
vqrdmulh.s32 Q1, Q4, r8
vsub.s32 Q2, Q5, Q3
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q3
vqrdmlah.s32 Q1, Q4, r10
// input[512]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 8)]
vqrdmulh.s32 Q6, Q2, r4
vsub.s32 Q4, Q3, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q3, Q3, Q1
vqrdmlah.s32 Q6, Q2, r10
// input[708]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -48)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q2, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q2, [r11,#(-208)]
// Release input[704] from Q2
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r11,#(-464)]
// Release input[640] from Q4
vsub.s32 Q5, Q3, Q7
vstrw.u32 Q5, [r12,#(288)]
// Release input[576] from Q5
vadd.s32 Q3, Q3, Q7
// input[708]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[644]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -112)]
vmul.u32 Q1, Q1, r7
// input[580]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * 76)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q3, [r12,#(32)]
// Release input[512] from Q3
vqrdmulh.s32 Q3, Q4, r8
vsub.s32 Q1, Q5, Q2
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q2
vqrdmlah.s32 Q3, Q4, r10
// input[516]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 12)]
vqrdmulh.s32 Q6, Q1, r4
vsub.s32 Q4, Q2, Q3
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q3
vqrdmlah.s32 Q6, Q1, r10
// input[712]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -44)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q1, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q1, [r11,#(-192)]
// Release input[708] from Q1
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r11,#(-448)]
// Release input[644] from Q4
vsub.s32 Q5, Q2, Q7
vstrw.u32 Q5, [r12,#(304)]
// Release input[580] from Q5
vadd.s32 Q2, Q2, Q7
// input[712]: Already loaded as Q3
vqrdmulh.s32 Q1, Q3, r8
// input[648]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -108)]
vmul.u32 Q3, Q3, r7
// input[584]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * 80)]
vqrdmlah.s32 Q1, Q3, r10
vstrw.u32 Q2, [r12,#(48)]
// Release input[516] from Q2
vqrdmulh.s32 Q2, Q4, r8
vsub.s32 Q3, Q5, Q1
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q1
vqrdmlah.s32 Q2, Q4, r10
// input[520]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 16)]
vqrdmulh.s32 Q6, Q3, r4
vsub.s32 Q4, Q1, Q2
vmul.u32 Q3, Q3, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q6, Q3, r10
// input[716]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -40)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q3, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q3, [r11,#(-176)]
// Release input[712] from Q3
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r11,#(-432)]
// Release input[648] from Q4
vsub.s32 Q5, Q1, Q7
vstrw.u32 Q5, [r12,#(320)]
// Release input[584] from Q5
vadd.s32 Q1, Q1, Q7
// input[716]: Already loaded as Q2
vqrdmulh.s32 Q3, Q2, r8
// input[652]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -104)]
vmul.u32 Q2, Q2, r7
// input[588]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * 84)]
vqrdmlah.s32 Q3, Q2, r10
vstrw.u32 Q1, [r12,#(64)]
// Release input[520] from Q1
vqrdmulh.s32 Q1, Q4, r8
vsub.s32 Q2, Q5, Q3
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q3
vqrdmlah.s32 Q1, Q4, r10
// input[524]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 20)]
vqrdmulh.s32 Q6, Q2, r4
vsub.s32 Q4, Q3, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q3, Q3, Q1
vqrdmlah.s32 Q6, Q2, r10
// input[720]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -36)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q2, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q2, [r11,#(-160)]
// Release input[716] from Q2
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r11,#(-416)]
// Release input[652] from Q4
vsub.s32 Q5, Q3, Q7
vstrw.u32 Q5, [r12,#(336)]
// Release input[588] from Q5
vadd.s32 Q3, Q3, Q7
// input[720]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[656]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -100)]
vmul.u32 Q1, Q1, r7
// input[592]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * 88)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q3, [r12,#(80)]
// Release input[524] from Q3
vqrdmulh.s32 Q3, Q4, r8
vsub.s32 Q1, Q5, Q2
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q2
vqrdmlah.s32 Q3, Q4, r10
// input[528]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 24)]
vqrdmulh.s32 Q6, Q1, r4
vsub.s32 Q4, Q2, Q3
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q3
vqrdmlah.s32 Q6, Q1, r10
// input[724]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -32)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q1, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q1, [r11,#(-144)]
// Release input[720] from Q1
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r11,#(-400)]
// Release input[656] from Q4
vsub.s32 Q5, Q2, Q7
vstrw.u32 Q5, [r12,#(352)]
// Release input[592] from Q5
vadd.s32 Q2, Q2, Q7
// input[724]: Already loaded as Q3
vqrdmulh.s32 Q1, Q3, r8
// input[660]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -96)]
vmul.u32 Q3, Q3, r7
// input[596]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * 92)]
vqrdmlah.s32 Q1, Q3, r10
vstrw.u32 Q2, [r12,#(96)]
// Release input[528] from Q2
vqrdmulh.s32 Q2, Q4, r8
vsub.s32 Q3, Q5, Q1
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q1
vqrdmlah.s32 Q2, Q4, r10
// input[532]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 28)]
vqrdmulh.s32 Q6, Q3, r4
vsub.s32 Q4, Q1, Q2
vmul.u32 Q3, Q3, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q6, Q3, r10
// input[728]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -28)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q3, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q3, [r11,#(-128)]
// Release input[724] from Q3
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r11,#(-384)]
// Release input[660] from Q4
vsub.s32 Q5, Q1, Q7
vstrw.u32 Q5, [r12,#(368)]
// Release input[596] from Q5
vadd.s32 Q1, Q1, Q7
// input[728]: Already loaded as Q2
vqrdmulh.s32 Q3, Q2, r8
// input[664]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -92)]
vmul.u32 Q2, Q2, r7
// input[600]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * 96)]
vqrdmlah.s32 Q3, Q2, r10
vstrw.u32 Q1, [r12,#(112)]
// Release input[532] from Q1
vqrdmulh.s32 Q1, Q4, r8
vsub.s32 Q2, Q5, Q3
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q3
vqrdmlah.s32 Q1, Q4, r10
// input[536]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 32)]
vqrdmulh.s32 Q6, Q2, r4
vsub.s32 Q4, Q3, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q3, Q3, Q1
vqrdmlah.s32 Q6, Q2, r10
// input[732]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -24)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q2, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q2, [r11,#(-112)]
// Release input[728] from Q2
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r11,#(-368)]
// Release input[664] from Q4
vsub.s32 Q5, Q3, Q7
vstrw.u32 Q5, [r12,#(384)]
// Release input[600] from Q5
vadd.s32 Q3, Q3, Q7
// input[732]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[668]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -88)]
vmul.u32 Q1, Q1, r7
// input[604]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * 100)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q3, [r12,#(128)]
// Release input[536] from Q3
vqrdmulh.s32 Q3, Q4, r8
vsub.s32 Q1, Q5, Q2
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q2
vqrdmlah.s32 Q3, Q4, r10
// input[540]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 36)]
vqrdmulh.s32 Q6, Q1, r4
vsub.s32 Q4, Q2, Q3
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q3
vqrdmlah.s32 Q6, Q1, r10
// input[736]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -20)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q1, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q1, [r11,#(-96)]
// Release input[732] from Q1
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r11,#(-352)]
// Release input[668] from Q4
vsub.s32 Q5, Q2, Q7
vstrw.u32 Q5, [r12,#(400)]
// Release input[604] from Q5
vadd.s32 Q2, Q2, Q7
// input[736]: Already loaded as Q3
vqrdmulh.s32 Q1, Q3, r8
// input[672]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -84)]
vmul.u32 Q3, Q3, r7
// input[608]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * 104)]
vqrdmlah.s32 Q1, Q3, r10
vstrw.u32 Q2, [r12,#(144)]
// Release input[540] from Q2
vqrdmulh.s32 Q2, Q4, r8
vsub.s32 Q3, Q5, Q1
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q1
vqrdmlah.s32 Q2, Q4, r10
// input[544]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 40)]
vqrdmulh.s32 Q6, Q3, r4
vsub.s32 Q4, Q1, Q2
vmul.u32 Q3, Q3, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q6, Q3, r10
// input[740]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -16)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q3, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q3, [r11,#(-80)]
// Release input[736] from Q3
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r11,#(-336)]
// Release input[672] from Q4
vsub.s32 Q5, Q1, Q7
vstrw.u32 Q5, [r12,#(416)]
// Release input[608] from Q5
vadd.s32 Q1, Q1, Q7
// input[740]: Already loaded as Q2
vqrdmulh.s32 Q3, Q2, r8
// input[676]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -80)]
vmul.u32 Q2, Q2, r7
// input[612]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * 108)]
vqrdmlah.s32 Q3, Q2, r10
vstrw.u32 Q1, [r12,#(160)]
// Release input[544] from Q1
vqrdmulh.s32 Q1, Q4, r8
vsub.s32 Q2, Q5, Q3
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q3
vqrdmlah.s32 Q1, Q4, r10
// input[548]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 44)]
vqrdmulh.s32 Q6, Q2, r4
vsub.s32 Q4, Q3, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q3, Q3, Q1
vqrdmlah.s32 Q6, Q2, r10
// input[744]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -12)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q2, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q2, [r11,#(-64)]
// Release input[740] from Q2
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r11,#(-320)]
// Release input[676] from Q4
vsub.s32 Q5, Q3, Q7
vstrw.u32 Q5, [r12,#(432)]
// Release input[612] from Q5
vadd.s32 Q3, Q3, Q7
// input[744]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[680]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -76)]
vmul.u32 Q1, Q1, r7
// input[616]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * 112)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q3, [r12,#(176)]
// Release input[548] from Q3
vqrdmulh.s32 Q3, Q4, r8
vsub.s32 Q1, Q5, Q2
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q2
vqrdmlah.s32 Q3, Q4, r10
// input[552]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 48)]
vqrdmulh.s32 Q6, Q1, r4
vsub.s32 Q4, Q2, Q3
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q3
vqrdmlah.s32 Q6, Q1, r10
// input[748]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -8)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q1, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q1, [r11,#(-48)]
// Release input[744] from Q1
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r11,#(-304)]
// Release input[680] from Q4
vsub.s32 Q5, Q2, Q7
vstrw.u32 Q5, [r12,#(448)]
// Release input[616] from Q5
vadd.s32 Q2, Q2, Q7
// input[748]: Already loaded as Q3
vqrdmulh.s32 Q1, Q3, r8
// input[684]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -72)]
vmul.u32 Q3, Q3, r7
// input[620]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * 116)]
vqrdmlah.s32 Q1, Q3, r10
vstrw.u32 Q2, [r12,#(192)]
// Release input[552] from Q2
vqrdmulh.s32 Q2, Q4, r8
vsub.s32 Q3, Q5, Q1
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q1
vqrdmlah.s32 Q2, Q4, r10
// input[556]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 52)]
vqrdmulh.s32 Q6, Q3, r4
vsub.s32 Q4, Q1, Q2
vmul.u32 Q3, Q3, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q6, Q3, r10
// input[752]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -4)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q3, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q3, [r11,#(-32)]
// Release input[748] from Q3
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r11,#(-288)]
// Release input[684] from Q4
vsub.s32 Q5, Q1, Q7
vstrw.u32 Q5, [r12,#(464)]
// Release input[620] from Q5
vadd.s32 Q1, Q1, Q7
// input[752]: Already loaded as Q2
vqrdmulh.s32 Q3, Q2, r8
// input[688]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -68)]
vmul.u32 Q2, Q2, r7
// input[624]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * 120)]
vqrdmlah.s32 Q3, Q2, r10
vstrw.u32 Q1, [r12,#(208)]
// Release input[556] from Q1
vqrdmulh.s32 Q1, Q4, r8
vsub.s32 Q2, Q5, Q3
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q3
vqrdmlah.s32 Q1, Q4, r10
// input[560]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 56)]
vqrdmulh.s32 Q6, Q2, r4
vsub.s32 Q4, Q3, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q3, Q3, Q1
vqrdmlah.s32 Q6, Q2, r10
// input[756]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * 0)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q2, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q2, [r11,#(-16)]
// Release input[752] from Q2
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r11,#(-272)]
// Release input[688] from Q4
vsub.s32 Q5, Q3, Q7
vstrw.u32 Q5, [r12,#(480)]
// Release input[624] from Q5
vadd.s32 Q3, Q3, Q7
// input[756]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[692]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -64)]
vmul.u32 Q1, Q1, r7
// input[628]: Load as Q5
vldrw.u32 Q5, [r12, #(4 * 124)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q3, [r12,#(224)]
// Release input[560] from Q3
vqrdmulh.s32 Q3, Q4, r8
vsub.s32 Q1, Q5, Q2
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q2
vqrdmlah.s32 Q3, Q4, r10
// input[564]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 60)]
vqrdmulh.s32 Q6, Q1, r4
vsub.s32 Q4, Q2, Q3
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q3
vqrdmlah.s32 Q6, Q1, r10
// input[760]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * 4)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q1, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q1, [r11,#(0)]
// Release input[756] from Q1
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r11,#(-256)]
// Release input[692] from Q4
vsub.s32 Q5, Q2, Q7
vstrw.u32 Q5, [r12,#(496)]
// Release input[628] from Q5
vadd.s32 Q2, Q2, Q7
// input[760]: Already loaded as Q3
vqrdmulh.s32 Q1, Q3, r8
// input[696]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -60)]
vmul.u32 Q3, Q3, r7
// input[632]: Load as Q5
vldrw.u32 Q5, [r11, #(4 * -124)]
vqrdmlah.s32 Q1, Q3, r10
vstrw.u32 Q2, [r12,#(240)]
// Release input[564] from Q2
vqrdmulh.s32 Q2, Q4, r8
vsub.s32 Q3, Q5, Q1
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q1
vqrdmlah.s32 Q2, Q4, r10
// input[568]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 64)]
vqrdmulh.s32 Q6, Q3, r4
vsub.s32 Q4, Q1, Q2
vmul.u32 Q3, Q3, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q6, Q3, r10
// input[764]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * 8)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q3, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q3, [r11,#(16)]
// Release input[760] from Q3
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r11,#(-240)]
// Release input[696] from Q4
vsub.s32 Q5, Q1, Q7
vstrw.u32 Q5, [r11,#(-496)]
// Release input[632] from Q5
vadd.s32 Q1, Q1, Q7
// input[764]: Already loaded as Q2
vqrdmulh.s32 Q3, Q2, r8
// input[700]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -56)]
vmul.u32 Q2, Q2, r7
// input[636]: Load as Q5
vldrw.u32 Q5, [r11, #(4 * -120)]
vqrdmlah.s32 Q3, Q2, r10
vstrw.u32 Q1, [r12,#(256)]
// Release input[568] from Q1
vqrdmulh.s32 Q1, Q4, r8
vsub.s32 Q2, Q5, Q3
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q3
vqrdmlah.s32 Q1, Q4, r10
// input[572]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 68)]
vqrdmulh.s32 Q6, Q2, r4
vsub.s32 Q4, Q3, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q3, Q3, Q1
vqrdmlah.s32 Q6, Q2, r10
vqrdmulh.s32 Q1, Q5, r6
vsub.s32 Q2, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q2, [r11,#(32)]
// Release input[764] from Q2
vqrdmlah.s32 Q1, Q5, r10
vstrw.u32 Q4, [r11,#(-224)]
// Release input[700] from Q4
vsub.s32 Q5, Q3, Q1
vstrw.u32 Q5, [r11,#(-480)]
// Release input[636] from Q5
vadd.s32 Q3, Q3, Q1
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[48]: Load as Q1
vldrw.u32 Q1, [Q0, #(4 * 48)]
vqrdmulh.s32 Q2, Q1, r8
// input[32]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 32)]
vmul.u32 Q1, Q1, r7
// input[16]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 16)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q3, [r12,#(272)]
// Release input[572] from Q3
vqrdmulh.s32 Q3, Q4, r8
vsub.s32 Q1, Q5, Q2
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q2
vqrdmlah.s32 Q3, Q4, r10
// input[0]: Load as Q2
vldrw.u32 Q2, [Q0, #(4 * 0)]!
vqrdmulh.s32 Q6, Q1, r4
vsub.s32 Q4, Q2, Q3
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q3
vqrdmlah.s32 Q6, Q1, r10
// input[52]: Load as Q3
vldrw.u32 Q3, [Q0, #(4 * 52)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q1, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q1, [r0,#(192)]
// Release input[48] from Q1
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r0,#(128)]
// Release input[32] from Q4
vsub.s32 Q5, Q2, Q7
vstrw.u32 Q5, [r0,#(64)]
// Release input[16] from Q5
vadd.s32 Q2, Q2, Q7
// input[52]: Already loaded as Q3
vqrdmulh.s32 Q1, Q3, r8
// input[36]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 36)]
vmul.u32 Q3, Q3, r7
// input[20]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 20)]
vqrdmlah.s32 Q1, Q3, r10
vstrw.u32 Q2, [r0,#(0)]
// Release input[0] from Q2
vqrdmulh.s32 Q2, Q4, r8
vsub.s32 Q3, Q5, Q1
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q1
vqrdmlah.s32 Q2, Q4, r10
// input[4]: Load as Q1
vldrw.u32 Q1, [Q0, #(4 * 4)]!
vqrdmulh.s32 Q6, Q3, r4
vsub.s32 Q4, Q1, Q2
vmul.u32 Q3, Q3, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q6, Q3, r10
// input[56]: Load as Q2
vldrw.u32 Q2, [Q0, #(4 * 52)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q3, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q3, [r0,#(208)]
// Release input[52] from Q3
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r0,#(144)]
// Release input[36] from Q4
vsub.s32 Q5, Q1, Q7
vstrw.u32 Q5, [r0,#(80)]
// Release input[20] from Q5
vadd.s32 Q1, Q1, Q7
// input[56]: Already loaded as Q2
vqrdmulh.s32 Q3, Q2, r8
// input[40]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 36)]
vmul.u32 Q2, Q2, r7
// input[24]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 20)]
vqrdmlah.s32 Q3, Q2, r10
vstrw.u32 Q1, [r0,#(16)]
// Release input[4] from Q1
vqrdmulh.s32 Q1, Q4, r8
vsub.s32 Q2, Q5, Q3
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q3
vqrdmlah.s32 Q1, Q4, r10
// input[8]: Load as Q3
vldrw.u32 Q3, [Q0, #(4 * 4)]!
vqrdmulh.s32 Q6, Q2, r4
vsub.s32 Q4, Q3, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q3, Q3, Q1
vqrdmlah.s32 Q6, Q2, r10
// input[60]: Load as Q1
vldrw.u32 Q1, [Q0, #(4 * 52)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q2, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q2, [r0,#(224)]
// Release input[56] from Q2
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r0,#(160)]
// Release input[40] from Q4
vsub.s32 Q5, Q3, Q7
vstrw.u32 Q5, [r0,#(96)]
// Release input[24] from Q5
vadd.s32 Q3, Q3, Q7
// input[60]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[44]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 36)]
vmul.u32 Q1, Q1, r7
// input[28]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 20)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q3, [r0,#(32)]
// Release input[8] from Q3
vqrdmulh.s32 Q3, Q4, r8
vsub.s32 Q1, Q5, Q2
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q2
vqrdmlah.s32 Q3, Q4, r10
// input[12]: Load as Q2
vldrw.u32 Q2, [Q0, #(4 * 4)]!
vqrdmulh.s32 Q6, Q1, r4
vsub.s32 Q4, Q2, Q3
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q3
vqrdmlah.s32 Q6, Q1, r10
// input[112]: Load as Q3
vldrw.u32 Q3, [Q0, #(4 * 100)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q1, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q1, [r0,#(240)]
// Release input[60] from Q1
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r0,#(176)]
// Release input[44] from Q4
vsub.s32 Q5, Q2, Q7
vstrw.u32 Q5, [r0,#(112)]
// Release input[28] from Q5
vadd.s32 Q2, Q2, Q7
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[112]: Already loaded as Q3
vqrdmulh.s32 Q1, Q3, r8
// input[96]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 84)]
vmul.u32 Q3, Q3, r7
// input[80]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 68)]
vqrdmlah.s32 Q1, Q3, r10
vstrw.u32 Q2, [r0,#(48)]
// Release input[12] from Q2
vqrdmulh.s32 Q2, Q4, r8
vsub.s32 Q3, Q5, Q1
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q1
vqrdmlah.s32 Q2, Q4, r10
// input[64]: Load as Q1
vldrw.u32 Q1, [Q0, #(4 * 52)]!
vqrdmulh.s32 Q6, Q3, r4
vsub.s32 Q4, Q1, Q2
vmul.u32 Q3, Q3, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q6, Q3, r10
// input[116]: Load as Q2
vldrw.u32 Q2, [Q0, #(4 * 52)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q3, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q3, [r0,#(448)]
// Release input[112] from Q3
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r0,#(384)]
// Release input[96] from Q4
vsub.s32 Q5, Q1, Q7
vstrw.u32 Q5, [r0,#(320)]
// Release input[80] from Q5
vadd.s32 Q1, Q1, Q7
// input[116]: Already loaded as Q2
vqrdmulh.s32 Q3, Q2, r8
// input[100]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 36)]
vmul.u32 Q2, Q2, r7
// input[84]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 20)]
vqrdmlah.s32 Q3, Q2, r10
vstrw.u32 Q1, [r0,#(256)]
// Release input[64] from Q1
vqrdmulh.s32 Q1, Q4, r8
vsub.s32 Q2, Q5, Q3
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q3
vqrdmlah.s32 Q1, Q4, r10
// input[68]: Load as Q3
vldrw.u32 Q3, [Q0, #(4 * 4)]!
vqrdmulh.s32 Q6, Q2, r4
vsub.s32 Q4, Q3, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q3, Q3, Q1
vqrdmlah.s32 Q6, Q2, r10
// input[120]: Load as Q1
vldrw.u32 Q1, [Q0, #(4 * 52)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q2, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q2, [r0,#(464)]
// Release input[116] from Q2
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r0,#(400)]
// Release input[100] from Q4
vsub.s32 Q5, Q3, Q7
vstrw.u32 Q5, [r0,#(336)]
// Release input[84] from Q5
vadd.s32 Q3, Q3, Q7
// input[120]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[104]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 36)]
vmul.u32 Q1, Q1, r7
// input[88]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 20)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q3, [r0,#(272)]
// Release input[68] from Q3
vqrdmulh.s32 Q3, Q4, r8
vsub.s32 Q1, Q5, Q2
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q2
vqrdmlah.s32 Q3, Q4, r10
// input[72]: Load as Q2
vldrw.u32 Q2, [Q0, #(4 * 4)]!
vqrdmulh.s32 Q6, Q1, r4
vsub.s32 Q4, Q2, Q3
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q3
vqrdmlah.s32 Q6, Q1, r10
// input[124]: Load as Q3
vldrw.u32 Q3, [Q0, #(4 * 52)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q1, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q1, [r0,#(480)]
// Release input[120] from Q1
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r0,#(416)]
// Release input[104] from Q4
vsub.s32 Q5, Q2, Q7
vstrw.u32 Q5, [r0,#(352)]
// Release input[88] from Q5
vadd.s32 Q2, Q2, Q7
// input[124]: Already loaded as Q3
vqrdmulh.s32 Q1, Q3, r8
// input[108]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 36)]
vmul.u32 Q3, Q3, r7
// input[92]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 20)]
vqrdmlah.s32 Q1, Q3, r10
vstrw.u32 Q2, [r0,#(288)]
// Release input[72] from Q2
vqrdmulh.s32 Q2, Q4, r8
vsub.s32 Q3, Q5, Q1
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q1
vqrdmlah.s32 Q2, Q4, r10
// input[76]: Load as Q1
vldrw.u32 Q1, [Q0, #(4 * 4)]!
vqrdmulh.s32 Q6, Q3, r4
vsub.s32 Q4, Q1, Q2
vmul.u32 Q3, Q3, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q6, Q3, r10
// input[176]: Load as Q2
vldrw.u32 Q2, [Q0, #(4 * 100)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q3, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q3, [r0,#(496)]
// Release input[124] from Q3
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r0,#(432)]
// Release input[108] from Q4
vsub.s32 Q5, Q1, Q7
vstrw.u32 Q5, [r0,#(368)]
// Release input[92] from Q5
vadd.s32 Q1, Q1, Q7
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[176]: Already loaded as Q2
vqrdmulh.s32 Q3, Q2, r8
// input[160]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 84)]
vmul.u32 Q2, Q2, r7
// input[144]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 68)]
vqrdmlah.s32 Q3, Q2, r10
vstrw.u32 Q1, [r0,#(304)]
// Release input[76] from Q1
vqrdmulh.s32 Q1, Q4, r8
vsub.s32 Q2, Q5, Q3
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q3
vqrdmlah.s32 Q1, Q4, r10
// input[128]: Load as Q3
vldrw.u32 Q3, [Q0, #(4 * 52)]!
vqrdmulh.s32 Q6, Q2, r4
vsub.s32 Q4, Q3, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q3, Q3, Q1
vqrdmlah.s32 Q6, Q2, r10
// input[180]: Load as Q1
vldrw.u32 Q1, [Q0, #(4 * 52)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q2, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q2, [r14,#(-304)]
// Release input[176] from Q2
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r14,#(-368)]
// Release input[160] from Q4
vsub.s32 Q5, Q3, Q7
vstrw.u32 Q5, [r14,#(-432)]
// Release input[144] from Q5
vadd.s32 Q3, Q3, Q7
// input[180]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[164]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 36)]
vmul.u32 Q1, Q1, r7
// input[148]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 20)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q3, [r14,#(-496)]
// Release input[128] from Q3
vqrdmulh.s32 Q3, Q4, r8
vsub.s32 Q1, Q5, Q2
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q2
vqrdmlah.s32 Q3, Q4, r10
// input[132]: Load as Q2
vldrw.u32 Q2, [Q0, #(4 * 4)]!
vqrdmulh.s32 Q6, Q1, r4
vsub.s32 Q4, Q2, Q3
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q3
vqrdmlah.s32 Q6, Q1, r10
// input[184]: Load as Q3
vldrw.u32 Q3, [Q0, #(4 * 52)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q1, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q1, [r14,#(-288)]
// Release input[180] from Q1
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r14,#(-352)]
// Release input[164] from Q4
vsub.s32 Q5, Q2, Q7
vstrw.u32 Q5, [r14,#(-416)]
// Release input[148] from Q5
vadd.s32 Q2, Q2, Q7
// input[184]: Already loaded as Q3
vqrdmulh.s32 Q1, Q3, r8
// input[168]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 36)]
vmul.u32 Q3, Q3, r7
// input[152]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 20)]
vqrdmlah.s32 Q1, Q3, r10
vstrw.u32 Q2, [r14,#(-480)]
// Release input[132] from Q2
vqrdmulh.s32 Q2, Q4, r8
vsub.s32 Q3, Q5, Q1
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q1
vqrdmlah.s32 Q2, Q4, r10
// input[136]: Load as Q1
vldrw.u32 Q1, [Q0, #(4 * 4)]!
vqrdmulh.s32 Q6, Q3, r4
vsub.s32 Q4, Q1, Q2
vmul.u32 Q3, Q3, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q6, Q3, r10
// input[188]: Load as Q2
vldrw.u32 Q2, [Q0, #(4 * 52)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q3, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q3, [r14,#(-272)]
// Release input[184] from Q3
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r14,#(-336)]
// Release input[168] from Q4
vsub.s32 Q5, Q1, Q7
vstrw.u32 Q5, [r14,#(-400)]
// Release input[152] from Q5
vadd.s32 Q1, Q1, Q7
// input[188]: Already loaded as Q2
vqrdmulh.s32 Q3, Q2, r8
// input[172]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 36)]
vmul.u32 Q2, Q2, r7
// input[156]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 20)]
vqrdmlah.s32 Q3, Q2, r10
vstrw.u32 Q1, [r14,#(-464)]
// Release input[136] from Q1
vqrdmulh.s32 Q1, Q4, r8
vsub.s32 Q2, Q5, Q3
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q3
vqrdmlah.s32 Q1, Q4, r10
// input[140]: Load as Q3
vldrw.u32 Q3, [Q0, #(4 * 4)]!
vqrdmulh.s32 Q6, Q2, r4
vsub.s32 Q4, Q3, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q3, Q3, Q1
vqrdmlah.s32 Q6, Q2, r10
// input[240]: Load as Q1
vldrw.u32 Q1, [Q0, #(4 * 100)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q2, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q2, [r14,#(-256)]
// Release input[188] from Q2
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r14,#(-320)]
// Release input[172] from Q4
vsub.s32 Q5, Q3, Q7
vstrw.u32 Q5, [r14,#(-384)]
// Release input[156] from Q5
vadd.s32 Q3, Q3, Q7
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[240]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[224]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 84)]
vmul.u32 Q1, Q1, r7
// input[208]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 68)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q3, [r14,#(-448)]
// Release input[140] from Q3
vqrdmulh.s32 Q3, Q4, r8
vsub.s32 Q1, Q5, Q2
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q2
vqrdmlah.s32 Q3, Q4, r10
// input[192]: Load as Q2
vldrw.u32 Q2, [Q0, #(4 * 52)]!
vqrdmulh.s32 Q6, Q1, r4
vsub.s32 Q4, Q2, Q3
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q3
vqrdmlah.s32 Q6, Q1, r10
// input[244]: Load as Q3
vldrw.u32 Q3, [Q0, #(4 * 52)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q1, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q1, [r14,#(-48)]
// Release input[240] from Q1
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r14,#(-112)]
// Release input[224] from Q4
vsub.s32 Q5, Q2, Q7
vstrw.u32 Q5, [r14,#(-176)]
// Release input[208] from Q5
vadd.s32 Q2, Q2, Q7
// input[244]: Already loaded as Q3
vqrdmulh.s32 Q1, Q3, r8
// input[228]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 36)]
vmul.u32 Q3, Q3, r7
// input[212]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 20)]
vqrdmlah.s32 Q1, Q3, r10
vstrw.u32 Q2, [r14,#(-240)]
// Release input[192] from Q2
vqrdmulh.s32 Q2, Q4, r8
vsub.s32 Q3, Q5, Q1
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q1
vqrdmlah.s32 Q2, Q4, r10
// input[196]: Load as Q1
vldrw.u32 Q1, [Q0, #(4 * 4)]!
vqrdmulh.s32 Q6, Q3, r4
vsub.s32 Q4, Q1, Q2
vmul.u32 Q3, Q3, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q6, Q3, r10
// input[248]: Load as Q2
vldrw.u32 Q2, [Q0, #(4 * 52)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q3, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q3, [r14,#(-32)]
// Release input[244] from Q3
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r14,#(-96)]
// Release input[228] from Q4
vsub.s32 Q5, Q1, Q7
vstrw.u32 Q5, [r14,#(-160)]
// Release input[212] from Q5
vadd.s32 Q1, Q1, Q7
// input[248]: Already loaded as Q2
vqrdmulh.s32 Q3, Q2, r8
// input[232]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 36)]
vmul.u32 Q2, Q2, r7
// input[216]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 20)]
vqrdmlah.s32 Q3, Q2, r10
vstrw.u32 Q1, [r14,#(-224)]
// Release input[196] from Q1
vqrdmulh.s32 Q1, Q4, r8
vsub.s32 Q2, Q5, Q3
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q3
vqrdmlah.s32 Q1, Q4, r10
// input[200]: Load as Q3
vldrw.u32 Q3, [Q0, #(4 * 4)]!
vqrdmulh.s32 Q6, Q2, r4
vsub.s32 Q4, Q3, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q3, Q3, Q1
vqrdmlah.s32 Q6, Q2, r10
// input[252]: Load as Q1
vldrw.u32 Q1, [Q0, #(4 * 52)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q2, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q2, [r14,#(-16)]
// Release input[248] from Q2
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r14,#(-80)]
// Release input[232] from Q4
vsub.s32 Q5, Q3, Q7
vstrw.u32 Q5, [r14,#(-144)]
// Release input[216] from Q5
vadd.s32 Q3, Q3, Q7
// input[252]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[236]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 36)]
vmul.u32 Q1, Q1, r7
// input[220]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 20)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q3, [r14,#(-208)]
// Release input[200] from Q3
vqrdmulh.s32 Q3, Q4, r8
vsub.s32 Q1, Q5, Q2
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q2
vqrdmlah.s32 Q3, Q4, r10
// input[204]: Load as Q2
vldrw.u32 Q2, [Q0, #(4 * 4)]!
vqrdmulh.s32 Q6, Q1, r4
vsub.s32 Q4, Q2, Q3
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q3
vqrdmlah.s32 Q6, Q1, r10
// input[304]: Load as Q3
vldrw.u32 Q3, [Q0, #(4 * 100)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q1, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q1, [r14,#(0)]
// Release input[252] from Q1
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r14,#(-64)]
// Release input[236] from Q4
vsub.s32 Q5, Q2, Q7
vstrw.u32 Q5, [r14,#(-128)]
// Release input[220] from Q5
vadd.s32 Q2, Q2, Q7
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[304]: Already loaded as Q3
vqrdmulh.s32 Q1, Q3, r8
// input[288]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 84)]
vmul.u32 Q3, Q3, r7
// input[272]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 68)]
vqrdmlah.s32 Q1, Q3, r10
vstrw.u32 Q2, [r14,#(-192)]
// Release input[204] from Q2
vqrdmulh.s32 Q2, Q4, r8
vsub.s32 Q3, Q5, Q1
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q1
vqrdmlah.s32 Q2, Q4, r10
// input[256]: Load as Q1
vldrw.u32 Q1, [Q0, #(4 * 52)]!
vqrdmulh.s32 Q6, Q3, r4
vsub.s32 Q4, Q1, Q2
vmul.u32 Q3, Q3, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q6, Q3, r10
// input[308]: Load as Q2
vldrw.u32 Q2, [Q0, #(4 * 52)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q3, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q3, [r14,#(208)]
// Release input[304] from Q3
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r14,#(144)]
// Release input[288] from Q4
vsub.s32 Q5, Q1, Q7
vstrw.u32 Q5, [r14,#(80)]
// Release input[272] from Q5
vadd.s32 Q1, Q1, Q7
// input[308]: Already loaded as Q2
vqrdmulh.s32 Q3, Q2, r8
// input[292]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 36)]
vmul.u32 Q2, Q2, r7
// input[276]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 20)]
vqrdmlah.s32 Q3, Q2, r10
vstrw.u32 Q1, [r14,#(16)]
// Release input[256] from Q1
vqrdmulh.s32 Q1, Q4, r8
vsub.s32 Q2, Q5, Q3
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q3
vqrdmlah.s32 Q1, Q4, r10
// input[260]: Load as Q3
vldrw.u32 Q3, [Q0, #(4 * 4)]!
vqrdmulh.s32 Q6, Q2, r4
vsub.s32 Q4, Q3, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q3, Q3, Q1
vqrdmlah.s32 Q6, Q2, r10
// input[312]: Load as Q1
vldrw.u32 Q1, [Q0, #(4 * 52)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q2, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q2, [r14,#(224)]
// Release input[308] from Q2
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r14,#(160)]
// Release input[292] from Q4
vsub.s32 Q5, Q3, Q7
vstrw.u32 Q5, [r14,#(96)]
// Release input[276] from Q5
vadd.s32 Q3, Q3, Q7
// input[312]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[296]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 36)]
vmul.u32 Q1, Q1, r7
// input[280]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 20)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q3, [r14,#(32)]
// Release input[260] from Q3
vqrdmulh.s32 Q3, Q4, r8
vsub.s32 Q1, Q5, Q2
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q2
vqrdmlah.s32 Q3, Q4, r10
// input[264]: Load as Q2
vldrw.u32 Q2, [Q0, #(4 * 4)]!
vqrdmulh.s32 Q6, Q1, r4
vsub.s32 Q4, Q2, Q3
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q3
vqrdmlah.s32 Q6, Q1, r10
// input[316]: Load as Q3
vldrw.u32 Q3, [Q0, #(4 * 52)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q1, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q1, [r14,#(240)]
// Release input[312] from Q1
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r14,#(176)]
// Release input[296] from Q4
vsub.s32 Q5, Q2, Q7
vstrw.u32 Q5, [r14,#(112)]
// Release input[280] from Q5
vadd.s32 Q2, Q2, Q7
// input[316]: Already loaded as Q3
vqrdmulh.s32 Q1, Q3, r8
// input[300]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 36)]
vmul.u32 Q3, Q3, r7
// input[284]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 20)]
vqrdmlah.s32 Q1, Q3, r10
vstrw.u32 Q2, [r14,#(48)]
// Release input[264] from Q2
vqrdmulh.s32 Q2, Q4, r8
vsub.s32 Q3, Q5, Q1
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q1
vqrdmlah.s32 Q2, Q4, r10
// input[268]: Load as Q1
vldrw.u32 Q1, [Q0, #(4 * 4)]!
vqrdmulh.s32 Q6, Q3, r4
vsub.s32 Q4, Q1, Q2
vmul.u32 Q3, Q3, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q6, Q3, r10
// input[368]: Load as Q2
vldrw.u32 Q2, [Q0, #(4 * 100)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q3, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q3, [r14,#(256)]
// Release input[316] from Q3
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r14,#(192)]
// Release input[300] from Q4
vsub.s32 Q5, Q1, Q7
vstrw.u32 Q5, [r14,#(128)]
// Release input[284] from Q5
vadd.s32 Q1, Q1, Q7
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[368]: Already loaded as Q2
vqrdmulh.s32 Q3, Q2, r8
// input[352]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 84)]
vmul.u32 Q2, Q2, r7
// input[336]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 68)]
vqrdmlah.s32 Q3, Q2, r10
vstrw.u32 Q1, [r14,#(64)]
// Release input[268] from Q1
vqrdmulh.s32 Q1, Q4, r8
vsub.s32 Q2, Q5, Q3
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q3
vqrdmlah.s32 Q1, Q4, r10
// input[320]: Load as Q3
vldrw.u32 Q3, [Q0, #(4 * 52)]!
vqrdmulh.s32 Q6, Q2, r4
vsub.s32 Q4, Q3, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q3, Q3, Q1
vqrdmlah.s32 Q6, Q2, r10
// input[372]: Load as Q1
vldrw.u32 Q1, [Q0, #(4 * 52)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q2, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q2, [r14,#(464)]
// Release input[368] from Q2
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r14,#(400)]
// Release input[352] from Q4
vsub.s32 Q5, Q3, Q7
vstrw.u32 Q5, [r14,#(336)]
// Release input[336] from Q5
vadd.s32 Q3, Q3, Q7
// input[372]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[356]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 36)]
vmul.u32 Q1, Q1, r7
// input[340]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 20)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q3, [r14,#(272)]
// Release input[320] from Q3
vqrdmulh.s32 Q3, Q4, r8
vsub.s32 Q1, Q5, Q2
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q2
vqrdmlah.s32 Q3, Q4, r10
// input[324]: Load as Q2
vldrw.u32 Q2, [Q0, #(4 * 4)]!
vqrdmulh.s32 Q6, Q1, r4
vsub.s32 Q4, Q2, Q3
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q3
vqrdmlah.s32 Q6, Q1, r10
// input[376]: Load as Q3
vldrw.u32 Q3, [Q0, #(4 * 52)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q1, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q1, [r14,#(480)]
// Release input[372] from Q1
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r14,#(416)]
// Release input[356] from Q4
vsub.s32 Q5, Q2, Q7
vstrw.u32 Q5, [r14,#(352)]
// Release input[340] from Q5
vadd.s32 Q2, Q2, Q7
// input[376]: Already loaded as Q3
vqrdmulh.s32 Q1, Q3, r8
// input[360]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 36)]
vmul.u32 Q3, Q3, r7
// input[344]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 20)]
vqrdmlah.s32 Q1, Q3, r10
vstrw.u32 Q2, [r14,#(288)]
// Release input[324] from Q2
vqrdmulh.s32 Q2, Q4, r8
vsub.s32 Q3, Q5, Q1
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q1
vqrdmlah.s32 Q2, Q4, r10
// input[328]: Load as Q1
vldrw.u32 Q1, [Q0, #(4 * 4)]!
vqrdmulh.s32 Q6, Q3, r4
vsub.s32 Q4, Q1, Q2
vmul.u32 Q3, Q3, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q6, Q3, r10
// input[380]: Load as Q2
vldrw.u32 Q2, [Q0, #(4 * 52)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q3, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q3, [r14,#(496)]
// Release input[376] from Q3
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r14,#(432)]
// Release input[360] from Q4
vsub.s32 Q5, Q1, Q7
vstrw.u32 Q5, [r14,#(368)]
// Release input[344] from Q5
vadd.s32 Q1, Q1, Q7
// input[380]: Already loaded as Q2
vqrdmulh.s32 Q3, Q2, r8
// input[364]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 36)]
vmul.u32 Q2, Q2, r7
// input[348]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 20)]
vqrdmlah.s32 Q3, Q2, r10
vstrw.u32 Q1, [r14,#(304)]
// Release input[328] from Q1
vqrdmulh.s32 Q1, Q4, r8
vsub.s32 Q2, Q5, Q3
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q3
vqrdmlah.s32 Q1, Q4, r10
// input[332]: Load as Q3
vldrw.u32 Q3, [Q0, #(4 * 4)]!
vqrdmulh.s32 Q6, Q2, r4
vsub.s32 Q4, Q3, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q3, Q3, Q1
vqrdmlah.s32 Q6, Q2, r10
// input[432]: Load as Q1
vldrw.u32 Q1, [Q0, #(4 * 100)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q2, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q2, [r12,#(-496)]
// Release input[380] from Q2
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r14,#(448)]
// Release input[364] from Q4
vsub.s32 Q5, Q3, Q7
vstrw.u32 Q5, [r14,#(384)]
// Release input[348] from Q5
vadd.s32 Q3, Q3, Q7
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[432]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[416]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 84)]
vmul.u32 Q1, Q1, r7
// input[400]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 68)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q3, [r14,#(320)]
// Release input[332] from Q3
vqrdmulh.s32 Q3, Q4, r8
vsub.s32 Q1, Q5, Q2
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q2
vqrdmlah.s32 Q3, Q4, r10
// input[384]: Load as Q2
vldrw.u32 Q2, [Q0, #(4 * 52)]!
vqrdmulh.s32 Q6, Q1, r4
vsub.s32 Q4, Q2, Q3
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q3
vqrdmlah.s32 Q6, Q1, r10
// input[436]: Load as Q3
vldrw.u32 Q3, [Q0, #(4 * 52)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q1, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q1, [r12,#(-288)]
// Release input[432] from Q1
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r12,#(-352)]
// Release input[416] from Q4
vsub.s32 Q5, Q2, Q7
vstrw.u32 Q5, [r12,#(-416)]
// Release input[400] from Q5
vadd.s32 Q2, Q2, Q7
// input[436]: Already loaded as Q3
vqrdmulh.s32 Q1, Q3, r8
// input[420]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 36)]
vmul.u32 Q3, Q3, r7
// input[404]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 20)]
vqrdmlah.s32 Q1, Q3, r10
vstrw.u32 Q2, [r12,#(-480)]
// Release input[384] from Q2
vqrdmulh.s32 Q2, Q4, r8
vsub.s32 Q3, Q5, Q1
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q1
vqrdmlah.s32 Q2, Q4, r10
// input[388]: Load as Q1
vldrw.u32 Q1, [Q0, #(4 * 4)]!
vqrdmulh.s32 Q6, Q3, r4
vsub.s32 Q4, Q1, Q2
vmul.u32 Q3, Q3, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q6, Q3, r10
// input[440]: Load as Q2
vldrw.u32 Q2, [Q0, #(4 * 52)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q3, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q3, [r12,#(-272)]
// Release input[436] from Q3
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r12,#(-336)]
// Release input[420] from Q4
vsub.s32 Q5, Q1, Q7
vstrw.u32 Q5, [r12,#(-400)]
// Release input[404] from Q5
vadd.s32 Q1, Q1, Q7
// input[440]: Already loaded as Q2
vqrdmulh.s32 Q3, Q2, r8
// input[424]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 36)]
vmul.u32 Q2, Q2, r7
// input[408]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 20)]
vqrdmlah.s32 Q3, Q2, r10
vstrw.u32 Q1, [r12,#(-464)]
// Release input[388] from Q1
vqrdmulh.s32 Q1, Q4, r8
vsub.s32 Q2, Q5, Q3
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q3
vqrdmlah.s32 Q1, Q4, r10
// input[392]: Load as Q3
vldrw.u32 Q3, [Q0, #(4 * 4)]!
vqrdmulh.s32 Q6, Q2, r4
vsub.s32 Q4, Q3, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q3, Q3, Q1
vqrdmlah.s32 Q6, Q2, r10
// input[444]: Load as Q1
vldrw.u32 Q1, [Q0, #(4 * 52)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q2, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q2, [r12,#(-256)]
// Release input[440] from Q2
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r12,#(-320)]
// Release input[424] from Q4
vsub.s32 Q5, Q3, Q7
vstrw.u32 Q5, [r12,#(-384)]
// Release input[408] from Q5
vadd.s32 Q3, Q3, Q7
// input[444]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[428]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 36)]
vmul.u32 Q1, Q1, r7
// input[412]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 20)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q3, [r12,#(-448)]
// Release input[392] from Q3
vqrdmulh.s32 Q3, Q4, r8
vsub.s32 Q1, Q5, Q2
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q2
vqrdmlah.s32 Q3, Q4, r10
// input[396]: Load as Q2
vldrw.u32 Q2, [Q0, #(4 * 4)]!
vqrdmulh.s32 Q6, Q1, r4
vsub.s32 Q4, Q2, Q3
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q3
vqrdmlah.s32 Q6, Q1, r10
// input[496]: Load as Q3
vldrw.u32 Q3, [Q0, #(4 * 100)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q1, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q1, [r12,#(-240)]
// Release input[444] from Q1
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r12,#(-304)]
// Release input[428] from Q4
vsub.s32 Q5, Q2, Q7
vstrw.u32 Q5, [r12,#(-368)]
// Release input[412] from Q5
vadd.s32 Q2, Q2, Q7
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[496]: Already loaded as Q3
vqrdmulh.s32 Q1, Q3, r8
// input[480]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 84)]
vmul.u32 Q3, Q3, r7
// input[464]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 68)]
vqrdmlah.s32 Q1, Q3, r10
vstrw.u32 Q2, [r12,#(-432)]
// Release input[396] from Q2
vqrdmulh.s32 Q2, Q4, r8
vsub.s32 Q3, Q5, Q1
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q1
vqrdmlah.s32 Q2, Q4, r10
// input[448]: Load as Q1
vldrw.u32 Q1, [Q0, #(4 * 52)]!
vqrdmulh.s32 Q6, Q3, r4
vsub.s32 Q4, Q1, Q2
vmul.u32 Q3, Q3, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q6, Q3, r10
// input[500]: Load as Q2
vldrw.u32 Q2, [Q0, #(4 * 52)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q3, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q3, [r12,#(-32)]
// Release input[496] from Q3
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r12,#(-96)]
// Release input[480] from Q4
vsub.s32 Q5, Q1, Q7
vstrw.u32 Q5, [r12,#(-160)]
// Release input[464] from Q5
vadd.s32 Q1, Q1, Q7
// input[500]: Already loaded as Q2
vqrdmulh.s32 Q3, Q2, r8
// input[484]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 36)]
vmul.u32 Q2, Q2, r7
// input[468]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 20)]
vqrdmlah.s32 Q3, Q2, r10
vstrw.u32 Q1, [r12,#(-224)]
// Release input[448] from Q1
vqrdmulh.s32 Q1, Q4, r8
vsub.s32 Q2, Q5, Q3
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q3
vqrdmlah.s32 Q1, Q4, r10
// input[452]: Load as Q3
vldrw.u32 Q3, [Q0, #(4 * 4)]!
vqrdmulh.s32 Q6, Q2, r4
vsub.s32 Q4, Q3, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q3, Q3, Q1
vqrdmlah.s32 Q6, Q2, r10
// input[504]: Load as Q1
vldrw.u32 Q1, [Q0, #(4 * 52)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q2, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q2, [r12,#(-16)]
// Release input[500] from Q2
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r12,#(-80)]
// Release input[484] from Q4
vsub.s32 Q5, Q3, Q7
vstrw.u32 Q5, [r12,#(-144)]
// Release input[468] from Q5
vadd.s32 Q3, Q3, Q7
// input[504]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[488]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 36)]
vmul.u32 Q1, Q1, r7
// input[472]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 20)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q3, [r12,#(-208)]
// Release input[452] from Q3
vqrdmulh.s32 Q3, Q4, r8
vsub.s32 Q1, Q5, Q2
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q2
vqrdmlah.s32 Q3, Q4, r10
// input[456]: Load as Q2
vldrw.u32 Q2, [Q0, #(4 * 4)]!
vqrdmulh.s32 Q6, Q1, r4
vsub.s32 Q4, Q2, Q3
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q3
vqrdmlah.s32 Q6, Q1, r10
// input[508]: Load as Q3
vldrw.u32 Q3, [Q0, #(4 * 52)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q1, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q1, [r12,#(0)]
// Release input[504] from Q1
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r12,#(-64)]
// Release input[488] from Q4
vsub.s32 Q5, Q2, Q7
vstrw.u32 Q5, [r12,#(-128)]
// Release input[472] from Q5
vadd.s32 Q2, Q2, Q7
// input[508]: Already loaded as Q3
vqrdmulh.s32 Q1, Q3, r8
// input[492]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 36)]
vmul.u32 Q3, Q3, r7
// input[476]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 20)]
vqrdmlah.s32 Q1, Q3, r10
vstrw.u32 Q2, [r12,#(-192)]
// Release input[456] from Q2
vqrdmulh.s32 Q2, Q4, r8
vsub.s32 Q3, Q5, Q1
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q1
vqrdmlah.s32 Q2, Q4, r10
// input[460]: Load as Q1
vldrw.u32 Q1, [Q0, #(4 * 4)]!
vqrdmulh.s32 Q6, Q3, r4
vsub.s32 Q4, Q1, Q2
vmul.u32 Q3, Q3, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q6, Q3, r10
// input[560]: Load as Q2
vldrw.u32 Q2, [Q0, #(4 * 100)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q3, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q3, [r12,#(16)]
// Release input[508] from Q3
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r12,#(-48)]
// Release input[492] from Q4
vsub.s32 Q5, Q1, Q7
vstrw.u32 Q5, [r12,#(-112)]
// Release input[476] from Q5
vadd.s32 Q1, Q1, Q7
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[560]: Already loaded as Q2
vqrdmulh.s32 Q3, Q2, r8
// input[544]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 84)]
vmul.u32 Q2, Q2, r7
// input[528]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 68)]
vqrdmlah.s32 Q3, Q2, r10
vstrw.u32 Q1, [r12,#(-176)]
// Release input[460] from Q1
vqrdmulh.s32 Q1, Q4, r8
vsub.s32 Q2, Q5, Q3
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q3
vqrdmlah.s32 Q1, Q4, r10
// input[512]: Load as Q3
vldrw.u32 Q3, [Q0, #(4 * 52)]!
vqrdmulh.s32 Q6, Q2, r4
vsub.s32 Q4, Q3, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q3, Q3, Q1
vqrdmlah.s32 Q6, Q2, r10
// input[564]: Load as Q1
vldrw.u32 Q1, [Q0, #(4 * 52)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q2, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q2, [r12,#(224)]
// Release input[560] from Q2
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r12,#(160)]
// Release input[544] from Q4
vsub.s32 Q5, Q3, Q7
vstrw.u32 Q5, [r12,#(96)]
// Release input[528] from Q5
vadd.s32 Q3, Q3, Q7
// input[564]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[548]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 36)]
vmul.u32 Q1, Q1, r7
// input[532]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 20)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q3, [r12,#(32)]
// Release input[512] from Q3
vqrdmulh.s32 Q3, Q4, r8
vsub.s32 Q1, Q5, Q2
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q2
vqrdmlah.s32 Q3, Q4, r10
// input[516]: Load as Q2
vldrw.u32 Q2, [Q0, #(4 * 4)]!
vqrdmulh.s32 Q6, Q1, r4
vsub.s32 Q4, Q2, Q3
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q3
vqrdmlah.s32 Q6, Q1, r10
// input[568]: Load as Q3
vldrw.u32 Q3, [Q0, #(4 * 52)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q1, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q1, [r12,#(240)]
// Release input[564] from Q1
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r12,#(176)]
// Release input[548] from Q4
vsub.s32 Q5, Q2, Q7
vstrw.u32 Q5, [r12,#(112)]
// Release input[532] from Q5
vadd.s32 Q2, Q2, Q7
// input[568]: Already loaded as Q3
vqrdmulh.s32 Q1, Q3, r8
// input[552]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 36)]
vmul.u32 Q3, Q3, r7
// input[536]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 20)]
vqrdmlah.s32 Q1, Q3, r10
vstrw.u32 Q2, [r12,#(48)]
// Release input[516] from Q2
vqrdmulh.s32 Q2, Q4, r8
vsub.s32 Q3, Q5, Q1
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q1
vqrdmlah.s32 Q2, Q4, r10
// input[520]: Load as Q1
vldrw.u32 Q1, [Q0, #(4 * 4)]!
vqrdmulh.s32 Q6, Q3, r4
vsub.s32 Q4, Q1, Q2
vmul.u32 Q3, Q3, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q6, Q3, r10
// input[572]: Load as Q2
vldrw.u32 Q2, [Q0, #(4 * 52)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q3, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q3, [r12,#(256)]
// Release input[568] from Q3
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r12,#(192)]
// Release input[552] from Q4
vsub.s32 Q5, Q1, Q7
vstrw.u32 Q5, [r12,#(128)]
// Release input[536] from Q5
vadd.s32 Q1, Q1, Q7
// input[572]: Already loaded as Q2
vqrdmulh.s32 Q3, Q2, r8
// input[556]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 36)]
vmul.u32 Q2, Q2, r7
// input[540]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 20)]
vqrdmlah.s32 Q3, Q2, r10
vstrw.u32 Q1, [r12,#(64)]
// Release input[520] from Q1
vqrdmulh.s32 Q1, Q4, r8
vsub.s32 Q2, Q5, Q3
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q3
vqrdmlah.s32 Q1, Q4, r10
// input[524]: Load as Q3
vldrw.u32 Q3, [Q0, #(4 * 4)]!
vqrdmulh.s32 Q6, Q2, r4
vsub.s32 Q4, Q3, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q3, Q3, Q1
vqrdmlah.s32 Q6, Q2, r10
// input[624]: Load as Q1
vldrw.u32 Q1, [Q0, #(4 * 100)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q2, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q2, [r12,#(272)]
// Release input[572] from Q2
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r12,#(208)]
// Release input[556] from Q4
vsub.s32 Q5, Q3, Q7
vstrw.u32 Q5, [r12,#(144)]
// Release input[540] from Q5
vadd.s32 Q3, Q3, Q7
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[624]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[608]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 84)]
vmul.u32 Q1, Q1, r7
// input[592]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 68)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q3, [r12,#(80)]
// Release input[524] from Q3
vqrdmulh.s32 Q3, Q4, r8
vsub.s32 Q1, Q5, Q2
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q2
vqrdmlah.s32 Q3, Q4, r10
// input[576]: Load as Q2
vldrw.u32 Q2, [Q0, #(4 * 52)]!
vqrdmulh.s32 Q6, Q1, r4
vsub.s32 Q4, Q2, Q3
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q3
vqrdmlah.s32 Q6, Q1, r10
// input[628]: Load as Q3
vldrw.u32 Q3, [Q0, #(4 * 52)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q1, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q1, [r12,#(480)]
// Release input[624] from Q1
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r12,#(416)]
// Release input[608] from Q4
vsub.s32 Q5, Q2, Q7
vstrw.u32 Q5, [r12,#(352)]
// Release input[592] from Q5
vadd.s32 Q2, Q2, Q7
// input[628]: Already loaded as Q3
vqrdmulh.s32 Q1, Q3, r8
// input[612]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 36)]
vmul.u32 Q3, Q3, r7
// input[596]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 20)]
vqrdmlah.s32 Q1, Q3, r10
vstrw.u32 Q2, [r12,#(288)]
// Release input[576] from Q2
vqrdmulh.s32 Q2, Q4, r8
vsub.s32 Q3, Q5, Q1
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q1
vqrdmlah.s32 Q2, Q4, r10
// input[580]: Load as Q1
vldrw.u32 Q1, [Q0, #(4 * 4)]!
vqrdmulh.s32 Q6, Q3, r4
vsub.s32 Q4, Q1, Q2
vmul.u32 Q3, Q3, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q6, Q3, r10
// input[632]: Load as Q2
vldrw.u32 Q2, [Q0, #(4 * 52)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q3, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q3, [r12,#(496)]
// Release input[628] from Q3
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r12,#(432)]
// Release input[612] from Q4
vsub.s32 Q5, Q1, Q7
vstrw.u32 Q5, [r12,#(368)]
// Release input[596] from Q5
vadd.s32 Q1, Q1, Q7
// input[632]: Already loaded as Q2
vqrdmulh.s32 Q3, Q2, r8
// input[616]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 36)]
vmul.u32 Q2, Q2, r7
// input[600]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 20)]
vqrdmlah.s32 Q3, Q2, r10
vstrw.u32 Q1, [r12,#(304)]
// Release input[580] from Q1
vqrdmulh.s32 Q1, Q4, r8
vsub.s32 Q2, Q5, Q3
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q3
vqrdmlah.s32 Q1, Q4, r10
// input[584]: Load as Q3
vldrw.u32 Q3, [Q0, #(4 * 4)]!
vqrdmulh.s32 Q6, Q2, r4
vsub.s32 Q4, Q3, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q3, Q3, Q1
vqrdmlah.s32 Q6, Q2, r10
// input[636]: Load as Q1
vldrw.u32 Q1, [Q0, #(4 * 52)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q2, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q2, [r11,#(-496)]
// Release input[632] from Q2
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r12,#(448)]
// Release input[616] from Q4
vsub.s32 Q5, Q3, Q7
vstrw.u32 Q5, [r12,#(384)]
// Release input[600] from Q5
vadd.s32 Q3, Q3, Q7
// input[636]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[620]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 36)]
vmul.u32 Q1, Q1, r7
// input[604]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 20)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q3, [r12,#(320)]
// Release input[584] from Q3
vqrdmulh.s32 Q3, Q4, r8
vsub.s32 Q1, Q5, Q2
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q2
vqrdmlah.s32 Q3, Q4, r10
// input[588]: Load as Q2
vldrw.u32 Q2, [Q0, #(4 * 4)]!
vqrdmulh.s32 Q6, Q1, r4
vsub.s32 Q4, Q2, Q3
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q3
vqrdmlah.s32 Q6, Q1, r10
// input[688]: Load as Q3
vldrw.u32 Q3, [Q0, #(4 * 100)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q1, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q1, [r11,#(-480)]
// Release input[636] from Q1
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r12,#(464)]
// Release input[620] from Q4
vsub.s32 Q5, Q2, Q7
vstrw.u32 Q5, [r12,#(400)]
// Release input[604] from Q5
vadd.s32 Q2, Q2, Q7
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[688]: Already loaded as Q3
vqrdmulh.s32 Q1, Q3, r8
// input[672]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 84)]
vmul.u32 Q3, Q3, r7
// input[656]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 68)]
vqrdmlah.s32 Q1, Q3, r10
vstrw.u32 Q2, [r12,#(336)]
// Release input[588] from Q2
vqrdmulh.s32 Q2, Q4, r8
vsub.s32 Q3, Q5, Q1
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q1
vqrdmlah.s32 Q2, Q4, r10
// input[640]: Load as Q1
vldrw.u32 Q1, [Q0, #(4 * 52)]!
vqrdmulh.s32 Q6, Q3, r4
vsub.s32 Q4, Q1, Q2
vmul.u32 Q3, Q3, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q6, Q3, r10
// input[692]: Load as Q2
vldrw.u32 Q2, [Q0, #(4 * 52)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q3, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q3, [r11,#(-272)]
// Release input[688] from Q3
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r11,#(-336)]
// Release input[672] from Q4
vsub.s32 Q5, Q1, Q7
vstrw.u32 Q5, [r11,#(-400)]
// Release input[656] from Q5
vadd.s32 Q1, Q1, Q7
// input[692]: Already loaded as Q2
vqrdmulh.s32 Q3, Q2, r8
// input[676]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 36)]
vmul.u32 Q2, Q2, r7
// input[660]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 20)]
vqrdmlah.s32 Q3, Q2, r10
vstrw.u32 Q1, [r11,#(-464)]
// Release input[640] from Q1
vqrdmulh.s32 Q1, Q4, r8
vsub.s32 Q2, Q5, Q3
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q3
vqrdmlah.s32 Q1, Q4, r10
// input[644]: Load as Q3
vldrw.u32 Q3, [Q0, #(4 * 4)]!
vqrdmulh.s32 Q6, Q2, r4
vsub.s32 Q4, Q3, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q3, Q3, Q1
vqrdmlah.s32 Q6, Q2, r10
// input[696]: Load as Q1
vldrw.u32 Q1, [Q0, #(4 * 52)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q2, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q2, [r11,#(-256)]
// Release input[692] from Q2
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r11,#(-320)]
// Release input[676] from Q4
vsub.s32 Q5, Q3, Q7
vstrw.u32 Q5, [r11,#(-384)]
// Release input[660] from Q5
vadd.s32 Q3, Q3, Q7
// input[696]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[680]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 36)]
vmul.u32 Q1, Q1, r7
// input[664]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 20)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q3, [r11,#(-448)]
// Release input[644] from Q3
vqrdmulh.s32 Q3, Q4, r8
vsub.s32 Q1, Q5, Q2
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q2
vqrdmlah.s32 Q3, Q4, r10
// input[648]: Load as Q2
vldrw.u32 Q2, [Q0, #(4 * 4)]!
vqrdmulh.s32 Q6, Q1, r4
vsub.s32 Q4, Q2, Q3
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q3
vqrdmlah.s32 Q6, Q1, r10
// input[700]: Load as Q3
vldrw.u32 Q3, [Q0, #(4 * 52)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q1, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q1, [r11,#(-240)]
// Release input[696] from Q1
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r11,#(-304)]
// Release input[680] from Q4
vsub.s32 Q5, Q2, Q7
vstrw.u32 Q5, [r11,#(-368)]
// Release input[664] from Q5
vadd.s32 Q2, Q2, Q7
// input[700]: Already loaded as Q3
vqrdmulh.s32 Q1, Q3, r8
// input[684]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 36)]
vmul.u32 Q3, Q3, r7
// input[668]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 20)]
vqrdmlah.s32 Q1, Q3, r10
vstrw.u32 Q2, [r11,#(-432)]
// Release input[648] from Q2
vqrdmulh.s32 Q2, Q4, r8
vsub.s32 Q3, Q5, Q1
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q1
vqrdmlah.s32 Q2, Q4, r10
// input[652]: Load as Q1
vldrw.u32 Q1, [Q0, #(4 * 4)]!
vqrdmulh.s32 Q6, Q3, r4
vsub.s32 Q4, Q1, Q2
vmul.u32 Q3, Q3, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q6, Q3, r10
// input[752]: Load as Q2
vldrw.u32 Q2, [Q0, #(4 * 100)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q3, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q3, [r11,#(-224)]
// Release input[700] from Q3
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r11,#(-288)]
// Release input[684] from Q4
vsub.s32 Q5, Q1, Q7
vstrw.u32 Q5, [r11,#(-352)]
// Release input[668] from Q5
vadd.s32 Q1, Q1, Q7
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[752]: Already loaded as Q2
vqrdmulh.s32 Q3, Q2, r8
// input[736]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 84)]
vmul.u32 Q2, Q2, r7
// input[720]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 68)]
vqrdmlah.s32 Q3, Q2, r10
vstrw.u32 Q1, [r11,#(-416)]
// Release input[652] from Q1
vqrdmulh.s32 Q1, Q4, r8
vsub.s32 Q2, Q5, Q3
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q3
vqrdmlah.s32 Q1, Q4, r10
// input[704]: Load as Q3
vldrw.u32 Q3, [Q0, #(4 * 52)]!
vqrdmulh.s32 Q6, Q2, r4
vsub.s32 Q4, Q3, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q3, Q3, Q1
vqrdmlah.s32 Q6, Q2, r10
// input[756]: Load as Q1
vldrw.u32 Q1, [Q0, #(4 * 52)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q2, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q2, [r11,#(-16)]
// Release input[752] from Q2
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r11,#(-80)]
// Release input[736] from Q4
vsub.s32 Q5, Q3, Q7
vstrw.u32 Q5, [r11,#(-144)]
// Release input[720] from Q5
vadd.s32 Q3, Q3, Q7
// input[756]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[740]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 36)]
vmul.u32 Q1, Q1, r7
// input[724]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 20)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q3, [r11,#(-208)]
// Release input[704] from Q3
vqrdmulh.s32 Q3, Q4, r8
vsub.s32 Q1, Q5, Q2
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q2
vqrdmlah.s32 Q3, Q4, r10
// input[708]: Load as Q2
vldrw.u32 Q2, [Q0, #(4 * 4)]!
vqrdmulh.s32 Q6, Q1, r4
vsub.s32 Q4, Q2, Q3
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q3
vqrdmlah.s32 Q6, Q1, r10
// input[760]: Load as Q3
vldrw.u32 Q3, [Q0, #(4 * 52)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q1, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q1, [r11,#(0)]
// Release input[756] from Q1
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r11,#(-64)]
// Release input[740] from Q4
vsub.s32 Q5, Q2, Q7
vstrw.u32 Q5, [r11,#(-128)]
// Release input[724] from Q5
vadd.s32 Q2, Q2, Q7
// input[760]: Already loaded as Q3
vqrdmulh.s32 Q1, Q3, r8
// input[744]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 36)]
vmul.u32 Q3, Q3, r7
// input[728]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 20)]
vqrdmlah.s32 Q1, Q3, r10
vstrw.u32 Q2, [r11,#(-192)]
// Release input[708] from Q2
vqrdmulh.s32 Q2, Q4, r8
vsub.s32 Q3, Q5, Q1
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q1
vqrdmlah.s32 Q2, Q4, r10
// input[712]: Load as Q1
vldrw.u32 Q1, [Q0, #(4 * 4)]!
vqrdmulh.s32 Q6, Q3, r4
vsub.s32 Q4, Q1, Q2
vmul.u32 Q3, Q3, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q6, Q3, r10
// input[764]: Load as Q2
vldrw.u32 Q2, [Q0, #(4 * 52)]
vqrdmulh.s32 Q7, Q5, r6
vsub.s32 Q3, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q3, [r11,#(16)]
// Release input[760] from Q3
vqrdmlah.s32 Q7, Q5, r10
vstrw.u32 Q4, [r11,#(-48)]
// Release input[744] from Q4
vsub.s32 Q5, Q1, Q7
vstrw.u32 Q5, [r11,#(-112)]
// Release input[728] from Q5
vadd.s32 Q1, Q1, Q7
// input[764]: Already loaded as Q2
vqrdmulh.s32 Q3, Q2, r8
// input[748]: Load as Q4
vldrw.u32 Q4, [Q0, #(4 * 36)]
vmul.u32 Q2, Q2, r7
// input[732]: Load as Q5
vldrw.u32 Q5, [Q0, #(4 * 20)]
vqrdmlah.s32 Q3, Q2, r10
vstrw.u32 Q1, [r11,#(-176)]
// Release input[712] from Q1
vqrdmulh.s32 Q1, Q4, r8
vsub.s32 Q2, Q5, Q3
vmul.u32 Q4, Q4, r7
vadd.s32 Q5, Q5, Q3
vqrdmlah.s32 Q1, Q4, r10
// input[716]: Load as Q3
vldrw.u32 Q3, [Q0, #(4 * 4)]!
vqrdmulh.s32 Q6, Q2, r4
vsub.s32 Q4, Q3, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q3, Q3, Q1
vqrdmlah.s32 Q6, Q2, r10
vqrdmulh.s32 Q1, Q5, r6
vsub.s32 Q2, Q4, Q6
vmul.u32 Q5, Q5, r5
vadd.s32 Q4, Q4, Q6
vstrw.u32 Q2, [r11,#(32)]
// Release input[764] from Q2
vqrdmlah.s32 Q1, Q5, r10
vstrw.u32 Q4, [r11,#(-32)]
// Release input[748] from Q4
vsub.s32 Q5, Q3, Q1
vstrw.u32 Q5, [r11,#(-96)]
// Release input[732] from Q5
vadd.s32 Q3, Q3, Q1
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[12]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 12)]
vqrdmulh.s32 Q1, Q0, r8
// input[8]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 8)]
vmul.u32 Q0, Q0, r7
// input[4]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 4)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q3, [r11,#(-160)]
// Release input[716] from Q3
vqrdmulh.s32 Q3, Q2, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q2, Q2, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q3, Q2, r10
// input[0]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 0)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q2, Q1, Q3
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q3
vqrdmlah.s32 Q5, Q0, r10
// input[28]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 28)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q2, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q2, Q2, Q5
vstrw.u32 Q0, [r0,#(48)]
// Release input[12] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q2, [r0,#(32)]
// Release input[8] from Q2
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r0,#(16)]
// Release input[4] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[28]: Already loaded as Q3
vqrdmulh.s32 Q0, Q3, r8
// input[24]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 24)]
vmul.u32 Q3, Q3, r7
// input[20]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 20)]
vqrdmlah.s32 Q0, Q3, r10
vstrw.u32 Q1, [r0,#(0)]
// Release input[0] from Q1
vqrdmulh.s32 Q1, Q2, r8
vsub.s32 Q3, Q4, Q0
vmul.u32 Q2, Q2, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q2, r10
// input[16]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 16)]
vqrdmulh.s32 Q5, Q3, r4
vsub.s32 Q2, Q0, Q1
vmul.u32 Q3, Q3, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q3, r10
// input[44]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 44)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q3, Q2, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q2, Q2, Q5
vstrw.u32 Q3, [r0,#(112)]
// Release input[28] from Q3
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q2, [r0,#(96)]
// Release input[24] from Q2
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r0,#(80)]
// Release input[20] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[44]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[40]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 40)]
vmul.u32 Q1, Q1, r7
// input[36]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 36)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r0,#(64)]
// Release input[16] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[32]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 32)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[60]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 60)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r0,#(176)]
// Release input[44] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(160)]
// Release input[40] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(144)]
// Release input[36] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[60]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[56]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 56)]
vmul.u32 Q0, Q0, r7
// input[52]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 52)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r0,#(128)]
// Release input[32] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[48]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 48)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[76]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 76)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r0,#(240)]
// Release input[60] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(224)]
// Release input[56] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r0,#(208)]
// Release input[52] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[76]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[72]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 72)]
vmul.u32 Q2, Q2, r7
// input[68]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 68)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r0,#(192)]
// Release input[48] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[64]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 64)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[92]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 92)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r0,#(304)]
// Release input[76] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(288)]
// Release input[72] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r0,#(272)]
// Release input[68] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[92]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[88]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 88)]
vmul.u32 Q1, Q1, r7
// input[84]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 84)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r0,#(256)]
// Release input[64] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[80]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 80)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[108]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 108)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r0,#(368)]
// Release input[92] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(352)]
// Release input[88] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r0,#(336)]
// Release input[84] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[108]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[104]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 104)]
vmul.u32 Q0, Q0, r7
// input[100]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 100)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r0,#(320)]
// Release input[80] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[96]: Load as Q1
vldrw.u32 Q1, [r0, #(4 * 96)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[124]: Load as Q2
vldrw.u32 Q2, [r0, #(4 * 124)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r0,#(432)]
// Release input[108] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(416)]
// Release input[104] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r0,#(400)]
// Release input[100] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[124]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[120]: Load as Q3
vldrw.u32 Q3, [r0, #(4 * 120)]
vmul.u32 Q2, Q2, r7
// input[116]: Load as Q4
vldrw.u32 Q4, [r0, #(4 * 116)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r0,#(384)]
// Release input[96] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[112]: Load as Q0
vldrw.u32 Q0, [r0, #(4 * 112)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[140]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -112)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r0,#(496)]
// Release input[124] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r0,#(480)]
// Release input[120] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r0,#(464)]
// Release input[116] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[140]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[136]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -116)]
vmul.u32 Q1, Q1, r7
// input[132]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -120)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r0,#(448)]
// Release input[112] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[128]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -124)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[156]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -96)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(-448)]
// Release input[140] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(-464)]
// Release input[136] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-480)]
// Release input[132] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[156]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[152]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -100)]
vmul.u32 Q0, Q0, r7
// input[148]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -104)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r14,#(-496)]
// Release input[128] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[144]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -108)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[172]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -80)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-384)]
// Release input[156] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(-400)]
// Release input[152] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(-416)]
// Release input[148] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[172]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[168]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -84)]
vmul.u32 Q2, Q2, r7
// input[164]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -88)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r14,#(-432)]
// Release input[144] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[160]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -92)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[188]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -64)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(-320)]
// Release input[172] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(-336)]
// Release input[168] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(-352)]
// Release input[164] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[188]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[184]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -68)]
vmul.u32 Q1, Q1, r7
// input[180]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -72)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r14,#(-368)]
// Release input[160] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[176]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -76)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[204]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -48)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(-256)]
// Release input[188] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(-272)]
// Release input[184] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-288)]
// Release input[180] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[204]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[200]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -52)]
vmul.u32 Q0, Q0, r7
// input[196]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -56)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r14,#(-304)]
// Release input[176] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[192]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -60)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[220]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -32)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(-192)]
// Release input[204] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(-208)]
// Release input[200] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(-224)]
// Release input[196] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[220]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[216]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -36)]
vmul.u32 Q2, Q2, r7
// input[212]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -40)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r14,#(-240)]
// Release input[192] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[208]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * -44)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[236]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -16)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(-128)]
// Release input[220] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(-144)]
// Release input[216] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(-160)]
// Release input[212] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[236]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[232]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -20)]
vmul.u32 Q1, Q1, r7
// input[228]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -24)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r14,#(-176)]
// Release input[208] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[224]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * -28)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[252]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 0)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(-64)]
// Release input[236] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(-80)]
// Release input[232] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(-96)]
// Release input[228] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[252]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[248]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * -4)]
vmul.u32 Q0, Q0, r7
// input[244]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * -8)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r14,#(-112)]
// Release input[224] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[240]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * -12)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[268]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 16)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(0)]
// Release input[252] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(-16)]
// Release input[248] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(-32)]
// Release input[244] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[268]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[264]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 12)]
vmul.u32 Q2, Q2, r7
// input[260]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 8)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r14,#(-48)]
// Release input[240] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[256]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 4)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[284]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 32)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(64)]
// Release input[268] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(48)]
// Release input[264] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(32)]
// Release input[260] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[284]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[280]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 28)]
vmul.u32 Q1, Q1, r7
// input[276]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 24)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r14,#(16)]
// Release input[256] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[272]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 20)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[300]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 48)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(128)]
// Release input[284] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(112)]
// Release input[280] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(96)]
// Release input[276] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[300]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[296]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 44)]
vmul.u32 Q0, Q0, r7
// input[292]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 40)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r14,#(80)]
// Release input[272] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[288]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 36)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[316]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 64)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(192)]
// Release input[300] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(176)]
// Release input[296] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(160)]
// Release input[292] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[316]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[312]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 60)]
vmul.u32 Q2, Q2, r7
// input[308]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 56)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r14,#(144)]
// Release input[288] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[304]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 52)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[332]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 80)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(256)]
// Release input[316] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(240)]
// Release input[312] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(224)]
// Release input[308] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[332]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[328]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 76)]
vmul.u32 Q1, Q1, r7
// input[324]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 72)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r14,#(208)]
// Release input[304] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[320]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 68)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[348]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 96)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r14,#(320)]
// Release input[332] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(304)]
// Release input[328] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(288)]
// Release input[324] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[348]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[344]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 92)]
vmul.u32 Q0, Q0, r7
// input[340]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 88)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r14,#(272)]
// Release input[320] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[336]: Load as Q1
vldrw.u32 Q1, [r14, #(4 * 84)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[364]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 112)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r14,#(384)]
// Release input[348] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(368)]
// Release input[344] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r14,#(352)]
// Release input[340] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[364]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[360]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 108)]
vmul.u32 Q2, Q2, r7
// input[356]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 104)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r14,#(336)]
// Release input[336] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[352]: Load as Q0
vldrw.u32 Q0, [r14, #(4 * 100)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[380]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -124)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r14,#(448)]
// Release input[364] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(432)]
// Release input[360] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r14,#(416)]
// Release input[356] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[380]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[376]: Load as Q3
vldrw.u32 Q3, [r14, #(4 * 124)]
vmul.u32 Q1, Q1, r7
// input[372]: Load as Q4
vldrw.u32 Q4, [r14, #(4 * 120)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r14,#(400)]
// Release input[352] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[368]: Load as Q2
vldrw.u32 Q2, [r14, #(4 * 116)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[396]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -108)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(-496)]
// Release input[380] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r14,#(496)]
// Release input[376] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r14,#(480)]
// Release input[372] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[396]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[392]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -112)]
vmul.u32 Q0, Q0, r7
// input[388]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -116)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r14,#(464)]
// Release input[368] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[384]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -120)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[412]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -92)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r12,#(-432)]
// Release input[396] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-448)]
// Release input[392] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(-464)]
// Release input[388] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[412]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[408]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -96)]
vmul.u32 Q2, Q2, r7
// input[404]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -100)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r12,#(-480)]
// Release input[384] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[400]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -104)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[428]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -76)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(-368)]
// Release input[412] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-384)]
// Release input[408] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(-400)]
// Release input[404] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[428]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[424]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -80)]
vmul.u32 Q1, Q1, r7
// input[420]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -84)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r12,#(-416)]
// Release input[400] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[416]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -88)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[444]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -60)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(-304)]
// Release input[428] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-320)]
// Release input[424] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(-336)]
// Release input[420] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[444]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[440]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -64)]
vmul.u32 Q0, Q0, r7
// input[436]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -68)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(-352)]
// Release input[416] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[432]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -72)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[460]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -44)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r12,#(-240)]
// Release input[444] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-256)]
// Release input[440] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(-272)]
// Release input[436] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[460]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[456]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -48)]
vmul.u32 Q2, Q2, r7
// input[452]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -52)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r12,#(-288)]
// Release input[432] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[448]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -56)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[476]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -28)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(-176)]
// Release input[460] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-192)]
// Release input[456] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(-208)]
// Release input[452] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[476]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[472]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -32)]
vmul.u32 Q1, Q1, r7
// input[468]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -36)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r12,#(-224)]
// Release input[448] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[464]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * -40)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[492]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -12)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(-112)]
// Release input[476] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-128)]
// Release input[472] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(-144)]
// Release input[468] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[492]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[488]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * -16)]
vmul.u32 Q0, Q0, r7
// input[484]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -20)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(-160)]
// Release input[464] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[480]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * -24)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[508]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 4)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r12,#(-48)]
// Release input[492] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(-64)]
// Release input[488] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(-80)]
// Release input[484] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[508]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[504]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 0)]
vmul.u32 Q2, Q2, r7
// input[500]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * -4)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r12,#(-96)]
// Release input[480] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[496]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * -8)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[524]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 20)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(16)]
// Release input[508] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(0)]
// Release input[504] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(-16)]
// Release input[500] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[524]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[520]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 16)]
vmul.u32 Q1, Q1, r7
// input[516]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 12)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r12,#(-32)]
// Release input[496] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[512]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 8)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[540]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * 36)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(80)]
// Release input[524] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(64)]
// Release input[520] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(48)]
// Release input[516] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[540]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[536]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 32)]
vmul.u32 Q0, Q0, r7
// input[532]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 28)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(32)]
// Release input[512] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[528]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 24)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[556]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 52)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r12,#(144)]
// Release input[540] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(128)]
// Release input[536] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(112)]
// Release input[532] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[556]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[552]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 48)]
vmul.u32 Q2, Q2, r7
// input[548]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 44)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r12,#(96)]
// Release input[528] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[544]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * 40)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[572]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 68)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(208)]
// Release input[556] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(192)]
// Release input[552] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(176)]
// Release input[548] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[572]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[568]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 64)]
vmul.u32 Q1, Q1, r7
// input[564]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 60)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r12,#(160)]
// Release input[544] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[560]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 56)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[588]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * 84)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(272)]
// Release input[572] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(256)]
// Release input[568] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(240)]
// Release input[564] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[588]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[584]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 80)]
vmul.u32 Q0, Q0, r7
// input[580]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 76)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(224)]
// Release input[560] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[576]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 72)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[604]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 100)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r12,#(336)]
// Release input[588] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(320)]
// Release input[584] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(304)]
// Release input[580] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[604]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[600]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 96)]
vmul.u32 Q2, Q2, r7
// input[596]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 92)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r12,#(288)]
// Release input[576] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[592]: Load as Q0
vldrw.u32 Q0, [r12, #(4 * 88)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[620]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 116)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r12,#(400)]
// Release input[604] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(384)]
// Release input[600] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r12,#(368)]
// Release input[596] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[620]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[616]: Load as Q3
vldrw.u32 Q3, [r12, #(4 * 112)]
vmul.u32 Q1, Q1, r7
// input[612]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 108)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r12,#(352)]
// Release input[592] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[608]: Load as Q2
vldrw.u32 Q2, [r12, #(4 * 104)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[636]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * -120)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r12,#(464)]
// Release input[620] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r12,#(448)]
// Release input[616] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r12,#(432)]
// Release input[612] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[636]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[632]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -124)]
vmul.u32 Q0, Q0, r7
// input[628]: Load as Q4
vldrw.u32 Q4, [r12, #(4 * 124)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r12,#(416)]
// Release input[608] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[624]: Load as Q1
vldrw.u32 Q1, [r12, #(4 * 120)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[652]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -104)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r11,#(-480)]
// Release input[636] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r11,#(-496)]
// Release input[632] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r12,#(496)]
// Release input[628] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[652]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[648]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -108)]
vmul.u32 Q2, Q2, r7
// input[644]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -112)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r12,#(480)]
// Release input[624] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[640]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * -116)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[668]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -88)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r11,#(-416)]
// Release input[652] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r11,#(-432)]
// Release input[648] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-448)]
// Release input[644] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[668]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[664]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -92)]
vmul.u32 Q1, Q1, r7
// input[660]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -96)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r11,#(-464)]
// Release input[640] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[656]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -100)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[684]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * -72)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-352)]
// Release input[668] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r11,#(-368)]
// Release input[664] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r11,#(-384)]
// Release input[660] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[684]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[680]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -76)]
vmul.u32 Q0, Q0, r7
// input[676]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -80)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r11,#(-400)]
// Release input[656] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[672]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -84)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[700]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -56)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r11,#(-288)]
// Release input[684] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r11,#(-304)]
// Release input[680] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r11,#(-320)]
// Release input[676] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[700]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[696]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -60)]
vmul.u32 Q2, Q2, r7
// input[692]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -64)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r11,#(-336)]
// Release input[672] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[688]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * -68)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[716]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -40)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r11,#(-224)]
// Release input[700] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r11,#(-240)]
// Release input[696] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-256)]
// Release input[692] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[716]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[712]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -44)]
vmul.u32 Q1, Q1, r7
// input[708]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -48)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r11,#(-272)]
// Release input[688] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[704]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -52)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
// input[732]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * -24)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(-160)]
// Release input[716] from Q1
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r11,#(-176)]
// Release input[712] from Q3
vsub.s32 Q4, Q2, Q6
vstrw.u32 Q4, [r11,#(-192)]
// Release input[708] from Q4
vadd.s32 Q2, Q2, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[732]: Already loaded as Q0
vqrdmulh.s32 Q1, Q0, r8
// input[728]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -28)]
vmul.u32 Q0, Q0, r7
// input[724]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -32)]
vqrdmlah.s32 Q1, Q0, r10
vstrw.u32 Q2, [r11,#(-208)]
// Release input[704] from Q2
vqrdmulh.s32 Q2, Q3, r8
vsub.s32 Q0, Q4, Q1
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q1
vqrdmlah.s32 Q2, Q3, r10
// input[720]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * -36)]
vqrdmulh.s32 Q5, Q0, r4
vsub.s32 Q3, Q1, Q2
vmul.u32 Q0, Q0, r3
vadd.s32 Q1, Q1, Q2
vqrdmlah.s32 Q5, Q0, r10
// input[748]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -8)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q0, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q0, [r11,#(-96)]
// Release input[732] from Q0
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r11,#(-112)]
// Release input[728] from Q3
vsub.s32 Q4, Q1, Q6
vstrw.u32 Q4, [r11,#(-128)]
// Release input[724] from Q4
vadd.s32 Q1, Q1, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[748]: Already loaded as Q2
vqrdmulh.s32 Q0, Q2, r8
// input[744]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * -12)]
vmul.u32 Q2, Q2, r7
// input[740]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * -16)]
vqrdmlah.s32 Q0, Q2, r10
vstrw.u32 Q1, [r11,#(-144)]
// Release input[720] from Q1
vqrdmulh.s32 Q1, Q3, r8
vsub.s32 Q2, Q4, Q0
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q0
vqrdmlah.s32 Q1, Q3, r10
// input[736]: Load as Q0
vldrw.u32 Q0, [r11, #(4 * -20)]
vqrdmulh.s32 Q5, Q2, r4
vsub.s32 Q3, Q0, Q1
vmul.u32 Q2, Q2, r3
vadd.s32 Q0, Q0, Q1
vqrdmlah.s32 Q5, Q2, r10
// input[764]: Load as Q1
vldrw.u32 Q1, [r11, #(4 * 8)]
vqrdmulh.s32 Q6, Q4, r6
vsub.s32 Q2, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q2, [r11,#(-32)]
// Release input[748] from Q2
vqrdmlah.s32 Q6, Q4, r10
vstrw.u32 Q3, [r11,#(-48)]
// Release input[744] from Q3
vsub.s32 Q4, Q0, Q6
vstrw.u32 Q4, [r11,#(-64)]
// Release input[740] from Q4
vadd.s32 Q0, Q0, Q6
ldrd r8, r7, [r9], #+8
ldrd r6, r5, [r9], #+8
ldrd r4, r3, [r9], #+8
// input[764]: Already loaded as Q1
vqrdmulh.s32 Q2, Q1, r8
// input[760]: Load as Q3
vldrw.u32 Q3, [r11, #(4 * 4)]
vmul.u32 Q1, Q1, r7
// input[756]: Load as Q4
vldrw.u32 Q4, [r11, #(4 * 0)]
vqrdmlah.s32 Q2, Q1, r10
vstrw.u32 Q0, [r11,#(-80)]
// Release input[736] from Q0
vqrdmulh.s32 Q0, Q3, r8
vsub.s32 Q1, Q4, Q2
vmul.u32 Q3, Q3, r7
vadd.s32 Q4, Q4, Q2
vqrdmlah.s32 Q0, Q3, r10
// input[752]: Load as Q2
vldrw.u32 Q2, [r11, #(4 * -4)]
vqrdmulh.s32 Q5, Q1, r4
vsub.s32 Q3, Q2, Q0
vmul.u32 Q1, Q1, r3
vadd.s32 Q2, Q2, Q0
vqrdmlah.s32 Q5, Q1, r10
vqrdmulh.s32 Q0, Q4, r6
vsub.s32 Q1, Q3, Q5
vmul.u32 Q4, Q4, r5
vadd.s32 Q3, Q3, Q5
vstrw.u32 Q1, [r11,#(32)]
// Release input[764] from Q1
vqrdmlah.s32 Q0, Q4, r10
vstrw.u32 Q3, [r11,#(16)]
// Release input[760] from Q3
vsub.s32 Q4, Q2, Q0
vstrw.u32 Q4, [r11,#(0)]
// Release input[756] from Q4
vadd.s32 Q2, Q2, Q0
vstrw.u32 Q2, [r11,#(-16)]
// Release input[752] from Q2
.equ modulus_inv, 3919317503
movw r8, #:lower16:modulus_inv
movt r8, #:upper16:modulus_inv
// Restore MVE vector registers
vpop {d8-d15}
// Restore GPRs
pop {r4-r11,lr}
bx lr

// Line count:        7346
// Instruction count: 5662